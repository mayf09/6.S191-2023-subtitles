1
00:00:09,160 --> 00:00:10,755
0,470 470,635 635,800 800,1090 1230,1595
Robotics is a really cool
机器人学是未来一个非常酷和重要的方向，

2
00:00:10,755 --> 00:00:12,450
0,330 330,695 805,1205 1285,1545 1545,1695
and important direction for the

3
00:00:12,450 --> 00:00:14,660
0,290 640,1040 1210,1605 1605,1905 1905,2210
future,| {} I I really
|我相信我们正在走向一个这样一个世界，

4
00:00:14,770 --> 00:00:16,520
0,350 350,700 1020,1280 1280,1445 1445,1750
believe that we are moving

5
00:00:17,110 --> 00:00:19,110
0,400 510,815 815,1120 1230,1630 1680,2000
towards a world,| where so
|很多日常工作都从你的盘子里消失，

6
00:00:19,110 --> 00:00:20,895
0,255 255,590 670,1070 1180,1485 1485,1785
many routine tasks are taken

7
00:00:20,895 --> 00:00:23,325
0,330 330,570 570,875 1525,1925 2065,2430
off your plate,| fresh produce
|新鲜的农产品出现在你的门口，由无人机运送，

8
00:00:23,325 --> 00:00:24,780
0,365 535,855 855,1080 1080,1260 1260,1455
turn turns up at your

9
00:00:24,780 --> 00:00:27,735
0,780 780,1110 1110,1440 1440,1820 2380,2955
doorsteps delivered by drones,| garbage
|垃圾桶会自己倒出来，

10
00:00:27,735 --> 00:00:30,020
0,330 330,695 745,1065 1065,1385 1885,2285
bins take themselves out, {}|
|

11
00:00:30,160 --> 00:00:32,715
0,400 690,1090 1470,2135 2135,2405 2405,2555
smart infrastructure ensures that the
智能基础设施确保垃圾被清除，

12
00:00:32,715 --> 00:00:35,985
0,465 465,785 1165,1565 2095,2735 2905,3270
garbage gets removed,| robots help
|机器人帮助回收、搁置和清洁窗户，

13
00:00:35,985 --> 00:00:38,655
0,365 415,1395 1395,1635 1635,2225 2335,2670
with recycling, with shelving, with

14
00:00:38,655 --> 00:00:41,080
0,315 315,695
cleaning windows,|
|

15
00:00:41,770 --> 00:00:43,260
0,575 575,830 830,1025 1025,1235 1235,1490
robots can do so many
机器人可以为我们做很多物理上的事情，

16
00:00:43,260 --> 00:00:44,595
0,350 430,795 795,1005 1005,1155 1155,1335
physical things for us.| And
|顺便问一下，

17
00:00:44,595 --> 00:00:45,810
0,165 165,315 315,575 715,1005 1005,1215
by the way,| can you
|你能数一下在这张图片中有多少个机器人吗，

18
00:00:45,810 --> 00:00:47,415
0,285 285,525 525,795 795,1350 1350,1605
count how many robots there

19
00:00:47,415 --> 00:00:48,855
0,240 240,495 495,785 955,1230 1230,1440
are in this, in this

20
00:00:48,855 --> 00:00:51,135
0,335 895,1295 1705,1995 1995,2145 2145,2280
image,| anybody want to take
|有人想猜一下吗，

21
00:00:51,135 --> 00:00:53,385
0,135 135,395 1375,1635 1635,1800 1800,2250
a guess,| how many robots
|在这张图中，我有多少个机器人？

22
00:00:53,385 --> 00:00:54,180
0,210 210,330 330,495 495,645 645,795
do I have in this

23
00:00:54,180 --> 00:00:55,300
0,290
image?|
|

24
00:00:59,690 --> 00:01:00,880
0,290 290,530 530,635 635,920 920,1190
Okay, that, so that's, that's
好的，这很接近了，

25
00:01:00,880 --> 00:01:02,455
0,240 240,620 820,1110 1110,1335 1335,1575
really close,| it, it turns
|结果是 19 个，

26
00:01:02,455 --> 00:01:04,030
0,270 270,600 600,875 1165,1440 1440,1575
out it's 19,| so here
|所有的机器人都在这里，

27
00:01:04,030 --> 00:01:05,035
0,120 120,270 270,420 420,780 780,1005
are all the robots,| we
|我们有会飞的机器人，

28
00:01:05,035 --> 00:01:07,350
0,275 715,1080 1080,1625 1735,2025 2025,2315
have flying robots,| we have
|我们有汽车，

29
00:01:07,370 --> 00:01:09,205
0,400 510,785 785,1055 1055,1450 1470,1835
cars,| we have shopping cart
|我们有购物车机器人，

30
00:01:09,205 --> 00:01:11,245
0,525 525,765 765,945 945,1415 1705,2040
robots,| we have robots that
|我们有搬运的机器人，

31
00:01:11,245 --> 00:01:12,745
0,330 330,600 600,780 780,1200 1200,1500
carry,| we have robots that
|我们在那个架子上有机器人，

32
00:01:12,745 --> 00:01:15,010
0,365 385,660 660,900 900,1445 1885,2265
shelf,| we have robots that
|我们有清洁机器人。

33
00:01:15,010 --> 00:01:16,590
0,380 730,990 990,1110 1110,1275 1275,1580
clean.| And so I really
|所以，我真的相信，

34
00:01:16,670 --> 00:01:18,120
0,395 395,725 725,980 980,1175 1175,1450
believe,| that in the future
|在未来，我们将有人工智能的帮助，

35
00:01:18,710 --> 00:01:20,940
0,275 275,455 455,760 840,1240 1830,2230
we will have AI assistance,|
|

36
00:01:21,200 --> 00:01:23,590
0,400 540,800 800,965 965,1720 2070,2390
whether they are embodied or
无论它们是否体现，

37
00:01:23,590 --> 00:01:25,750
0,320 1030,1320 1320,1610 1630,1935 1935,2160
not,| to act as our
|作为我们的守护天使，

38
00:01:25,750 --> 00:01:28,860
0,570 570,1130 1780,2145 2145,2510 2710,3110
guardian angels| to provide advice
|提供建议，以确保，

39
00:01:28,910 --> 00:01:31,380
0,400 420,820 870,1235 1235,1600 1620,2470
to ensure that,| we maximize
|我们最大化和优化我们的生活，

40
00:01:31,430 --> 00:01:33,310
0,400 420,905 905,1190 1190,1510 1620,1880
and optimize our lives,| to
|生活得好和工作有效。

41
00:01:33,310 --> 00:01:34,950
0,180 180,500 520,840 840,1160 1240,1640
live well and work effectively.|
|

42
00:01:35,360 --> 00:01:36,670
0,275 275,440 440,730 840,1115 1115,1310
And these agents will help
这些代理将帮助我们进行认知和体力工作。

43
00:01:36,670 --> 00:01:38,940
0,320 370,675 675,1370 1510,1890 1890,2270
us with cognitive and physical

44
00:01:39,590 --> 00:01:43,480
0,400 1500,1865 1865,2230 2640,3040 3600,3890
work.| And so today, we
|所以，今天我们可以说，

45
00:01:43,480 --> 00:01:46,140
0,225 225,525 525,890 1630,2030 2260,2660
can say that,| with AI
|有了人工智能，我们将看到如此广泛的应用，

46
00:01:47,030 --> 00:01:49,045
0,400 1200,1475 1475,1625 1625,1805 1805,2015
we will see such a

47
00:01:49,045 --> 00:01:51,420
0,305 655,1110 1110,1385 1465,1865 1975,2375
wide breadth of applications,| for
|例如，这些技术有可能减少和消除车祸，

48
00:01:51,440 --> 00:01:54,475
0,400 930,1265 1265,1600 2370,2720 2720,3035
instance, these technologies have the

49
00:01:54,475 --> 00:01:56,485
0,365 475,825 825,1155 1155,1470 1470,2010
potential to reduce and eliminate

50
00:01:56,485 --> 00:01:58,210
0,330 330,935 955,1245 1245,1455 1455,1725
car accidents,| they have the
|它们有可能更好地诊断监测和治疗疾病，

51
00:01:58,210 --> 00:01:59,920
0,350 430,705 705,960 960,1670
potential to better diagnose

52
00:01:59,920 --> 00:02:01,795
0,260 610,930 930,1250 1270,1620 1620,1875
monitor and treat disease| as
|正如你在之前的一些讲座中看到的那样，

53
00:02:01,795 --> 00:02:02,800
0,165 165,360 360,600 600,810 810,1005
you have seen in some

54
00:02:02,800 --> 00:02:05,340
0,195 195,390 390,680 1420,2090 2140,2540
of the previous lectures,| we,
|这些技术有可能，

55
00:02:05,630 --> 00:02:07,500
0,305 305,610 930,1250 1250,1520 1520,1870
these technologies have the potential|
|

56
00:02:07,910 --> 00:02:09,670
0,290 290,470 470,760 870,1270 1380,1760
to keep your information private
保持你的信息隐私和安全，

57
00:02:09,670 --> 00:02:12,130
0,330 330,680 1210,1530 1530,1850 2140,2460
and safe,| to transport people
|更有效、更快、更便宜地运输人员和货物，

58
00:02:12,130 --> 00:02:15,090
0,210 210,500 550,950 1630,2030 2560,2960
and goods more effectively and

59
00:02:15,530 --> 00:02:17,425
0,400 480,800 800,1120 1440,1700 1700,1895
faster and cheaper,| to really
|通过提供即时翻译来真正使全球沟通变得更容易，

60
00:02:17,425 --> 00:02:18,960
0,240 240,420 420,695 895,1215 1215,1535
make it easier to communicate

61
00:02:19,280 --> 00:02:22,620
0,635 635,940 960,1355 1355,2440 2640,3340
globally by providing instantaneous translations|
|

62
00:02:23,240 --> 00:02:25,375
0,400 420,755 755,1025 1025,1360 1740,2135
to, to develop education to
为每个人发展教育，

63
00:02:25,375 --> 00:02:27,240
0,300 300,510 510,810 810,1205 1465,1865
everyone,| to allow human workers
|让人类工作人员专注于宏大的任务，

64
00:02:27,830 --> 00:02:29,520
0,290 290,580 600,1000 1020,1355 1355,1690
to focus on big picture

65
00:02:29,660 --> 00:02:32,070
0,400 840,1235 1235,1625 1625,2015 2015,2410
tasks| with machines taking on
|让机器承担日常任务。

66
00:02:32,120 --> 00:02:34,015
0,275 275,550 600,1000 1500,1775 1775,1895
the routine tasks.| And so
|所以，这一未来是由三个相互关联的领域实现的，

67
00:02:34,015 --> 00:02:35,580
0,210 210,570 570,855 855,1080 1080,1565
this future is really enabled

68
00:02:35,690 --> 00:02:38,575
0,400 450,755 755,1715 1715,2020 2640,2885
by three interconnected fields| and
|一方面我们有机器人，

69
00:02:38,575 --> 00:02:39,550
0,135 135,330 330,555 555,750 750,975
on one hand we have

70
00:02:39,550 --> 00:02:41,365
0,530 550,840 840,1340 1360,1635 1635,1815
robots,| now robots, I like
|我喜欢把机器人看作是一台机器，

71
00:02:41,365 --> 00:02:42,660
0,165 165,285 285,420 420,875 895,1295
to think of robots as

72
00:02:43,130 --> 00:02:44,910
0,365 365,730 750,1130 1130,1445 1445,1780
as the machines,| that put
|它让计算运转起来，

73
00:02:44,990 --> 00:02:47,310
0,580 690,980 980,1270 1680,2000 2000,2320
computing in motion| and give
|让我们在世界上的机器具有导航和操纵世界的能力，

74
00:02:48,020 --> 00:02:49,990
0,320 320,640 840,1240 1470,1790 1790,1970
give our our machines in

75
00:02:49,990 --> 00:02:51,880
0,135 135,360 360,600 600,890 1630,1890
the world the ability to

76
00:02:51,880 --> 00:02:54,700
0,590 1720,2025 2025,2175 2175,2670 2670,2820
navigate and to manipulate the

77
00:02:54,700 --> 00:02:56,940
0,260 760,1035 1035,1310 1450,1845 1845,2240
world,| we have artificial intelligence,|
|我们有人工智能，|

78
00:02:57,980 --> 00:02:59,920
0,320 320,760 990,1390 1410,1730 1730,1940
which enables machines to see
它能让机器像人一样看到、听到、交流和做出决定，

79
00:03:00,090 --> 00:03:01,930
0,290 290,580 870,1235 1235,1520 1520,1840
To hear and to communicate

80
00:03:02,010 --> 00:03:03,725
0,260 260,380 380,635 635,1030 1380,1715
and to make decisions like

81
00:03:03,725 --> 00:03:05,255
0,335 775,1035 1035,1170 1170,1290 1290,1530
humans,| and then we have
|然后我们有机器学习，

82
00:03:05,255 --> 00:03:06,720
0,270 270,545
machine learning,|
|

83
00:03:06,720 --> 00:03:07,940
0,270 270,450 450,690 690,945 945,1220
and to me, machine learning
对我来说，机器学习是关于从数据中学习并做出预测，

84
00:03:07,990 --> 00:03:10,410
0,350 350,700 1110,1510 1560,1960 2070,2420
is about {} learning from

85
00:03:10,410 --> 00:03:12,740
0,240 240,530 550,1340 1360,1760 1930,2330
and making predictions on data,|
|

86
00:03:13,330 --> 00:03:15,470
0,400 570,970 1290,1610 1610,1835 1835,2140
and this, this kind of
机器学习的这种应用是广泛的，

87
00:03:16,030 --> 00:03:17,595
0,350 350,680 680,935 935,1210 1230,1565
application of machine learning is

88
00:03:17,595 --> 00:03:19,755
0,335 445,845 1165,1515 1515,1890 1890,2160
broad,| it, it applies to
|它适用于认知任务，

89
00:03:19,755 --> 00:03:21,945
0,540 540,845 895,1230 1230,1625 1915,2190
cognitive tasks,| it applies to
|它适用于物理任务，

90
00:03:21,945 --> 00:03:24,390
0,275 415,815 1285,1685 1735,2135 2185,2445
physical tasks,| but regardless of
|但不管任务是什么，

91
00:03:24,390 --> 00:03:26,720
0,165 165,470 850,1155 1155,1440 1440,2330
the tasks,| we can characterize
|我们可以描述机器学习如何使用数据工作，

92
00:03:27,010 --> 00:03:29,030
0,400 420,770 770,1115 1115,1510 1620,2020
how machine learning works as

93
00:03:29,140 --> 00:03:32,060
0,400 840,1235 1235,1630 2400,2660 2660,2920
{} using data| to answer
|来回答描述性、预测性或说明性的问题，

94
00:03:32,140 --> 00:03:34,550
0,400 630,905 905,1070 1070,1360 1770,2410
questions that are either descriptive,

95
00:03:34,780 --> 00:03:37,785
0,785 785,1175 1175,2020 2400,2765 2765,3005
predictive or prescriptive,| so you
|所以你可以查看数据，

96
00:03:37,785 --> 00:03:39,000
0,135 135,255 255,420 420,725 895,1215
can look at data| to
|看看发生了什么，或者这是什么，

97
00:03:39,000 --> 00:03:40,650
0,285 285,570 570,890 1120,1440 1440,1650
see what happened or to

98
00:03:40,650 --> 00:03:42,360
0,210 210,390 390,555 555,860 1450,1710
see what is this,| you
|你可以查看数据，

99
00:03:42,360 --> 00:03:43,710
0,135 135,285 285,465 465,770 1030,1350
can look at data| to
|看看未来会发生什么，

100
00:03:43,710 --> 00:03:44,925
0,285 285,555 555,735 735,975 975,1215
see what will happen in

101
00:03:44,925 --> 00:03:46,425
0,165 165,455 835,1125 1125,1320 1320,1500
the future| and what the
|未来世界可能是什么样子，

102
00:03:46,425 --> 00:03:47,535
0,240 240,525 525,735 735,930 930,1110
world might look like in

103
00:03:47,535 --> 00:03:49,455
0,150 150,425 1165,1515 1515,1755 1755,1920
the future,| or you can
|或者你可以用数据来问我应该去哪里，我应该做什么。

104
00:03:49,455 --> 00:03:52,070
0,195 195,515 835,1235 1345,1745 2215,2615
use data to ask where

105
00:03:52,090 --> 00:03:53,220
0,245 245,395 395,635 635,920 920,1130
should I go, what should

106
00:03:53,220 --> 00:03:54,260
0,165 165,470
I do.|
|

107
00:03:55,300 --> 00:03:56,460
0,200

108
00:03:56,550 --> 00:03:58,580
0,320 320,640 900,1250 1250,1600 1680,2030
And so when we think
所以，当我们在机器人的背景下思考这些问题时，

109
00:03:58,580 --> 00:04:00,140
0,240 240,480 480,830 1060,1365 1365,1560
about these questions in the

110
00:04:00,140 --> 00:04:02,480
0,290 490,795 795,1100 1300,1700 2080,2340
context of a robot,| we
|我们必须在机器人是什么的问题上达成一致。

111
00:04:02,480 --> 00:04:03,680
0,225 225,590 640,900 900,1050 1050,1200
have to, we have to

112
00:04:03,680 --> 00:04:04,400
0,135 135,270 270,405 405,555 555,720
kind of get on the

113
00:04:04,400 --> 00:04:06,140
0,225 225,560 820,1215 1215,1500 1500,1740
same page about what a

114
00:04:06,140 --> 00:04:08,140
0,270 270,540 540,890 1300,1650 1650,2000
robot is.| And, and so
|所以，可以把机器人想象成一个可编程的机械设备，

115
00:04:08,310 --> 00:04:09,560
0,290 290,440 440,650 650,965 965,1250
think of a robot as

116
00:04:09,560 --> 00:04:12,620
0,210 210,945 945,1605 1605,1970 2740,3060
a programmable mechanical device,| that
|它通过传感器接受输入，

117
00:04:12,620 --> 00:04:15,460
0,320 520,920 1600,1920 1920,2175 2175,2840
takes input with its sensors,|
|

118
00:04:15,840 --> 00:04:17,735
0,400 570,890 890,1210 1260,1640 1640,1895
reasons about this input,| and
对输入进行推理，|然后在物理世界中产生一个动作。

119
00:04:17,735 --> 00:04:19,775
0,210 210,845 1135,1410 1410,1685 1765,2040
then generates an action in

120
00:04:19,775 --> 00:04:22,880
0,150 150,425 565,965 2335,2640 2640,3105
the physical world.| And robots
|机器人是由身体和大脑组成的，

121
00:04:22,880 --> 00:04:24,070
0,255 255,525 525,780 780,915 915,1190
are made of a body

122
00:04:24,240 --> 00:04:25,660
0,275 275,425 425,700
and the brain,|
|

123
00:04:25,830 --> 00:04:28,720
0,260 260,520 1530,2000 2000,2150 2150,2890
the body consisting of actuators
身体由执行器和传感器组成，

124
00:04:28,740 --> 00:04:31,690
0,335 335,970 1800,2200 2370,2660 2660,2950
and sensors| determine the range
|决定了机器人可以完成的任务范围，

125
00:04:31,740 --> 00:04:33,250
0,320 320,640 690,965 965,1175 1175,1510
of tasks that the robot

126
00:04:33,870 --> 00:04:35,345
0,305 305,560 560,905 905,1235 1235,1475
can do,| so the robot
|机器人只能做它的身体能够做的事情，

127
00:04:35,345 --> 00:04:36,350
0,180 180,420 420,675 675,825 825,1005
can only do what its

128
00:04:36,350 --> 00:04:37,690
0,240 240,465 465,765 765,1050 1050,1340
body is capable of doing,|
|

129
00:04:38,100 --> 00:04:40,100
0,400 570,970 1140,1445 1445,1640 1640,2000
{ -} robot on wheels
轮子上的机器人不能完成爬楼梯的任务，

130
00:04:40,100 --> 00:04:41,150
0,195 195,405 405,585 585,810 810,1050
will not be able to

131
00:04:41,150 --> 00:04:42,455
0,135 135,315 315,585 585,855 855,1305
do the task of climbing

132
00:04:42,455 --> 00:04:43,850
0,335 745,990 990,1080 1080,1230 1230,1395
stairs,| so we have to
|所以我们必须考虑那个身体，

133
00:04:43,850 --> 00:04:45,680
0,180 180,390 390,570 570,860 1450,1830
think about that body,| and
|我们有[]，

134
00:04:45,680 --> 00:04:46,865
0,270 270,540 540,810 810,990 990,1185
we have at { -},|
|

135
00:04:46,865 --> 00:04:48,280
0,195 195,485 565,855 855,1080 1080,1415
we have a lot of
我们有很多基于机器学习的研究，

136
00:04:48,660 --> 00:04:51,305
0,365 365,730 810,1210 1260,1660 2280,2645
machine learning based research,| that
|使我们能够研究，

137
00:04:51,305 --> 00:04:53,560
0,345 345,725 745,1145 1675,1965 1965,2255
allows us to that that

138
00:04:53,910 --> 00:04:57,350
0,640 1020,1400 1400,1730 1730,2080 2880,3440
examines,| how to design optimally
|如何为特定任务优化设计机器人身体。

139
00:04:57,350 --> 00:04:58,535
0,240 240,495 495,795 795,1020 1020,1185
a robot body for a

140
00:04:58,535 --> 00:04:59,940
0,335 355,755
particular task.|
|

141
00:05:00,360 --> 00:05:01,865
0,365 365,590 590,845 845,1235 1235,1505
Now, in order for the
现在，为了让身体做它应该做的事情，

142
00:05:01,865 --> 00:05:02,870
0,275 295,555 555,675 675,795 795,1005
body to do what it's

143
00:05:02,870 --> 00:05:04,100
0,165 165,345 345,620 820,1080 1080,1230
meant to do,| we need
|我们需要大脑，

144
00:05:04,100 --> 00:05:05,075
0,165 165,390 390,600 600,735 735,975
the brain,| we need the
|我们需要机器学习，需要推理和决策引擎，

145
00:05:05,075 --> 00:05:06,370
0,270 270,575 625,900 900,1035 1035,1295
machine learning and the reason

146
00:05:06,450 --> 00:05:07,870
0,275 275,485 485,755 755,1055 1055,1420
and the decision making engine,|
|

147
00:05:08,250 --> 00:05:09,800
0,305 305,500 500,770 770,1150 1290,1550
and this is what we
这就是我们今天要谈论的。

148
00:05:09,800 --> 00:05:10,960
0,135 135,345 345,570 570,810 810,1160
are going to talk about

149
00:05:11,220 --> 00:05:12,700
0,400
today.|
|

150
00:05:13,320 --> 00:05:14,860
0,290 290,455 455,620 620,910 1140,1540
Now in the context of
现在，在机器人的背景下，我们有三种类型的学习，你们在整个课程中看到了这些方法的不同方面。啊，我们有更有监督的学习。所以在这个，在这个学习的方法当中呢，我们要用数据来找出投入产出之间的关系。我们有无监督学习，在无监督学习的背景下，我们可以使用数据来获得模式，找到数据的模式和分类。然后我们有强化学习，这是关于通过最大化奖励来学习执行任务。

151
00:05:15,120 --> 00:05:17,480
0,550 690,995 995,1300 1620,2000 2000,2360
robots, we have three types

152
00:05:17,480 --> 00:05:18,695
0,285 285,585 585,840 840,975 975,1215
of learning and you have

153
00:05:18,695 --> 00:05:20,765
0,365 595,995 1345,1695 1695,1905 1905,2070
seen different aspects of these

154
00:05:20,765 --> 00:05:23,015
0,825 825,1080 1080,1290 1290,1565 1915,2250
methodologies throughout the course. Ah,

155
00:05:23,015 --> 00:05:25,085
0,195 195,675 675,915 915,1265 1675,2070
we haveper supervised learning. And

156
00:05:25,085 --> 00:05:26,885
0,395 415,720 720,1025 1255,1545 1545,1800
so in this, in this

157
00:05:26,885 --> 00:05:28,745
0,330 330,585 585,875 1135,1535 1615,1860
method of learning, eh, we

158
00:05:28,745 --> 00:05:30,395
0,165 165,485 535,810 810,1085 1375,1650
use data to have to

159
00:05:30,395 --> 00:05:32,090
0,165 165,345 345,635 955,1350 1350,1695
find the relationship between input

160
00:05:32,090 --> 00:05:35,240
0,350 460,860 1630,1920 1920,2210 2260,3150
and output. We have unsupervised

161
00:05:35,240 --> 00:05:36,760
0,350 430,810 810,1080 1080,1245 1245,1520
learning and in the context

162
00:05:36,780 --> 00:05:38,435
0,275 275,995 995,1280 1280,1505 1505,1655
of unsupervised learning, we can

163
00:05:38,435 --> 00:05:40,090
0,225 225,575 835,1095 1095,1305 1305,1655
use data to have patterns,

164
00:05:40,320 --> 00:05:42,220
0,275 275,500 500,850 870,1160 1160,1900
to find patterns and classifications

165
00:05:42,240 --> 00:05:43,940
0,275 275,425 425,700 1200,1490 1490,1700
of the data. And then

166
00:05:43,940 --> 00:05:46,460
0,195 195,390 390,1215 1215,1610 2230,2520
we have reinforcement learning, which

167
00:05:46,460 --> 00:05:48,455
0,225 225,560 670,1070 1330,1710 1710,1995
is about learning to perform

168
00:05:48,455 --> 00:05:50,860
0,210 210,515 535,900 900,1625 2005,2405
a task by maximizing reward.|
|

169
00:05:52,380 --> 00:05:54,260
0,275 275,440 440,910 1320,1655 1655,1880
So for robots, eh, we
所以对于机器人来说，嗯，我们最终得到了一个最经常由呃三个步骤组成的循环。我们有感知，感知的步骤，我们有计划和推理的步骤，我们有行动的步骤。这就是我们今天要讨论的问题。所以让我从一些例子开始，看看我们如何使用机器学习来增强机器人的感知能力。所以这就解决了这个问题：这是什么？而这个问题真的很重要，因为比如说，训练机器人汽车识别道路上的所有物体，包括鸭子，汽车，人，呃对于自动驾驶和EM来说是非常关键的，那么这是如何工作的？好吧，让我给你一个高层次的视角，看看机器人汽车是如何真正识别场景的。

170
00:05:54,260 --> 00:05:55,300
0,195 195,405 405,570 570,735 735,1040
end up with a cycle

171
00:05:55,590 --> 00:05:58,145
0,400 660,1040 1040,1420 1890,2240 2240,2555
that most often consists of

172
00:05:58,145 --> 00:06:00,185
0,365 475,810 810,1145 1585,1845 1845,2040
eh three steps. We have

173
00:06:00,185 --> 00:06:01,955
0,465 465,675 675,1115 1195,1560 1560,1770
perception, a perception step, we

174
00:06:01,955 --> 00:06:03,260
0,120 120,300 300,570 570,810 810,1305
have a planning and reasoning

175
00:06:03,260 --> 00:06:04,160
0,285 285,495 495,630 630,750 750,900
step and we have an

176
00:06:04,160 --> 00:06:06,710
0,290 400,800 1480,1880 1930,2295 2295,2550
action step. And so this

177
00:06:06,710 --> 00:06:08,465
0,210 210,530 1030,1320 1320,1500 1500,1755
is what we are going

178
00:06:08,465 --> 00:06:09,995
0,240 240,450 450,780 780,1175 1255,1530
to talk about today. So

179
00:06:09,995 --> 00:06:11,380
0,195 195,435 435,705 705,1020 1020,1385
let me start with some

180
00:06:11,400 --> 00:06:12,845
0,400 570,875 875,1100 1100,1295 1295,1445
examples of how we can

181
00:06:12,845 --> 00:06:15,100
0,275 625,900 900,1175 1495,1875 1875,2255
use machine learning to enhance

182
00:06:15,450 --> 00:06:18,490
0,290 290,790 870,1270 1740,2140 2460,3040
the perception capability of robots.

183
00:06:19,890 --> 00:06:21,170
0,275 275,410 410,545 545,785 785,1280
And so this is addressing

184
00:06:21,170 --> 00:06:22,625
0,195 195,470 610,930 930,1170 1170,1455
the question what is this?

185
00:06:22,625 --> 00:06:24,310
0,255 255,450 450,755 835,1235 1285,1685
And this question is really

186
00:06:24,540 --> 00:06:27,040
0,400 570,875 875,1180 1200,1600 2100,2500
important because for instance, training

187
00:06:27,150 --> 00:06:29,350
0,365 365,730 810,1070 1070,1330 1800,2200
robot cars to recognize all

188
00:06:29,460 --> 00:06:31,420
0,305 305,500 500,790 930,1325 1325,1960
objects on roads including ducks,

189
00:06:31,710 --> 00:06:34,010
0,400 660,1060 1440,1760 1760,2000 2000,2300
cars, people, eh is really

190
00:06:34,010 --> 00:06:36,280
0,380 640,1035 1035,1335 1335,1950 1950,2270
critical eh for autonomous driving

191
00:06:36,900 --> 00:06:38,405
0,400 420,820 900,1160 1160,1325 1325,1505
and EM, so how does

192
00:06:38,405 --> 00:06:39,670
0,195 195,450 450,705 705,945 945,1265
this work? Well, let me

193
00:06:39,840 --> 00:06:40,760
0,275 275,425 425,575 575,740 740,920
let me give you a

194
00:06:40,760 --> 00:06:42,245
0,195 195,480 480,825 825,1140 1140,1485
high level view of how

195
00:06:42,245 --> 00:06:44,030
0,395 445,780 780,1110 1110,1505 1525,1785
a robot car can actually

196
00:06:44,030 --> 00:06:45,960
0,260 430,750 750,1070
recognize the scene.|
|

197
00:06:47,290 --> 00:06:49,130
0,350 350,700 840,1115 1115,1390 1440,1840
So, eh, in order to,
所以呢，为了，为了把深度学习用于机器人的感知任务，我们用的是数据。这是手动标记的数据，输入卷积神经网络，然后使用这些标记来对数据进行分类。例如，对于这张图像，我们可能会有像汽车、鸭子路这样的分类，这样当系统看到新的图像时，例如这张，汽车可能会说，哦，这就是鸭子路。现在，为了真正为这个EH对象分类问题提供解决方案，我们必须，我们必须使用多种算法，我们必须使用的第一个算法称为图像分割。在图像分割中，我们把输入当作输入图像，然后分组在一起。

198
00:06:49,690 --> 00:06:51,015
0,260 260,515 515,785 785,1040 1040,1325
in order to use deep

199
00:06:51,015 --> 00:06:52,770
0,305 535,840 840,1005 1005,1410 1410,1755
learning for the perception task

200
00:06:52,770 --> 00:06:54,650
0,210 210,680 820,1200 1200,1530 1530,1880
of robots, we use data.

201
00:06:54,880 --> 00:06:57,020
0,290 290,500 500,1025 1025,1570 1740,2140
This is manually labeled data

202
00:06:57,580 --> 00:06:59,850
0,400 510,910 1230,1535 1535,1840 1980,2270
that gets Fed into a

203
00:06:59,850 --> 00:07:02,370
0,615 615,885 885,1160 1720,2120 2200,2520
convolutional neural network and then

204
00:07:02,370 --> 00:07:03,630
0,180 180,555 555,765 765,1005 1005,1260
the labels are used to

205
00:07:03,630 --> 00:07:05,130
0,570 570,795 795,975 975,1230 1230,1500
classify what the data is.

206
00:07:05,130 --> 00:07:06,315
0,195 195,495 495,825 825,1035 1035,1185
So for instance for this

207
00:07:06,315 --> 00:07:08,690
0,240 240,480 480,645 645,935 1525,2375
image we may have classifications

208
00:07:08,710 --> 00:07:11,250
0,395 395,790 810,1210 1290,1690 2220,2540
like car, duck road and

209
00:07:11,250 --> 00:07:12,560
0,210 210,390 390,680 730,1020 1020,1310
we do this so that

210
00:07:12,670 --> 00:07:14,415
0,400 690,980 980,1270 1320,1580 1580,1745
when the system when the

211
00:07:14,415 --> 00:07:15,860
0,305 355,705 705,915 915,1110 1110,1445
car sees a new image,

212
00:07:15,970 --> 00:07:17,730
0,335 335,665 665,980 980,1300 1470,1760
for example this one, the

213
00:07:17,730 --> 00:07:19,110
0,270 270,570 570,840 840,1140 1140,1380
car could say oh this

214
00:07:19,110 --> 00:07:21,320
0,290 940,1230 1230,1440 1440,1905 1905,2210
is this is duckson road.

215
00:07:21,580 --> 00:07:23,310
0,305 305,470 470,730 780,1180 1470,1730
Now in order to in

216
00:07:23,310 --> 00:07:26,090
0,260 280,660 660,1035 1035,1430 2380,2780
order to actually provide solutions

217
00:07:26,800 --> 00:07:29,600
0,400 450,850 1380,1780 1920,2210 2210,2800
for this eh object classification

218
00:07:29,740 --> 00:07:31,290
0,395 395,665 665,905 905,1270 1290,1550
problem, we have to, we

219
00:07:31,290 --> 00:07:34,500
0,240 240,620 1240,1640 1930,2330 2680,3210
have to employ multiple algorithms

220
00:07:34,500 --> 00:07:36,230
0,240 240,405 405,680 820,1365 1365,1730
and the first algorithm that

221
00:07:36,430 --> 00:07:37,980
0,260 260,425 425,650 650,970 1230,1550
we have to employ is

222
00:07:37,980 --> 00:07:40,215
0,270 270,600 600,1340 1720,1995 1995,2235
called image segmentation. In image

223
00:07:40,215 --> 00:07:42,390
0,725 895,1185 1185,1395 1395,1715 1855,2175
segmentation we take as we

224
00:07:42,390 --> 00:07:44,690
0,320 370,920 1210,1605 1605,1950 1950,2300
take inputs as input images

225
00:07:45,310 --> 00:07:46,920
0,400 510,800 800,1070 1070,1450
and we group together.|
|

226
00:07:46,920 --> 00:07:49,440
0,165 165,710 820,1220 1270,1670 2260,2520
The pixels that belong to
属于图像中同一对象的像素，这是一种词汇步骤。然后我们需要标记和识别这些图像。这是一个语义步骤。因此，令人兴奋的是，我们已经做到了。

227
00:07:49,440 --> 00:07:51,105
0,180 180,500 1060,1380 1380,1560 1560,1665
the same object in the

228
00:07:51,105 --> 00:07:52,605
0,245 775,1050 1050,1200 1200,1350 1350,1500
image, and this is a

229
00:07:52,605 --> 00:07:53,930
0,150 150,285 285,405 405,975 975,1325
kind of a lexical step.

230
00:07:54,280 --> 00:07:55,550
0,275 275,500 500,710 710,920 920,1270
And then we need to

231
00:07:56,110 --> 00:07:58,010
0,400 480,770 770,1060 1350,1625 1625,1900
label and recognize these images.

232
00:07:58,150 --> 00:07:59,780
0,275 275,455 455,695 695,1295 1295,1630
This is a semantic step.

233
00:08:00,280 --> 00:08:01,410
0,275 275,395 395,545 545,845 845,1130
And so the exciting thing

234
00:08:01,410 --> 00:08:02,900
0,180 180,405 405,740 760,1125 1125,1490
is that we already have.|
|

235
00:08:03,900 --> 00:08:06,110
0,225 225,525 525,890 910,1490 1810,2210
Eh, very good algorithms, eh?
呃，非常好的算法，嗯？这可以非常快地分割图像。所以EM，我们可以，我们可以这样做，所以我们可以，我们可以拍摄一张图像，我们可以非常快地在图像中找到物体。我们不知道这些物体是什么。所以为了知道这些物体是什么。

236
00:08:06,190 --> 00:08:08,540
0,400 780,1100 1100,1355 1355,1690 1950,2350
That that can segment images

237
00:08:08,590 --> 00:08:10,350
0,350 350,700 750,1115 1115,1475 1475,1760
very fast. So EM, we

238
00:08:10,350 --> 00:08:11,990
0,290 760,1035 1035,1200 1200,1365 1365,1640
can, we can do this,

239
00:08:12,010 --> 00:08:13,050
0,275 275,440 440,605 605,830 830,1040
we can do this so

240
00:08:13,050 --> 00:08:13,920
0,135 135,330 330,510 510,675 675,870
we can, we can take

241
00:08:13,920 --> 00:08:15,210
0,165 165,440 700,975 975,1110 1110,1290
an image and we can

242
00:08:15,210 --> 00:08:16,455
0,320 340,705 705,975 975,1155 1155,1245
find the object in the

243
00:08:16,455 --> 00:08:17,625
0,180 180,465 465,750 750,975 975,1170
image very fast. We don't

244
00:08:17,625 --> 00:08:18,650
0,120 120,255 255,465 465,720 720,1025
know what the objects are.

245
00:08:18,910 --> 00:08:19,995
0,260 260,365 365,610 630,905 905,1085
So in order to know

246
00:08:19,995 --> 00:08:21,780
0,180 180,390 390,630 630,935
what the objects are.|
|

247
00:08:21,820 --> 00:08:22,740
0,320 320,515 515,635 635,770 770,920
Well, you know what we
你知道我们是做什么的，对吧？因此，我们雇佣了数千人来为我们拥有的物品贴标签。所以这是令人兴奋的。但是，但是标注是一项非常劳动密集型的活动，对机器学习来说是一个巨大的挑战。让我们把这个想法留到以后再考虑。

248
00:08:22,740 --> 00:08:24,530
0,150 150,440 1060,1305 1305,1470 1470,1790
do, right? So we employ

249
00:08:24,760 --> 00:08:26,630
0,395 395,680 680,970 1320,1595 1595,1870
thousands of people to label

250
00:08:26,980 --> 00:08:28,550
0,400 510,845 845,1085 1085,1280 1280,1570
the objects that we have.

251
00:08:28,600 --> 00:08:30,710
0,350 350,700 1230,1505 1505,1745 1745,2110
And so this is exciting.

252
00:08:30,730 --> 00:08:32,460
0,400 630,920 920,1400 1400,1565 1565,1730
But, but labeling is a

253
00:08:32,460 --> 00:08:34,470
0,255 255,555 555,1070 1240,1640 1720,2010
very labor intensive activity and

254
00:08:34,470 --> 00:08:37,050
0,180 180,470 760,1160 1930,2325 2325,2580
a significant challenge to machine

255
00:08:37,050 --> 00:08:38,235
0,210 210,540 540,690 690,885 885,1185
learning. Let's keep this thought

256
00:08:38,235 --> 00:08:39,580
0,300 300,605
for later.|
|

257
00:08:40,310 --> 00:08:42,150
0,400 750,1145 1145,1385 1385,1535 1535,1840
Now the the most popular
现在最流行的衡量图像分类准确性的基准是Imageet，这里我们看到Imageet的排行榜，我们看到各种EM变体的性能，图像分类算法的性能很好地达到了90%，90%的准确率，这真的非常令人兴奋。

258
00:08:42,200 --> 00:08:45,235
0,730 1260,1535 1535,2090 2090,2435 2435,3035
benchmark for measuring the accuracy

259
00:08:45,235 --> 00:08:47,490
0,210 210,510 510,1205 1345,1620 1620,2255
of image classification is imageet

260
00:08:47,990 --> 00:08:50,005
0,320 320,635 635,950 950,1270 1740,2015
and here we see the

261
00:08:50,005 --> 00:08:52,510
0,795 795,1115 1285,2010 2010,2235 2235,2505
leaderboards of imageet and we

262
00:08:52,510 --> 00:08:55,440
0,380 400,800 1060,1460 1600,2000 2530,2930
see performance of various EM

263
00:08:55,580 --> 00:08:59,040
0,640 870,1270 1470,1745 1745,2020 2760,3460
variations of, of image classification

264
00:08:59,810 --> 00:09:02,100
0,610 720,1120 1260,1640 1640,1955 1955,2290
algorithms that perform well into

265
00:09:02,840 --> 00:09:05,740
0,400 660,1025 1025,1390 1740,2440 2610,2900
ninety, ninety percent accuracy and

266
00:09:05,740 --> 00:09:07,260
0,180 180,360 360,630 630,1010 1120,1520
this is really quite exciting.|
|

267
00:09:08,200 --> 00:09:11,630
0,425 425,760 840,1240 2880,3155 3155,3430
It's exciting, but if those
这很令人兴奋，但如果这些算法在汽车上运行呢？

268
00:09:11,680 --> 00:09:13,380
0,580 600,965 965,1205 1205,1445 1445,1700
algorithms were to run on

269
00:09:13,380 --> 00:09:14,620
0,180 180,470
a car?|
|

270
00:09:15,070 --> 00:09:16,880
0,150 150,360 360,600 600,920
That's not good enough.|
这还不够好。|

271
00:09:17,010 --> 00:09:18,470
0,400 480,770 770,980 980,1250 1250,1460
Because because the car is
因为因为汽车是一个安全关键系统，事实上我们不能在汽车图像识别方面有任何错误，所以汽车上的EM。这是一个运行在汽车上的物体物体探测器的例子，我们可以看到三个摄像头拍摄的图像。有一个摄像头指向前方。有一个摄像头指向左边。有一个摄像头指向右边，所以你可以看到这辆车接受了这个，这个输入，它做得很好。看，那里有一辆蓝色的汽车，那里有一些骑自行车的人。确实有。有个骑自行车的，呃，还有一辆车。所以这个系统做得很好，设法找到了道路的缺口，嗯，转弯，但它并不是百分之百正确的。特别是这辆移动的卡车，当它移动的时候，当移动的卡车的图像通过时。

272
00:09:18,470 --> 00:09:20,480
0,150 150,435 435,830 880,1280 1750,2010
a safety critical system and

273
00:09:20,480 --> 00:09:22,150
0,165 165,470 550,840 840,1130 1270,1670
in fact we cannot afford

274
00:09:22,290 --> 00:09:24,700
0,290 290,580 870,1205 1205,1750 2010,2410
to have any errors in

275
00:09:24,720 --> 00:09:26,735
0,380 380,760 900,1220 1220,1540 1740,2015
how images get recognized in

276
00:09:26,735 --> 00:09:28,100
0,150 150,360 360,695 925,1200 1200,1365
the car, EM on the

277
00:09:28,100 --> 00:09:29,620
0,290 310,675 675,1005 1005,1185 1185,1520
car. EM here's an example

278
00:09:30,150 --> 00:09:32,690
0,400 1050,1295 1295,1520 1520,1900 2160,2540
of of an object object

279
00:09:32,690 --> 00:09:34,870
0,540 540,780 780,990 990,1310 1780,2180
detector that is running on

280
00:09:35,400 --> 00:09:36,635
0,260 260,425 425,695 695,980 980,1235
on a car and we

281
00:09:36,635 --> 00:09:38,020
0,240 240,420 420,540 540,785 985,1385
we see the image from

282
00:09:38,280 --> 00:09:39,905
0,400 630,1030 1140,1385 1385,1490 1490,1625
three cameras. There is a

283
00:09:39,905 --> 00:09:41,375
0,275 295,690 690,1085 1105,1350 1350,1470
camera pointing forward. There is

284
00:09:41,375 --> 00:09:42,605
0,210 210,525 525,885 885,1110 1110,1230
a camera pointing to the

285
00:09:42,605 --> 00:09:44,420
0,275 655,900 900,1005 1005,1265 1435,1815
left. There is a camera

286
00:09:44,420 --> 00:09:46,175
0,360 360,600 600,720 720,980 1420,1755
pointing to the right and

287
00:09:46,175 --> 00:09:47,500
0,315 315,585 585,810 810,1035 1035,1325
so you can see that

288
00:09:47,940 --> 00:09:49,870
0,290 290,580 690,1040 1040,1390 1530,1930
the car takes this, this

289
00:09:49,890 --> 00:09:51,155
0,365 365,650 650,830 830,1025 1025,1265
input and it does pretty

290
00:09:51,155 --> 00:09:52,145
0,255 255,465 465,675 675,795 795,990
well. See there's a blue

291
00:09:52,145 --> 00:09:54,640
0,305 955,1215 1215,1410 1410,1695 1695,2495
car, there are some bicyclists.

292
00:09:54,810 --> 00:09:57,070
0,290 290,580 1050,1415 1415,1550 1550,2260
There are. There's a bicyclist

293
00:09:57,330 --> 00:09:59,015
0,335 335,680 680,935 935,1300 1410,1685
eh here's another car. So

294
00:09:59,015 --> 00:10:00,400
0,165 165,450 450,795 795,1065 1065,1385
the system does pretty well

295
00:10:00,570 --> 00:10:02,195
0,290 290,845 845,1070 1070,1355 1355,1625
and manages to find the

296
00:10:02,195 --> 00:10:03,820
0,255 255,510 510,645 645,905 1225,1625
gap in the road eh

297
00:10:03,840 --> 00:10:05,120
0,380 380,665 665,860 860,1085 1085,1280
to make a turn but

298
00:10:05,120 --> 00:10:08,390
0,225 225,375 375,1070 1960,2660 3010,3270
it's not 100% incorrect. So

299
00:10:08,390 --> 00:10:09,980
0,260 280,680 1030,1275 1275,1395 1395,1590
in particular there is this

300
00:10:09,980 --> 00:10:13,385
0,320 1510,1910 2770,3060 3060,3225 3225,3405
moving truck and when this

301
00:10:13,385 --> 00:10:14,650
0,305 445,705 705,855 855,1005 1005,1265
moving and when the image

302
00:10:14,700 --> 00:10:16,160
0,275 275,425 425,700 750,1130 1130,1460
of the moving truck is

303
00:10:16,160 --> 00:10:17,260
0,350 610,1010
passed through.|
|

304
00:10:17,480 --> 00:10:21,250
0,400 990,1390 1770,2170 3180,3530 3530,3770
The object recognition piece of
这个系统的物体识别部分，我们最终得到了很多有趣的东西。写作被认为是一道栅栏。

305
00:10:21,250 --> 00:10:24,190
0,180 180,470 1600,2000 2440,2745 2745,2940
the system we, we end

306
00:10:24,190 --> 00:10:25,260
0,255 255,510 510,660 660,795 795,1070
up with a lot of

307
00:10:25,460 --> 00:10:27,930
0,400 780,1180 1380,1780 1860,2165 2165,2470
interesting things. Writing is recognized

308
00:10:28,100 --> 00:10:30,020
0,290 290,470 470,760
as a fence.|
|

309
00:10:30,120 --> 00:10:32,290
0,400 510,845 845,1180 1590,1880 1880,2170
So these are, these are
所以，这些是，这些是极端错误的类型，或者我们表示它们的方式，在我们训练机器学习时，我们需要注意的角落情况。

310
00:10:32,310 --> 00:10:35,020
0,275 275,500 500,850 1680,2080 2100,2710
the kinds of extreme errors

311
00:10:35,850 --> 00:10:39,065
0,400 930,1205 1205,1480 2640,2915 2915,3215
or the way we denote

312
00:10:39,065 --> 00:10:41,345
0,285 285,665 685,1085 1675,2010 2010,2280
them, corner cases that we

313
00:10:41,345 --> 00:10:43,120
0,285 285,525 525,815 865,1265 1375,1775
need to pay attention to

314
00:10:43,560 --> 00:10:45,250
0,305 305,530 530,850 1140,1415 1415,1690
when we train machine learning.|
|

315
00:10:45,900 --> 00:10:48,030
0,240 240,615 615,1010 1330,1730 1810,2130
For safety critical applications like
适用于安全关键型应用，如驾驶。

316
00:10:48,030 --> 00:10:49,140
0,320
driving.|
|

317
00:10:49,240 --> 00:10:50,565
0,245 245,380 380,590 590,910 990,1325
Well, it turns out that
事实证明，如果你使用深度神经网络解决方案来进行图像分类，这些解决方案效果非常好，因为它们是在一个巨大的数据集图像上进行训练的。

318
00:10:50,565 --> 00:10:52,550
0,225 225,515 925,1245 1245,1565 1585,1985
in fact, if you use

319
00:10:53,440 --> 00:10:55,155
0,335 335,590 590,845 845,1240 1440,1715
deep neural network solutions for

320
00:10:55,155 --> 00:10:58,100
0,275 295,995 1975,2370 2370,2655 2655,2945
image classification, the the solutions

321
00:10:58,120 --> 00:10:59,940
0,290 290,515 515,850 1050,1450 1560,1820
work really well because they

322
00:10:59,940 --> 00:11:01,395
0,180 180,500 760,1020 1020,1170 1170,1455
are trained on a huge

323
00:11:01,395 --> 00:11:03,700
0,660 660,1355
dataet imageet.|
|

324
00:11:03,830 --> 00:11:06,490
0,400 810,1100 1100,1390 1680,2080 2280,2660
But the solutions capture more
但解决方案捕捉到的不仅仅是对象的本质。这些解决方案还捕获对象出现的上下文。所以麻省理工学院的研究人员，呃，乔什·塔尼鲍姆和鲍里斯·卡茨，在几年前做了一个实验，他们用普通物体。

325
00:11:06,490 --> 00:11:07,690
0,255 255,405 405,795 795,975 975,1200
than the essence of the

326
00:11:07,690 --> 00:11:09,300
0,225 225,375 375,650 1030,1320 1320,1610
object. The solutions also capture

327
00:11:09,440 --> 00:11:11,965
0,320 320,640 1440,1775 1775,2110 2130,2525
the context in which the

328
00:11:11,965 --> 00:11:13,980
0,375 375,755 1165,1455 1455,1680 1680,2015
object appears. And so MIT

329
00:11:14,180 --> 00:11:16,285
0,400 720,1040 1040,1340 1340,1720 1740,2105
researchers, LED by eh, Josh

330
00:11:16,285 --> 00:11:18,445
0,600 600,765 765,1125 1125,1655 1855,2160
tanibbaum and Boris Katz, did

331
00:11:18,445 --> 00:11:20,455
0,305 325,725 1345,1605 1605,1740 1740,2010
an experiment a few years

332
00:11:20,455 --> 00:11:22,500
0,395 925,1290 1290,1560 1560,1755 1755,2045
ago where they took regular

333
00:11:22,760 --> 00:11:23,880
0,400
objects.|
|

334
00:11:24,150 --> 00:11:25,055
0,290 290,470 470,635 635,785 785,905
And they put them in
他们把它们放在不同的背景下。例如，他们把你的鞋子放在床上。他们拿起花盆和钢笔，放在浴室里。随着环境的显著变化，性能最好的ImageNet算法的性能下降了40%-50%，这真的是非同寻常。

335
00:11:25,055 --> 00:11:26,390
0,120 120,375 375,755 805,1095 1095,1335
a different context. So, for

336
00:11:26,390 --> 00:11:27,380
0,225 225,375 375,525 525,735 735,990
instance, they took your shoes

337
00:11:27,380 --> 00:11:28,175
0,210 210,360 360,480 480,615 615,795
and put them on the

338
00:11:28,175 --> 00:11:29,705
0,305 715,990 990,1140 1140,1290 1290,1530
bed. They took the pots

339
00:11:29,705 --> 00:11:30,880
0,165 165,465 465,720 720,900 900,1175
and pens and put them

340
00:11:31,290 --> 00:11:33,155
0,290 290,440 440,700 1200,1595 1595,1865
in the bathroom. And with

341
00:11:33,155 --> 00:11:35,290
0,275 535,935 1255,1590 1590,1830 1830,2135
a significant change in context,

342
00:11:35,940 --> 00:11:37,780
0,395 395,790 1020,1295 1295,1505 1505,1840
the performance of the top

343
00:11:37,980 --> 00:11:41,135
0,400 780,1570 1590,2170 2490,2885 2885,3155
performing imagenet algorithms dropped by

344
00:11:41,135 --> 00:11:42,500
0,180 180,405 405,630 630,1140 1140,1365
as much as {40-50%, -

345
00:11:42,500 --> 00:11:44,500
0,350 850,1110 1110,1245 1245,1520 1600,2000
-} which is really extraordinary.|
|

346
00:11:45,280 --> 00:11:46,615
0,240 240,480 480,770 820,1140 1140,1335
And I'm sharing this with
我与你们分享这一点，不是为了阻止你们使用这些算法，而是要指出，当你部署一个算法时，特别是当你把它部署在一个安全关键的应用程序中时，理解这个算法的范围是很重要的。重要的是要了解什么是有效的，什么是不起作用的，什么时候可以应用算法，什么时候不应该应用算法。

347
00:11:46,615 --> 00:11:47,920
0,180 180,405 405,585 585,1035 1035,1305
you, not to discourage you

348
00:11:47,920 --> 00:11:50,230
0,165 165,440 970,1370 1390,1940 2020,2310
from using these algorithms, but

349
00:11:50,230 --> 00:11:52,480
0,180 180,405 405,740 940,1340 1930,2250
to point out that when

350
00:11:52,480 --> 00:11:54,690
0,320 850,1140 1140,1425 1425,1815 1815,2210
you, when you deploy an

351
00:11:54,710 --> 00:11:56,230
0,530 530,785 785,1085 1085,1295 1295,1520
algorithm, and especially when you

352
00:11:56,230 --> 00:11:57,235
0,270 270,420 420,540 540,705 705,1005
deploy it in a safety

353
00:11:57,235 --> 00:11:59,880
0,395 745,1145 1345,1830 1830,2195 2245,2645
critical application, it's important to

354
00:12:00,020 --> 00:12:01,360
0,380 380,680 680,920 920,1130 1130,1340
understand the scope of the

355
00:12:01,360 --> 00:12:03,270
0,420 420,825 825,1125 1125,1490 1510,1910
algorithm. It's important to understand

356
00:12:03,410 --> 00:12:04,885
0,335 335,635 635,890 890,1100 1100,1475
what works and what doesn't

357
00:12:04,885 --> 00:12:06,085
0,195 195,435 435,645 645,900 900,1200
work, when you can apply

358
00:12:06,085 --> 00:12:07,795
0,285 285,815 865,1155 1155,1425 1425,1710
the algorithm and you when

359
00:12:07,795 --> 00:12:10,110
0,225 225,695 715,1115 1615,1965 1965,2315
you shouldn't apply the the

360
00:12:10,130 --> 00:12:11,180
0,580
algorithm.|
|

361
00:12:11,620 --> 00:12:14,145
0,400 510,875 875,1240 1650,2050 2250,2525
And so, eh, so keep
所以，当你考虑部署或构建和部署深度神经网络解决方案时，请记住这一点，还有一件事对自动驾驶和机器人非常关键。你已经听过一堂关于对抗性攻击的精彩讲座。事实证明，你可以非常容易地攻击从汽车摄像头流到汽车决策引擎的图像。事实上，很容易拿起停车标志，稍微扰乱它，扰乱它，以一种你甚至用肉眼都看不出这两个图像之间有区别的方式。

362
00:12:14,145 --> 00:12:15,135
0,165 165,330 330,570 570,825 825,990
this in mind as you

363
00:12:15,135 --> 00:12:17,310
0,195 195,515 745,1385 1645,1935 1935,2175
think about deploying or building

364
00:12:17,310 --> 00:12:19,520
0,285 285,800 1330,1635 1635,1935 1935,2210
and deploying deep neural network

365
00:12:19,660 --> 00:12:22,755
0,400 1260,1655 1655,1895 1895,2260 2760,3095
solutions, there's another thing that

366
00:12:22,755 --> 00:12:25,860
0,270 270,555 555,905 2245,2520 2520,3105
is very critical for autonomous

367
00:12:25,860 --> 00:12:28,440
0,320 760,1080 1080,1290 1290,1730 2290,2580
driving and for robots. You

368
00:12:28,440 --> 00:12:30,380
0,225 225,560 940,1340 1420,1680 1680,1940
have heard a beautiful lecture

369
00:12:30,850 --> 00:12:33,330
0,365 365,1310 1310,1690 2070,2330 2330,2480
on adversarial attacks. Well, it

370
00:12:33,330 --> 00:12:34,880
0,225 225,560 610,915 915,1185 1185,1550
turns out you can attack

371
00:12:34,900 --> 00:12:37,560
0,305 305,610 1050,1325 1325,1600 2310,2660
very easily the images that

372
00:12:37,560 --> 00:12:38,810
0,300 300,600 600,840 840,990 990,1250
get Fed from the camera

373
00:12:38,920 --> 00:12:40,935
0,440 440,695 695,1030 1530,1805 1805,2015
streams of cars to the

374
00:12:40,935 --> 00:12:42,930
0,285 285,600 600,965 1495,1800 1800,1995
decision making engine of the

375
00:12:42,930 --> 00:12:44,955
0,290 490,870 870,1155 1155,1395 1395,2025
car. And in fact, it's

376
00:12:44,955 --> 00:12:46,695
0,210 210,545 925,1215 1215,1470 1470,1740
quite easy to take a

377
00:12:46,695 --> 00:12:49,395
0,255 255,605 925,1325 1975,2595 2595,2700
stop sign and perturb it

378
00:12:49,395 --> 00:12:50,690
0,150 150,345 345,585 585,1065 1065,1295
a little bit, perturb it

379
00:12:50,980 --> 00:12:52,470
0,400 690,995 995,1190 1190,1340 1340,1490
in, in such a way

380
00:12:52,470 --> 00:12:53,930
0,165 165,360 360,720 720,980 1060,1460
that you can't even tell

381
00:12:54,430 --> 00:12:55,770
0,260 260,380 380,710 710,995 995,1340
with the naked eye that

382
00:12:55,770 --> 00:12:57,210
0,195 195,300 300,450 450,740 1060,1440
there is a difference between

383
00:12:57,210 --> 00:12:58,880
0,300 300,510 510,800
the two images.|
|

384
00:12:58,880 --> 00:13:00,550
0,150 150,300 300,560 670,1020 1020,1670
And with those small perturbations,
有了这些小的扰动，你可以把停车标志变成一个让行标志，你可以想象这会在物理道路上造成什么样的混乱。

385
00:13:00,600 --> 00:13:02,450
0,305 305,605 605,1000 1260,1580 1580,1850
you can turn the stop

386
00:13:02,450 --> 00:13:03,910
0,315 315,615 615,825 825,1080 1080,1460
sign into a yield sign,

387
00:13:04,140 --> 00:13:05,360
0,260 260,380 380,530 530,820 930,1220
and you can imagine what

388
00:13:05,360 --> 00:13:06,995
0,165 165,330 330,780 780,1160 1270,1635
kind of chaos this would

389
00:13:06,995 --> 00:13:09,635
0,365 1075,1470 1470,1865 2215,2490 2490,2640
create on a on a

390
00:13:09,635 --> 00:13:11,340
0,275 295,695
physical road.|
|

391
00:13:11,410 --> 00:13:14,055
0,400 1470,1745 1745,2020 2040,2360 2360,2645
So machine learning is very
因此，机器学习在为机器人构建感知系统方面非常强大。但是，当我们在机器人的环境中使用机器学习时，重要的是记住它们工作的范围，当它们不工作的时候。然后，重要的是要考虑什么可能，在决策时我们可能会设置什么样的护栏，这样我们就有了健壮的行为。

392
00:13:14,055 --> 00:13:16,760
0,365 1165,1470 1470,1740 1740,2285 2305,2705
powerful for building perception systems

393
00:13:16,840 --> 00:13:18,885
0,275 275,700 1200,1475 1475,1730 1730,2045
for robots. But as we

394
00:13:18,885 --> 00:13:20,730
0,335 415,705 705,995 1345,1650 1650,1845
employ machine learning in the

395
00:13:20,730 --> 00:13:22,460
0,290 310,570 570,975 975,1395 1395,1730
context of robots, it's important

396
00:13:22,480 --> 00:13:24,180
0,290 290,455 455,605 605,880 1350,1700
to keep in mind the

397
00:13:24,180 --> 00:13:25,755
0,350 550,855 855,1050 1050,1305 1305,1575
scope when they work, when

398
00:13:25,755 --> 00:13:28,050
0,210 210,510 510,785 1135,1535 2005,2295
they don't work. And then

399
00:13:28,050 --> 00:13:29,960
0,330 330,650 910,1275 1275,1575 1575,1910
it's important to think about

400
00:13:30,880 --> 00:13:32,280
0,365 365,680 680,950 950,1160 1160,1400
what might, what kind of

401
00:13:32,280 --> 00:13:34,035
0,780 780,975 975,1215 1215,1500 1500,1755
guardrails we might put in

402
00:13:34,035 --> 00:13:36,650
0,335 1015,1380 1380,1745 1765,2165 2215,2615
place at the decision time

403
00:13:37,240 --> 00:13:39,500
0,320 320,640 1290,1565 1565,1840 1860,2260
so that we have robust

404
00:13:39,640 --> 00:13:40,580
0,400
behavior.|
|

405
00:13:41,410 --> 00:13:42,470
0,260 260,440 440,635 635,785 785,1060
So what could we do
那么，对于停车标志上可能出现的对抗性干扰，我们能做些什么呢？

406
00:13:42,550 --> 00:13:45,870
0,400 720,995 995,1270 1740,2140 2400,3320
about the possibility of adversarial

407
00:13:45,870 --> 00:13:47,630
0,650 760,1035 1035,1200 1200,1425 1425,1760
perturbations on the stop sign?|
|

408
00:13:48,550 --> 00:13:49,680
0,290 290,560 560,785 785,980 980,1130
Well, let's talk a little
好吧，让我们来讨论一下决策，然后我们来谈谈汽车是如何计算出在给定输入的情况下要做什么的。强化学习正在引发机器人学的一场巨大革命。那么为什么会这样呢？强化学习之所以在机器人学中引发一场巨大的革命，是因为我们已经建立了快速的模拟系统和模拟方法，允许我们并行运行数千次模拟，以便训练强化学习策略。我们也是。

409
00:13:49,680 --> 00:13:52,275
0,225 225,560 1120,1500 1500,1880 2260,2595
bit about decision making and

410
00:13:52,275 --> 00:13:54,090
0,315 315,540 540,905 1075,1475 1525,1815
let's talk about how the

411
00:13:54,090 --> 00:13:55,815
0,290 310,675 675,1040 1150,1515 1515,1725
car figures out what to

412
00:13:55,815 --> 00:13:58,400
0,195 195,545 745,1145 1435,2295 2295,2585
do given input. Reinforcement learning

413
00:13:58,780 --> 00:14:00,800
0,365 365,730 990,1325 1325,1640 1640,2020
is causing a huge revolution

414
00:14:01,210 --> 00:14:05,025
0,400 570,1150 1950,2315 2315,2680 3510,3815
in robotics. And so and

415
00:14:05,025 --> 00:14:06,855
0,180 180,345 345,600 600,965 1555,1830
why is that? Well, the

416
00:14:06,855 --> 00:14:09,030
0,275 355,1080 1080,1305 1305,1655 1825,2175
reason reinforcement learning is causing

417
00:14:09,030 --> 00:14:10,710
0,225 225,450 450,800 850,1185 1185,1680
a huge revolution in robotics

418
00:14:10,710 --> 00:14:12,680
0,345 345,740 850,1140 1140,1430 1570,1970
is because we have built

419
00:14:13,210 --> 00:14:16,290
0,365 365,970 1080,1480 1800,2200 2490,3080
fast simulation systems and simulation

420
00:14:16,290 --> 00:14:18,720
0,980 1240,1590 1590,1875 1875,2190 2190,2430
methodologies that allow us to

421
00:14:18,720 --> 00:14:20,625
0,210 210,560 610,900 900,1430 1600,1905
run thousands of simulations in

422
00:14:20,625 --> 00:14:22,905
0,305 1165,1440 1440,1695 1695,1980 1980,2280
parallel in order to train

423
00:14:22,905 --> 00:14:25,200
0,285 285,870 870,1110 1110,1475 2005,2295
a reinforcement learning policy. And

424
00:14:25,200 --> 00:14:26,760
0,135 135,380 490,890
we are also.|
|

425
00:14:27,820 --> 00:14:30,585
0,640 1110,1400 1400,1690 1920,2320 2490,2765
Decreasing the gap between the
缩小了硬件平台和仿真引擎之间的差距。

426
00:14:30,585 --> 00:14:32,595
0,275 355,755 1045,1335 1335,1515 1515,2010
hardware platforms and the simulation

427
00:14:32,595 --> 00:14:33,980
0,395
engines.|
|

428
00:14:34,410 --> 00:14:36,920
0,400 690,980 980,1220 1220,1570 1740,2510
So you have seen reinforcement
所以你在新兵训练营的早期已经看到了强化学习，所以强化学习关注的是智能代理应该如何在环境中采取行动，以便最大化累积奖励的概念。

429
00:14:36,920 --> 00:14:39,335
0,290 670,1070 1240,1560 1560,1880 2140,2415
learning earlier in the in

430
00:14:39,335 --> 00:14:41,410
0,120 120,315 315,605 1405,1740 1740,2075
the boot camp, and so

431
00:14:41,850 --> 00:14:44,990
0,875 875,1150 1260,1660 2340,2740 2820,3140
reinforcement learning is concerned with

432
00:14:44,990 --> 00:14:47,360
0,320 460,860 1210,1610 1810,2145 2145,2370
how intelligent agents ought to

433
00:14:47,360 --> 00:14:49,150
0,255 255,620 1030,1290 1290,1470 1470,1790
take action in an environment

434
00:14:49,470 --> 00:14:51,365
0,290 290,580 600,875 875,1600 1620,1895
in order to maximize the

435
00:14:51,365 --> 00:14:53,500
0,275 355,645 645,855 855,1625 1735,2135
notion of a cumulative reward.|
|

436
00:14:54,310 --> 00:14:56,925
0,365 365,730 1440,2165 2165,2375 2375,2615
And so reinforcement learning is
因此，强化学习实际上就是学习行动。这与监督学习的不同之处在于不需要标记的输入或不需要标记的输入、输出对。因此，在这个例子中，代理人必须学会避免火灾，这很简单。如果它着火了，它会得到负的奖励，当它到达水中时，它会得到正的奖励。这就是这种方法的本质。你，你不断地尝试和犯错，最终，积极的回报主导了消极的回报，这将引导代理人朝着最好的行动前进。

437
00:14:56,925 --> 00:14:58,550
0,285 285,630 630,995 1075,1350 1350,1625
really about learning to act.

438
00:14:58,630 --> 00:15:00,780
0,320 320,560 560,1055 1055,1420 1770,2150
And this differs from supervised

439
00:15:00,780 --> 00:15:03,150
0,350 1150,1440 1440,1680 1680,2160 2160,2370
learning in not needing a

440
00:15:03,150 --> 00:15:06,000
0,470 910,1310 1660,2060 2350,2640 2640,2850
labeled input or in not

441
00:15:06,000 --> 00:15:08,600
0,470 1030,1620 1620,1995 1995,2280 2280,2600
needing labeled input, output pairs.

442
00:15:09,790 --> 00:15:11,175
0,290 290,440 440,680 680,1060 1140,1385
So in this example, the

443
00:15:11,175 --> 00:15:12,885
0,240 240,600 600,840 840,1115 1315,1710
agent has to learn to

444
00:15:12,885 --> 00:15:14,595
0,345 345,695 745,1145 1165,1515 1515,1710
avoid fire and it's very

445
00:15:14,595 --> 00:15:15,860
0,300 300,540 540,765 765,990 990,1265
simple. It gets a negative

446
00:15:16,000 --> 00:15:17,505
0,400 660,935 935,1070 1070,1280 1280,1505
reward if it goes to

447
00:15:17,505 --> 00:15:18,720
0,275 295,585 585,750 750,975 975,1215
fire and it gets a

448
00:15:18,720 --> 00:15:20,355
0,290 520,900 900,1185 1185,1380 1380,1635
positive reward when it gets

449
00:15:20,355 --> 00:15:21,710
0,210 210,435 435,690 690,1050 1050,1355
to water. And that's essentially

450
00:15:22,540 --> 00:15:24,405
0,400 810,1100 1100,1355 1355,1655 1655,1865
what what this approach is

451
00:15:24,405 --> 00:15:26,190
0,195 195,435 435,755 1165,1515 1515,1785
like. You, you do trial

452
00:15:26,190 --> 00:15:28,760
0,210 210,500 880,1280 1780,2175 2175,2570
and error and, and eventually

453
00:15:29,290 --> 00:15:31,605
0,275 275,550 690,1240 1590,2165 2165,2315
the positive rewards dominate the

454
00:15:31,605 --> 00:15:33,710
0,270 270,765 765,990 990,1265 1705,2105
negative rewards and that that

455
00:15:33,730 --> 00:15:36,230
0,545 545,860 860,1070 1070,1330 2100,2500
directs the, the agent towards

456
00:15:36,760 --> 00:15:39,240
0,400 930,1190 1190,1385 1385,1720
the, the best action.|
|

457
00:15:39,500 --> 00:15:40,860
0,275 275,440 440,730 750,1055 1055,1360
And so here is an
这是一个例子，我们有一个强化学习代理，呃，它试图在赛道上驾驶，你可以看到它一开始就会犯错误，但最终它会学会如何，如何在高速下转弯。有趣的是，你可以这样做，你可以采用这个想法，你可以并行运行它，所以你可以使用数千辆汽车，你可以，你可以把它们放在同一条轨道上，一开始他们都会犯错误，但最终他们得到了正确的解决方案，最终呃联合政策最终成为了呃可靠地控制车辆的政策，嗯？所以呢，它非常，它确实是一个非常呃令人兴奋的领域强化学习，就像几十年前发明的深度学习一样。

458
00:15:41,210 --> 00:15:43,630
0,400 660,1060 1770,2060 2060,2255 2255,2420
example where we have a

459
00:15:43,630 --> 00:15:46,330
0,570 570,860 970,1370 1930,2330 2350,2700
reinforcement learning agent, uh, that

460
00:15:46,330 --> 00:15:47,800
0,345 345,720 720,975 975,1215 1215,1470
is trying to drive on

461
00:15:47,800 --> 00:15:49,660
0,270 270,980 1240,1515 1515,1650 1650,1860
a racetrack and you can

462
00:15:49,660 --> 00:15:51,760
0,285 285,620 1060,1410 1410,1740 1740,2100
see that it starts off

463
00:15:51,760 --> 00:15:54,325
0,380 1000,1400 1480,1770 1770,2060 2170,2565
and initially it makes mistakes

464
00:15:54,325 --> 00:15:56,965
0,360 360,725 1195,1515 1515,2135 2245,2640
but eventually it learns how

465
00:15:56,965 --> 00:15:58,735
0,395 745,1065 1065,1275 1275,1515 1515,1770
to, how to take the

466
00:15:58,735 --> 00:16:00,985
0,305 325,615 615,870 870,1385 1855,2250
turns at high speeds. And

467
00:16:00,985 --> 00:16:03,535
0,395 745,1355 1435,1755 1755,2075 2185,2550
EM interestingly you can do,

468
00:16:03,535 --> 00:16:04,885
0,255 255,450 450,660 660,960 960,1350
you can take this idea

469
00:16:04,885 --> 00:16:05,860
0,285 285,465 465,645 645,825 825,975
and you can run it

470
00:16:05,860 --> 00:16:07,300
0,165 165,470 730,1020 1020,1200 1200,1440
in parallel so you can

471
00:16:07,300 --> 00:16:09,480
0,315 315,680 730,1050 1050,1370 1780,2180
take thousands of cars and

472
00:16:09,800 --> 00:16:10,900
0,305 305,560 560,785 785,950 950,1100
you can, you can put

473
00:16:10,900 --> 00:16:11,970
0,120 120,270 270,450 450,705 705,1070
them on the same track

474
00:16:12,470 --> 00:16:14,020
0,400 660,920 920,1100 1100,1355 1355,1550
and in the beginning they

475
00:16:14,020 --> 00:16:16,440
0,165 165,470 490,890 1690,2055 2055,2420
all make mistakes but eventually

476
00:16:17,360 --> 00:16:19,080
0,400 450,770 770,980 980,1270 1320,1720
they get the solution right

477
00:16:19,160 --> 00:16:21,385
0,380 380,760 960,1360 1410,1810 1830,2225
and eventually that eh joint

478
00:16:21,385 --> 00:16:23,545
0,395 835,1170 1170,1505 1585,1935 1935,2160
policy ends up being the

479
00:16:23,545 --> 00:16:26,310
0,275 445,845 1045,1445 1495,2285 2365,2765
policy that eh reliably controls

480
00:16:26,840 --> 00:16:29,290
0,365 365,590 590,850 1620,2020 2100,2450
the the vehicles, eh? So

481
00:16:29,290 --> 00:16:30,720
0,270 270,585 585,810 810,1155 1155,1430
eh, it's very, it's really

482
00:16:30,770 --> 00:16:33,480
0,290 290,580 750,1150 1410,1810 2310,2710
a very eh, exciting area

483
00:16:33,800 --> 00:16:35,725
0,800 800,1085 1085,1430 1430,1700 1700,1925
reinforcement learning, much like deep

484
00:16:35,725 --> 00:16:37,410
0,305 415,810 810,1110 1110,1350 1350,1685
learning eh has been invented

485
00:16:37,670 --> 00:16:39,100
0,400 540,940
decades ago.|
|

486
00:16:39,170 --> 00:16:40,960
0,400 480,830 830,1100 1100,1420 1440,1790
Eh, but it works well
呃，但是它现在运行得很好，因为有了计算的出现。与四年前相比，我们今天拥有的计算机要多得多。我们今天拥有的深度神经网络数据比40年前多得多。因此，这些当时做得不是很好的技术，突然之间为我们的特工创造了非凡的可能性和能力。

487
00:16:40,960 --> 00:16:43,120
0,350 640,1040 1150,1455 1455,1760 1780,2160
now because of the advent

488
00:16:43,120 --> 00:16:45,240
0,380 700,990 990,1605 1605,1860 1860,2120
of, of computation. We have

489
00:16:45,410 --> 00:16:47,035
0,305 305,545 545,785 785,1265 1265,1625
so much more compute today

490
00:16:47,035 --> 00:16:48,415
0,300 300,465 465,725 745,1065 1065,1380
than we had four years

491
00:16:48,415 --> 00:16:50,020
0,395 865,1110 1110,1245 1245,1395 1395,1605
ago. We have so much

492
00:16:50,020 --> 00:16:51,820
0,270 270,590 670,975 975,1280 1480,1800
more data for deep neural

493
00:16:51,820 --> 00:16:53,215
0,260 400,780 780,1035 1035,1170 1170,1395
networks today than we had

494
00:16:53,215 --> 00:16:54,990
0,285 285,600 600,995 1165,1470 1470,1775
forty years ago. And so

495
00:16:55,070 --> 00:16:56,440
0,350 350,700 720,995 995,1160 1160,1370
these techniques that did not

496
00:16:56,440 --> 00:16:58,140
0,225 225,405 405,680 1030,1365 1365,1700
do so well back then,

497
00:16:58,340 --> 00:16:59,640
0,290 290,425 425,575 575,880 900,1300
all of a sudden are

498
00:16:59,690 --> 00:17:02,640
0,400 1020,1420 1650,2050 2340,2645 2645,2950
creating extraordinary possibilities and capabilities

499
00:17:03,050 --> 00:17:04,600
0,275 275,455 455,760
in our agents.|
|

500
00:17:04,910 --> 00:17:06,205
0,335 335,545 545,695 695,950 950,1295
Now this is a simple
这是一个简单的模拟。为了让模拟驱动一个真正的机器人，我们实际上需要考虑，嗯，机器人的动力学。换句话说，我们必须考虑到车辆的样子，它的运动学是什么，它的动力学是什么？因此，这是一辆运行在模拟中学到的策略的车辆。所以这真的很酷，因为我们现在真的能够进行模拟训练了。如果我们拥有的车辆动力学模型足够好，我们可以采用在模拟中非常快地学习到的策略，我们可以将其部署在车辆上。这是两辆赛车，白色的和绿色的。所以看看那辆白色的车在做什么，看看它是怎么偷偷溜出来的。哇，真的很棒。我希望我能像这样比赛。所以这真的真的非常令人兴奋。在这种情况下，车辆的视野有限，而且它们。

501
00:17:06,205 --> 00:17:08,110
0,605 925,1185 1185,1425 1425,1710 1710,1905
simulation. In order to get

502
00:17:08,110 --> 00:17:09,640
0,180 180,740 820,1095 1095,1320 1320,1530
the simulation to drive a

503
00:17:09,640 --> 00:17:11,485
0,260 310,710 1000,1380 1380,1665 1665,1845
real robot, we actually need

504
00:17:11,485 --> 00:17:13,180
0,180 180,435 435,785 835,1235 1345,1695
to think about, um, the

505
00:17:13,180 --> 00:17:15,265
0,675 675,885 885,1110 1110,1460 1720,2085
dynamics of the robot. And

506
00:17:15,265 --> 00:17:16,510
0,360 360,615 615,810 810,1065 1065,1245
so in other words, we

507
00:17:16,510 --> 00:17:17,730
0,180 180,375 375,540 540,825 825,1220
have to take into account

508
00:17:18,560 --> 00:17:20,035
0,305 305,515 515,820 900,1220 1220,1475
what the vehicle looks like,

509
00:17:20,035 --> 00:17:21,835
0,270 270,525 525,795 795,1560 1560,1800
what are its kinematics, what

510
00:17:21,835 --> 00:17:23,605
0,165 165,405 405,1145 1165,1485 1485,1770
are its dynamics? And so

511
00:17:23,605 --> 00:17:25,540
0,285 285,570 570,885 885,1235 1585,1935
here is a vehicle that

512
00:17:25,540 --> 00:17:27,070
0,255 255,525 525,765 765,1040 1210,1530
is running the policy learned

513
00:17:27,070 --> 00:17:28,765
0,225 225,740 910,1185 1185,1440 1440,1695
in simulation. So it's really

514
00:17:28,765 --> 00:17:31,390
0,395 1225,1625 1795,2195 2215,2475 2475,2625
cool because really we are

515
00:17:31,390 --> 00:17:32,680
0,225 225,555 555,855 855,1080 1080,1290
now able to train in

516
00:17:32,680 --> 00:17:34,080
0,525 525,780 780,915 915,1095 1095,1400
simulation. And if the model

517
00:17:34,730 --> 00:17:35,920
0,350 350,605 605,860 860,1070 1070,1190
that we have for the

518
00:17:35,920 --> 00:17:37,590
0,255 255,915 915,1110 1110,1335 1335,1670
vehicle dynamics is good enough,

519
00:17:37,760 --> 00:17:38,880
0,275 275,455 455,665 665,845 845,1120
we can take the policy

520
00:17:38,990 --> 00:17:40,390
0,290 290,485 485,770 770,1100 1100,1400
that was learned very fast

521
00:17:40,390 --> 00:17:42,115
0,240 240,740 1030,1305 1305,1455 1455,1725
in simulation and we can

522
00:17:42,115 --> 00:17:43,530
0,300 300,540 540,870 870,1140 1140,1415
deploy it on the vehicle.

523
00:17:43,880 --> 00:17:45,390
0,290 290,515 515,850 930,1220 1220,1510
And here are two vehicles

524
00:17:46,220 --> 00:17:47,770
0,400 510,755 755,905 905,1210 1290,1550
racing with each other, the

525
00:17:47,770 --> 00:17:48,985
0,210 210,510 510,795 795,1005 1005,1215
white car and the green

526
00:17:48,985 --> 00:17:50,020
0,285 285,510 510,660 660,855 855,1035
car. So check out what

527
00:17:50,020 --> 00:17:50,890
0,120 120,300 300,480 480,630 630,870
the white car is doing,

528
00:17:50,890 --> 00:17:52,285
0,210 210,345 345,525 525,860 1060,1395
see how it snuck. Wow,

529
00:17:52,285 --> 00:17:53,410
0,315 315,540 540,795 795,990 990,1125
it's really great. I wish

530
00:17:53,410 --> 00:17:54,390
0,150 150,300 300,480 480,690 690,980
I could race like this.

531
00:17:55,970 --> 00:17:57,870
0,275 275,455 455,665 665,970 1500,1900
So this is really, really

532
00:17:58,040 --> 00:18:00,330
0,400 1260,1565 1565,1745 1745,1955 1955,2290
exciting. Now in this case,

533
00:18:00,560 --> 00:18:02,830
0,290 290,580 1050,1450 1500,1900 1980,2270
the vehicles have limited field

534
00:18:02,830 --> 00:18:04,840
0,180 180,470 1360,1725 1725,1980
of view and they.|
|

535
00:18:04,840 --> 00:18:06,085
0,150 150,375 375,710 790,1095 1095,1245
Get the position of the
获得赛道上其他车辆的位置，但只有这样他们才能从外部定位系统获得这个位置，但他们只知道他们视野内的车辆在哪里。所以，看看这个，啊，太棒了。那么，好的，那么我们可以用这些方法做什么，EM，我们已经看到了如何使用深度学习来理解EM，呃，从摄像机中看到的车辆，呃，嗯？我们已经看到了一个学习驾驶的例子。我们能做些什么呢？嗯，我认为这些，呃，这些机器人技术的进步确实使你在第一张幻灯片中看到的创造出许多机器人的可能性成为可能，这些机器人可以完成许多任务，而且比我们这里看到的任务复杂得多。所以我接下来想要谈的是自动驾驶，嗯，我们如何把这些部分放在一起来启用自动驾驶的意思是启用。

536
00:18:06,085 --> 00:18:08,340
0,245 325,725 1465,1755 1755,1950 1950,2255
other vehicles on the track

537
00:18:08,960 --> 00:18:10,675
0,275 275,550 780,1180 1350,1610 1610,1715
but only only so they

538
00:18:10,675 --> 00:18:11,935
0,120 120,360 360,725 745,1020 1020,1260
get this position from an

539
00:18:11,935 --> 00:18:14,230
0,270 270,960 960,1355 1945,2190 2190,2295
external localization system but they

540
00:18:14,230 --> 00:18:16,645
0,210 210,560 1000,1400 1900,2220 2220,2415
only know where the the

541
00:18:16,645 --> 00:18:17,830
0,275 325,645 645,855 855,1020 1020,1185
vehicles within their field of

542
00:18:17,830 --> 00:18:18,775
0,210 210,510 510,735 735,825 825,945
view are. So look at

543
00:18:18,775 --> 00:18:21,840
0,275 595,995 1015,1395 1395,1655 2665,3065
this ah that's great. So

544
00:18:21,860 --> 00:18:23,020
0,350 350,575 575,755 755,950 950,1160
okay so what can we

545
00:18:23,020 --> 00:18:25,380
0,320 430,830 970,1245 1245,1440 1440,2360
do with with these methodologies

546
00:18:25,400 --> 00:18:26,940
0,380 380,635 635,890 890,1160 1160,1540
EM so we've seen how

547
00:18:27,200 --> 00:18:29,100
0,305 305,500 500,790 1290,1595 1595,1900
we can use deep learning

548
00:18:29,630 --> 00:18:31,630
0,400 540,940 1050,1355 1355,1660 1680,2000
to understand the EM eh

549
00:18:31,630 --> 00:18:32,760
0,210 210,450 450,690 690,855 855,1130
the view of the vehicle

550
00:18:32,840 --> 00:18:34,765
0,305 305,610 1110,1460 1460,1775 1775,1925
from cameras eh? We've seen

551
00:18:34,765 --> 00:18:36,940
0,240 240,605 685,990 990,1295 1855,2175
an example of learning to

552
00:18:36,940 --> 00:18:38,790
0,470 880,1200 1200,1395 1395,1560 1560,1850
steer. What can we do

553
00:18:39,140 --> 00:18:41,035
0,400 600,995 995,1340 1340,1610 1610,1895
eh? Well I think that

554
00:18:41,035 --> 00:18:43,780
0,365 415,815 1345,1710 1710,2445 2445,2745
these eh these advancements in

555
00:18:43,780 --> 00:18:46,150
0,530 730,1035 1035,1335 1335,2175 2175,2370
robotics are really enabling the

556
00:18:46,150 --> 00:18:48,670
0,290 1120,1520 1840,2145 2145,2355 2355,2520
possibility that you saw in

557
00:18:48,670 --> 00:18:49,710
0,120 120,345 345,615 615,780 780,1040
the first slide the possibility

558
00:18:49,910 --> 00:18:51,580
0,305 305,590 590,920 920,1415 1415,1670
of creating many robots that

559
00:18:51,580 --> 00:18:53,215
0,165 165,300 300,510 510,860 1270,1635
can do many tasks and

560
00:18:53,215 --> 00:18:54,970
0,285 285,510 510,815 1105,1485 1485,1755
much more complicated tasks than

561
00:18:54,970 --> 00:18:56,380
0,180 180,375 375,570 570,860 1120,1410
what we see here. And

562
00:18:56,380 --> 00:18:57,025
0,135 135,240 240,360 360,480 480,645
so what I want to

563
00:18:57,025 --> 00:18:58,990
0,255 255,605 655,1055 1195,1595 1615,1965
talk about eh next is

564
00:18:58,990 --> 00:19:00,550
0,285 285,990 990,1215 1215,1410 1410,1560
the autopilot how do we

565
00:19:00,550 --> 00:19:02,560
0,195 195,420 420,740 820,1220 1630,2010
take these pieces together to

566
00:19:02,560 --> 00:19:04,570
0,380 490,750 750,1380 1380,1670 1690,2010
enable the autopilot meaning to

567
00:19:04,570 --> 00:19:04,880
0,270
enable.|
|

568
00:19:05,220 --> 00:19:06,875
0,350 350,680 680,1055 1055,1415 1415,1655
A self driving vehicle, I
自动驾驶汽车，我不是这个意思。这款自动驾驶仪不是特斯拉自动驾驶仪。这只是一个想法，你有一辆完整的自动驾驶汽车。现在，为了做到这一点，我们需要更多地推动大脑的发展。我们需要在汽车的学习、推理和规划方面做更多的工作。所以让我，让我问你，你知道美国第一辆自动驾驶的海岸到海岸是什么时候？

569
00:19:06,875 --> 00:19:08,630
0,210 210,455 745,1005 1005,1155 1155,1755
don't mean so. This autopilot

570
00:19:08,630 --> 00:19:11,020
0,180 180,435 435,675 675,1280 1510,2390
is not the Tesla autopilot.

571
00:19:11,160 --> 00:19:12,530
0,410 410,620 620,875 875,1145 1145,1370
It's just the idea that

572
00:19:12,530 --> 00:19:13,625
0,150 150,300 300,510 510,795 795,1095
you have a full self

573
00:19:13,625 --> 00:19:16,775
0,335 1135,1535 2545,2835 2835,2970 2970,3150
driving vehicle. Now, in order

574
00:19:16,775 --> 00:19:17,720
0,195 195,330 330,555 555,765 765,945
to do this, we need

575
00:19:17,720 --> 00:19:19,060
0,300 300,615 615,810 810,1005 1005,1340
to advance the brain more.

576
00:19:19,410 --> 00:19:20,360
0,260 260,410 410,560 560,695 695,950
We need to do more

577
00:19:20,360 --> 00:19:23,045
0,380 940,1215 1215,1490 1930,2475 2475,2685
about the learning, reasoning and

578
00:19:23,045 --> 00:19:24,580
0,335 445,825 825,1080 1080,1245 1245,1535
planning part of the car.

579
00:19:24,840 --> 00:19:26,285
0,320 320,530 530,820 1020,1310 1310,1445
So let me, let me

580
00:19:26,285 --> 00:19:27,230
0,180 180,420 420,600 600,750 750,945
ask you, do you know

581
00:19:27,230 --> 00:19:28,805
0,210 210,420 420,630 630,870 870,1575
when was the first autonomous

582
00:19:28,805 --> 00:19:30,005
0,330 330,540 540,750 750,1020 1020,1200
coast to coast drive in

583
00:19:30,005 --> 00:19:31,340
0,135 135,405 405,785
the United States?|
|

584
00:19:31,350 --> 00:19:32,880
0,305 305,790
Any guesses?|
有没有人猜到？|

585
00:19:36,870 --> 00:19:37,730
0,305 305,455 455,590 590,740 740,860
Not you. I know, you
而不是你。我知道，你知道的。

586
00:19:37,730 --> 00:19:39,080
0,260
know.|
|

587
00:19:42,440 --> 00:19:47,065
0,580 3900,4205 4205,4355 4355,4475 4475,4625
2000 actually, it was in
实际上，那是在1995年，也就是1995年，卡内基梅隆大学的一个项目叫Navab。

588
00:19:47,065 --> 00:19:51,700
0,965 2035,2865 2865,3215 3625,4025 4105,4635
1995 {in,1995 -} a Carnegie

589
00:19:51,700 --> 00:19:55,220
0,315 315,620 730,1130 1150,1850
Mellon project called navab.|
|

590
00:19:55,700 --> 00:19:58,410
0,335 335,545 545,820 1050,1450 2310,2710
Built a car that that
造了一辆实际上是由机器学习引擎阿尔文驱动的汽车。

591
00:19:58,580 --> 00:20:00,430
0,275 275,550 600,905 905,1210 1590,1850
actually was was driven by

592
00:20:00,430 --> 00:20:01,810
0,195 195,420 420,660 660,1010 1060,1380
a machine learning engine called

593
00:20:01,810 --> 00:20:02,980
0,560
alvin.|
|

594
00:20:02,980 --> 00:20:04,650
0,240 240,735 735,1020 1020,1320 1320,1670
And alvin drove this car
阿尔文开着这辆车从华盛顿特区一路开到洛杉矶。在高速公路上的大部分时间里，这辆车都处于自动驾驶模式。但总有一个学生准备好控制汽车，而当有雨、下雨、拥堵或汽车不得不离开出口时，汽车没有，没有在自动驾驶模式下驾驶。这就是这辆车做的事情。它从华盛顿特区一直到洛杉矶。

595
00:20:05,000 --> 00:20:06,450
0,335 335,530 530,790 840,1145 1145,1450
all the way from Washington

596
00:20:06,650 --> 00:20:09,870
0,670 690,1090 1200,1490 1490,1780 2820,3220
dc to los Angeles. And

597
00:20:10,070 --> 00:20:11,650
0,290 290,545 545,815 815,980 980,1580
the car was in autonomous

598
00:20:11,650 --> 00:20:13,350
0,320 430,765 765,960 960,1220 1300,1700
mode for a large part

599
00:20:13,370 --> 00:20:15,040
0,290 290,455 455,730 750,1150 1410,1670
of the highway driving. But

600
00:20:15,040 --> 00:20:15,910
0,90 90,255 255,450 450,615 615,870
there was always a student

601
00:20:15,910 --> 00:20:17,820
0,350 430,795 795,1160 1360,1635 1635,1910
there ready to to take

602
00:20:17,960 --> 00:20:19,450
0,400 510,785 785,965 965,1235 1235,1490
control and the car did

603
00:20:19,450 --> 00:20:21,250
0,290 730,1020 1020,1245 1245,1560 1560,1800
not, did not drive in

604
00:20:21,250 --> 00:20:23,550
0,540 540,860 1210,1610 1690,1995 1995,2300
autonomous mode when there were,

605
00:20:24,080 --> 00:20:25,690
0,350 350,575 575,740 740,1030 1290,1610
when it was raining or

606
00:20:25,690 --> 00:20:26,635
0,225 225,390 390,600 600,810 810,945
when there was a lot

607
00:20:26,635 --> 00:20:27,970
0,150 150,810 810,1020 1020,1185 1185,1335
of congestion or when the

608
00:20:27,970 --> 00:20:30,205
0,210 210,510 510,860 1780,2070 2070,2235
car had to had to

609
00:20:30,205 --> 00:20:32,110
0,180 180,695 1225,1530 1530,1710 1710,1905
take exits. So this is

610
00:20:32,110 --> 00:20:34,030
0,225 225,420 420,710 850,1250 1600,1920
what the car did. It

611
00:20:34,030 --> 00:20:36,385
0,315 315,710 940,1340 1510,2085 2085,2355
went from Washington dc, all

612
00:20:36,385 --> 00:20:37,620
0,195 195,455 535,795 795,945 945,1235
the way to los Angeles.|
|

613
00:20:39,240 --> 00:20:41,045
0,400 420,1355 1355,1490 1490,1610 1610,1805
{Now1995 -} is a long
现在1995年是很久以前的事了，对吗？我是说，那是在你们很多人出生之前。因此，思考在进步方面需要哪些方面的进步，才能从我们当时的位置回到我们可以真正看到部署的自动驾驶汽车的地步，这真的是非同寻常的。顺便说一句，你应该来看看麻省理工学院亚历山大在过去五年里制造的自动驾驶汽车，它们非常强大，可以在我们附近驾驶。

614
00:20:41,045 --> 00:20:42,550
0,285 285,570 570,905 985,1245 1245,1505
time ago, right? I mean,

615
00:20:42,630 --> 00:20:43,880
0,350 350,605 605,890 890,1040 1040,1250
it's before many of you

616
00:20:43,880 --> 00:20:45,430
0,225 225,500 940,1170 1170,1320 1320,1550
were born. So it's really

617
00:20:45,450 --> 00:20:47,675
0,400 600,890 890,1145 1145,1510 1950,2225
extraordinary to think about what

618
00:20:47,675 --> 00:20:50,405
0,210 210,545 1375,1755 1755,2135 2365,2730
is needed in terms of

619
00:20:50,405 --> 00:20:52,000
0,645 645,825 825,1020 1020,1260 1260,1595
advancement in terms of progress

620
00:20:52,110 --> 00:20:53,620
0,260 260,520 540,845 845,1130 1130,1510
in order to get from

621
00:20:53,880 --> 00:20:55,205
0,305 305,515 515,770 770,1040 1040,1325
where we were back then

622
00:20:55,205 --> 00:20:56,210
0,225 225,375 375,600 600,840 840,1005
to the point where we

623
00:20:56,210 --> 00:20:57,830
0,210 210,465 465,720 720,1080 1080,1620
can actually see deployed autonomous

624
00:20:57,830 --> 00:20:59,150
0,290 670,930 930,1065 1065,1185 1185,1320
vehicles. And by the way,

625
00:20:59,150 --> 00:21:00,380
0,195 195,405 405,600 600,890 940,1230
you should come and check

626
00:21:00,380 --> 00:21:02,290
0,290 310,675 675,1005 1005,1620 1620,1910
out the MIT autonomous vehicles

627
00:21:02,910 --> 00:21:05,120
0,400 450,850 990,1390 1500,1895 1895,2210
which Alexander has built over

628
00:21:05,120 --> 00:21:06,425
0,195 195,450 450,735 735,1035 1035,1305
the past five years, which

629
00:21:06,425 --> 00:21:08,000
0,150 150,345 345,665 1045,1350 1350,1575
are very powerful and can

630
00:21:08,000 --> 00:21:09,820
0,315 315,570 570,750 750,1070
drive in our neighborhood.|
|

631
00:21:10,730 --> 00:21:11,515
0,245 245,380 380,485 485,635 635,785
And we'll talk about how
我们将讨论他们是如何驾驶的。但有趣的是，这并不是我们第一次在高速公路上以自动驾驶模式比赛汽车。事实上，你知道世界上任何地方第一次自动驾驶高速公路是什么时候吗？

632
00:21:11,515 --> 00:21:14,680
0,165 165,455 1555,1955 2095,2675 2905,3165
they drive. But interestingly, this

633
00:21:14,680 --> 00:21:15,700
0,150 150,330 330,495 495,735 735,1020
was not the first time

634
00:21:15,700 --> 00:21:17,580
0,195 195,345 345,615 615,1010 1480,1880
when we had cars racing

635
00:21:17,600 --> 00:21:19,615
0,245 245,785 785,1330 1350,1715 1715,2015
in autonomous modes on, on

636
00:21:19,615 --> 00:21:22,750
0,545 1765,2070 2070,2375 2815,3045 3045,3135
highways. In fact, do you

637
00:21:22,750 --> 00:21:24,220
0,225 225,590 700,1020 1020,1215 1215,1470
know when was the first

638
00:21:24,220 --> 00:21:26,095
0,645 645,930 930,1310 1510,1770 1770,1875
autonomous highway drive in the

639
00:21:26,095 --> 00:21:27,900
0,245 1105,1350 1350,1455 1455,1560 1560,1805
world, anywhere in the world?|
|

640
00:21:32,670 --> 00:21:35,020
0,260 260,395 395,545 545,710 710,2350
So it was in 1986.|
1986年的情况也是如此。|

641
00:21:35,870 --> 00:21:38,515
0,260 260,395 395,1690 1830,2150 2150,2645
And in 1986 {German,engineer} ernst
1986年，德国工程师恩斯特·迪克曼开始考虑如何将他的面包车变成一辆自动驾驶汽车。因此，他在货车上安装了电脑和摄像头，并开始在德国汽车的一个空荡荡的部分进行测试，那里还没有对公共驾驶开放。实际上，他能够让他的货车在那条空荡荡的道路上行驶，但有趣的是。

642
00:21:38,515 --> 00:21:41,875
0,635 1075,1475 1915,2315 2365,2765 2965,3360
dickman started thinking about how

643
00:21:41,875 --> 00:21:43,170
0,270 270,450 450,720 720,990 990,1295
he could turn his Van

644
00:21:43,580 --> 00:21:46,570
0,400 540,815 815,1385 1385,1690 2640,2990
into an autonomous vehicle. And

645
00:21:46,570 --> 00:21:47,980
0,270 270,465 465,720 720,1095 1095,1410
so he put computers and

646
00:21:47,980 --> 00:21:49,375
0,320 460,735 735,870 870,1095 1095,1395
cameras on the Van and

647
00:21:49,375 --> 00:21:51,070
0,270 270,605 655,1055 1135,1455 1455,1695
began running tests on an

648
00:21:51,070 --> 00:21:53,185
0,320 910,1310 1420,1710 1710,1875 1875,2115
empty section of the German

649
00:21:53,185 --> 00:21:54,790
0,660 660,930 930,1125 1125,1320 1320,1605
autooban, which had not been

650
00:21:54,790 --> 00:21:58,320
0,300 300,620 670,1070 2110,2510 3130,3530
open for for public driving.

651
00:21:59,030 --> 00:22:01,470
0,400 780,1145 1145,1415 1415,1720 2040,2440
And he was able to

652
00:22:01,550 --> 00:22:02,605
0,260 260,395 395,560 560,800 800,1055
actually get his Van to

653
00:22:02,605 --> 00:22:04,170
0,305 385,690 690,900 900,1185 1185,1565
drive on that empty road,

654
00:22:05,000 --> 00:22:07,560
0,400 1260,1870
but interestingly.|
|

655
00:22:07,630 --> 00:22:09,620
0,335 335,590 590,910 960,1360 1590,1990
When he started developing this
当他开始开发这项工作时，计算机大约需要10分钟来分析一幅图像。

656
00:22:09,640 --> 00:22:12,795
0,400 1710,2105 2105,2500 2550,2900 2900,3155
work, computers needed about ten

657
00:22:12,795 --> 00:22:14,570
0,305 355,600 600,1115 1255,1515 1515,1775
minutes to analyze an image.|
|

658
00:22:16,080 --> 00:22:18,125
0,400 480,725 725,845 845,1120 1710,2045
Okay, can you imagine? Okay,
好的，你能想象吗？好的，那么你如何，如何使自动驾驶汽车能够以每小时90公里的速度行驶。

659
00:22:18,125 --> 00:22:20,090
0,270 270,570 570,795 795,1055 1615,1965
so how do you, how

660
00:22:20,090 --> 00:22:21,700
0,180 180,285 285,560 580,980 1210,1610
do you go from that

661
00:22:21,870 --> 00:22:23,770
0,335 335,980 980,1085 1085,1610 1610,1900
to enabling an autonomous vehicle

662
00:22:23,880 --> 00:22:25,955
0,350 350,635 635,970 1170,1535 1535,2075
to drive at ninety kilometers

663
00:22:25,955 --> 00:22:27,160
0,135 135,395
an hour.|
|

664
00:22:27,740 --> 00:22:29,515
0,365 365,730 1020,1310 1310,1505 1505,1775
Well, EM, what they did
嗯，嗯，他们所做的就是他们呃，呃，他们，他们开发了一些非常快速的解决方案，把图像缩小到EM，只需要看他们需要看的方面，他们假设世界上没有障碍，这使得问题变得容易得多，因为汽车所要做的就是保持在路上。因此，思考视觉处理如何从每十分钟一帧提高到每秒一百帧，真的非常有趣。

665
00:22:29,515 --> 00:22:31,675
0,345 345,705 705,1085 1375,1775 1825,2160
was they eh, eh, they,

666
00:22:31,675 --> 00:22:34,105
0,315 315,695 1375,1755 1755,2100 2100,2430
they developed some very fast

667
00:22:34,105 --> 00:22:36,250
0,365 715,1035 1035,1425 1425,1715 1885,2145
solutions for paring down the

668
00:22:36,250 --> 00:22:39,330
0,260 430,810 810,1190 1330,1730 2680,3080
image to EM, only the

669
00:22:39,350 --> 00:22:40,960
0,335 335,530 530,665 665,940 1350,1610
aspects that they needed to

670
00:22:40,960 --> 00:22:42,055
0,150 150,375 375,600 600,825 825,1095
look at and they assumed

671
00:22:42,055 --> 00:22:43,030
0,105 105,240 240,375 375,495 495,975
that there were no obstacles

672
00:22:43,030 --> 00:22:44,620
0,150 150,255 255,450 450,800 1270,1590
in the world, which made

673
00:22:44,620 --> 00:22:46,200
0,180 180,390 390,675 675,1010 1180,1580
the problem much easier because

674
00:22:46,250 --> 00:22:47,170
0,275 275,410 410,560 560,755 755,920
all the car had to

675
00:22:47,170 --> 00:22:48,625
0,135 135,315 315,525 525,830 1060,1455
do was to stay on

676
00:22:48,625 --> 00:22:50,380
0,300 300,450 450,695 1165,1485 1485,1755
on the road. So it's

677
00:22:50,380 --> 00:22:52,840
0,260 280,680 1510,1890 1890,2175 2175,2460
really super interesting to think

678
00:22:52,840 --> 00:22:55,140
0,375 375,770 790,1185 1185,1580 1900,2300
about how visual processing improved

679
00:22:55,880 --> 00:22:57,745
0,380 380,725 725,1090 1350,1655 1655,1865
from one frame per ten

680
00:22:57,745 --> 00:22:59,545
0,305 715,990 990,1140 1140,1410 1410,1800
minutes to a hundred frames

681
00:22:59,545 --> 00:23:00,660
0,255 255,545
per second.|
|

682
00:23:01,210 --> 00:23:02,430
0,320 320,575 575,845 845,1055 1055,1220
And this has been a
这已经改变了自动驾驶汽车的游戏规则，我们又回到了硬件和软件之间的联系。我们两者都需要，才能为实际问题找到好的解决方案。

683
00:23:02,430 --> 00:23:04,575
0,270 270,855 855,1140 1140,1830 1830,2145
game changer for autonomous cars,

684
00:23:04,575 --> 00:23:06,000
0,270 270,585 585,855 855,1185 1185,1425
and we're getting back to

685
00:23:06,000 --> 00:23:07,935
0,225 225,590 790,1095 1095,1400 1600,1935
the connection between hardware and

686
00:23:07,935 --> 00:23:09,810
0,335 865,1125 1125,1320 1320,1635 1635,1875
software. We need both in

687
00:23:09,810 --> 00:23:11,300
0,240 240,480 480,740 820,1155 1155,1490
order to get good solutions

688
00:23:11,620 --> 00:23:14,860
0,400 840,1190 1190,1540
for real problems.|
|

689
00:23:14,980 --> 00:23:16,130
0,245 245,425 425,650 650,845 845,1150
The other thing that happened
自动驾驶中发生的另一件事是，激光雷达传感器减少了不确定性，增加了安全性。今天，我们有许多公司和集团正在部署自动驾驶汽车。这是一个来自新加坡的例子。这是我们部署的车辆，事实上，我们在2014年让公众乘坐我们的车辆。我们在麻省理工学院有车。我们现在还有很多其他的团队正在开发这些车辆。在我们有激光雷达之前，我们有声纳，当我们有声纳的时候，什么都不能用。

690
00:23:16,450 --> 00:23:18,045
0,260 260,785 785,1085 1085,1370 1370,1595
in autonomous driving was that

691
00:23:18,045 --> 00:23:20,655
0,210 210,675 675,1265 1735,2265 2265,2610
the lidar sensors decreased the

692
00:23:20,655 --> 00:23:23,625
0,365 955,1355 1435,1800 1800,2165 2665,2970
uncertainty and increased safety. And

693
00:23:23,625 --> 00:23:25,040
0,305 325,600 600,780 780,1050 1050,1415
today we have many companies

694
00:23:25,210 --> 00:23:27,410
0,320 320,640 810,1115 1115,1420 1590,2200
and groups that are deploying

695
00:23:27,790 --> 00:23:29,190
0,335 335,665 665,1025 1025,1265 1265,1400
self driving cars. This is

696
00:23:29,190 --> 00:23:31,880
0,225 225,590 760,1160 1480,2175 2175,2690
an example from Singapore. It's,

697
00:23:32,050 --> 00:23:33,710
0,365 365,470 470,730 750,1115 1115,1660
it's a vehicle we deployed

698
00:23:33,790 --> 00:23:34,620
0,260 260,380 380,530 530,680 680,830
and in fact, we had

699
00:23:34,620 --> 00:23:36,500
0,165 165,440 970,1305 1305,1560 1560,1880
the public ride our vehicle

700
00:23:37,150 --> 00:23:40,155
0,365 365,1895 1895,2170 2220,2620 2670,3005
in 2014. {We,have} vehicles at

701
00:23:40,155 --> 00:23:41,820
0,335 505,780 780,1055 1255,1515 1515,1665
MIT. We have a lot

702
00:23:41,820 --> 00:23:43,550
0,180 180,435 435,800 1180,1455 1455,1730
of other groups that are

703
00:23:43,720 --> 00:23:47,270
0,400 450,755 755,1060 1830,2230 3150,3550
developing these vehicles now. Before

704
00:23:47,410 --> 00:23:48,885
0,260 260,440 440,1000 1020,1280 1280,1475
we had lidar, we had

705
00:23:48,885 --> 00:23:51,015
0,485 865,1170 1170,1455 1455,1835 1855,2130
sonar and nothing worked when

706
00:23:51,015 --> 00:23:52,160
0,135 135,330 330,815
we had sonar.|
|

707
00:23:53,230 --> 00:23:55,490
0,400 630,1030 1260,1565 1565,1865 1865,2260
Because, eh, when you, eh,
因为，呃，当你，呃，当你使用声纳时，声纳波束只是向前移动，然后它们就会反弹。如果角度大约是正负7度，你会听到粉色的背部。但是如果角度，所以如果声纳在一个与呃，从声纳方向成七度角以上的表面上反弹，那个声纳脉冲就会反弹，它会反弹到另一个。

708
00:23:56,020 --> 00:23:57,830
0,275 275,425 425,700 990,1310 1310,1810
when you work with sonar,

709
00:23:58,180 --> 00:23:59,895
0,320 320,725 725,1210 1230,1535 1535,1715
the sonar beams just kind

710
00:23:59,895 --> 00:24:01,860
0,275 805,1170 1170,1535 1555,1830 1830,1965
of go forward and then

711
00:24:01,860 --> 00:24:03,450
0,120 120,410 1000,1290 1290,1455 1455,1590
they bounce. And if the

712
00:24:03,450 --> 00:24:05,990
0,260 430,780 780,1130 1840,2190 2190,2540
angle is about plus minus

713
00:24:06,070 --> 00:24:08,480
0,400 480,880 1650,1925 1925,2105 2105,2410
seven degrees, you will hear

714
00:24:08,650 --> 00:24:10,260
0,275 275,500 500,850 1170,1445 1445,1610
the pink back. But if

715
00:24:10,260 --> 00:24:12,060
0,165 165,440 730,1130 1360,1635 1635,1800
the angle, so if the

716
00:24:12,060 --> 00:24:13,580
0,330 330,870 870,1065 1065,1230 1230,1520
sonunar bounces on a surface

717
00:24:13,660 --> 00:24:16,140
0,425 425,680 680,1060 1710,2110 2160,2480
that's more than seven degrees

718
00:24:16,140 --> 00:24:18,255
0,560 940,1320 1320,1665 1665,1920 1920,2115
angled from eh, from the

719
00:24:18,255 --> 00:24:20,085
0,285 285,540 540,720 720,1235 1435,1830
direction of the sonar, that

720
00:24:20,085 --> 00:24:22,310
0,605 835,1170 1170,1470 1470,1860 1860,2225
sonar ping will bounce off

721
00:24:22,510 --> 00:24:23,940
0,260 260,365 365,605 605,1060 1110,1430
and it will bounce on

722
00:24:23,940 --> 00:24:24,820
0,320
other.|
|

723
00:24:24,950 --> 00:24:26,110
0,305 305,500 500,785 785,1040 1040,1160
Objects and walls and you
物体和墙壁，你会得到。

724
00:24:26,110 --> 00:24:27,220
0,135 135,410
will get.|
|

725
00:24:27,350 --> 00:24:29,515
0,400 510,875 875,1505 1505,1835 1835,2165
Wrong direction measurements, wrong distance
方向测量错误，距离测量错误。

726
00:24:29,515 --> 00:24:31,420
0,665
measurements.|
|

727
00:24:31,550 --> 00:24:33,115
0,275 275,440 440,1000 1020,1325 1325,1565
So with lidar, that problem
因此，有了激光雷达，这个问题就消失了，所以突然之间，一个强大、准确的传感器产生了巨大的变化。当雷达被引入时，所有在声纳上开发的、不起作用的算法都开始工作。这真的很令人兴奋。

728
00:24:33,115 --> 00:24:34,480
0,300 300,665 715,1035 1035,1230 1230,1365
went away, so all of

729
00:24:34,480 --> 00:24:37,020
0,150 150,440 1060,1425 1425,1790 2140,2540
a sudden a powerful, accurate

730
00:24:37,250 --> 00:24:39,210
0,670 840,1160 1160,1385 1385,1625 1625,1960
sensor made a huge difference.

731
00:24:39,230 --> 00:24:40,855
0,320 320,605 605,1085 1085,1340 1340,1625
All the algorithms that were

732
00:24:40,855 --> 00:24:42,280
0,330 330,615 615,990 990,1155 1155,1425
developed on sonar and didn't

733
00:24:42,280 --> 00:24:44,140
0,260 700,1050 1050,1400 1420,1710 1710,1860
work started working when the

734
00:24:44,140 --> 00:24:45,625
0,315 315,590 670,1070 1180,1395 1395,1485
radar was introduced. It was

735
00:24:45,625 --> 00:24:47,620
0,225 225,575
really exciting.|
|

736
00:24:48,010 --> 00:24:50,610
0,400 870,1265 1265,1660 2040,2375 2375,2600
Um, okay. Now when we
嗯，好的。现在，当我们思考，呃，自动驾驶，当我们思考这些系统的能力时，会出现几个关键参数。还有一个问题是，汽车行驶的环境有多复杂。如果像德国的情况一样，这是一条空路，那么问题就容易多了。

737
00:24:50,610 --> 00:24:53,330
0,240 240,590 670,1070 1690,2400 2400,2720
think about, eh, autonomous driving,

738
00:24:53,470 --> 00:24:55,130
0,260 260,455 455,785 785,1070 1070,1660
there are several key parameters

739
00:24:55,330 --> 00:24:57,630
0,400 720,1250 1250,1520 1520,1900 1950,2300
that emerge as we think

740
00:24:57,630 --> 00:24:59,955
0,350 880,1215 1215,1410 1410,1670 2050,2325
about what the capabilities of

741
00:24:59,955 --> 00:25:02,210
0,180 180,485 535,935 1585,1920 1920,2255
these systems are. And one

742
00:25:02,230 --> 00:25:03,720
0,320 320,605 605,860 860,1150 1200,1490
one question is how complex

743
00:25:03,720 --> 00:25:05,190
0,165 165,330 330,620 850,1215 1215,1470
is the environment where the

744
00:25:05,190 --> 00:25:06,360
0,210 210,435 435,705 705,945 945,1170
car is moving. If it's

745
00:25:06,360 --> 00:25:07,980
0,105 105,380 640,1005 1005,1350 1350,1620
an empty road like in

746
00:25:07,980 --> 00:25:09,345
0,180 180,450 450,795 795,1125 1125,1365
the German case, then the

747
00:25:09,345 --> 00:25:11,020
0,195 195,420 420,645 645,965
problem is much easier.|
|

748
00:25:11,650 --> 00:25:12,680
0,350 350,560 560,695 695,800 800,1030
Then we have to ask
然后我们必须问自己，汽车和环境之间的相互作用有多复杂？我们还必须考虑汽车的推理有多复杂，汽车开得有多快？所有这些问题背后都有一个根本性的问题。而这个根本性的问题是，汽车如何应对不确定性？

749
00:25:12,730 --> 00:25:14,355
0,320 320,640 660,1060 1080,1400 1400,1625
ourselves how, how complex are

750
00:25:14,355 --> 00:25:16,080
0,270 270,905 925,1230 1230,1440 1440,1725
the interactions between the car

751
00:25:16,080 --> 00:25:17,535
0,270 270,465 465,770 970,1245 1245,1455
and the environment? And we

752
00:25:17,535 --> 00:25:18,710
0,225 225,435 435,630 630,840 840,1175
also have to think about

753
00:25:19,000 --> 00:25:20,430
0,400 420,710 710,875 875,1010 1010,1430
how complex is the reasoning

754
00:25:20,430 --> 00:25:21,525
0,135 135,300 300,525 525,795 795,1095
of the car, how fast

755
00:25:21,525 --> 00:25:23,690
0,255 255,420 420,615 615,935 1765,2165
is the car going? And

756
00:25:23,740 --> 00:25:25,965
0,400 750,1115 1115,1400 1400,1720 1950,2225
underlying all these questions is

757
00:25:25,965 --> 00:25:27,840
0,150 150,425 655,1055 1435,1710 1710,1875
a fundamental question. And this

758
00:25:27,840 --> 00:25:29,925
0,290 490,890 910,1310 1480,1830 1830,2085
fundamental question is how does

759
00:25:29,925 --> 00:25:31,220
0,180 180,375 375,660 660,930 930,1295
the car cope with uncertainties?|
|

760
00:25:32,800 --> 00:25:34,580
0,290 290,455 455,680 680,1030 1380,1780
Now you have seen that
现在您已经看到，机器学习具有与之相关的不确定性。因此，当您考虑在安全关键型应用程序上部署机器学习时，考虑您的环境、您要部署的模型的不确定性和实际应用程序需求之间的联系是极其重要的。

761
00:25:34,660 --> 00:25:37,460
0,290 290,580 1290,1690 1860,2260 2400,2800
machine learning has uncertainty associated

762
00:25:37,660 --> 00:25:39,615
0,275 275,550 1050,1340 1340,1595 1595,1955
with it. So as you

763
00:25:39,615 --> 00:25:42,045
0,395 505,1125 1125,1380 1380,1655 2095,2430
consider deploying machine learning on

764
00:25:42,045 --> 00:25:44,100
0,330 330,725 1075,1475 1615,1875 1875,2055
safety critical applications, it is

765
00:25:44,100 --> 00:25:46,725
0,320 340,740 1150,1545 1545,1940 2260,2625
super important to consider the

766
00:25:46,725 --> 00:25:49,820
0,365 655,1055 1735,2010 2010,2285 2695,3095
connection between between your context,

767
00:25:50,440 --> 00:25:52,100
0,395 395,790 930,1205 1205,1370 1370,1660
the uncertainties of the models

768
00:25:52,120 --> 00:25:53,955
0,275 275,620 620,1210 1260,1580 1580,1835
that you're deploying and what

769
00:25:53,955 --> 00:25:56,520
0,335 355,755 805,1205 1315,1715
the actual application requires.|
|

770
00:25:56,520 --> 00:25:57,285
0,195 195,300 300,435 435,600 600,765
And I will tell you
我要告诉你，今天我们有非常有效和可部署的机器人汽车解决方案，可以在简单的环境中安全移动，那里没有太多静态或移动的障碍物。你可以，你可以从这个例子中看到，这是一个麻省理工学院汽车的例子，你可以看到，这辆车在德文堡自动驾驶，没有任何问题，那里没有太多障碍。

771
00:25:57,285 --> 00:25:58,970
0,195 195,515 595,885 885,1175 1285,1685
that today we have very

772
00:25:59,080 --> 00:26:01,875
0,400 600,1000 1020,1535 1535,1840 2430,2795
effective and deployable solutions for

773
00:26:01,875 --> 00:26:03,500
0,315 315,665 715,1005 1005,1260 1260,1625
robot cars that move safely

774
00:26:04,240 --> 00:26:06,225
0,320 320,640 750,1415 1415,1760 1760,1985
in easy environments where there

775
00:26:06,225 --> 00:26:08,130
0,450 450,755 955,1380 1380,1665 1665,1905
aren't many static nor moving

776
00:26:08,130 --> 00:26:11,520
0,770 1630,2030 2380,2685 2685,2990 3100,3390
obstacles. And you can, you

777
00:26:11,520 --> 00:26:12,740
0,210 210,420 420,600 600,855 855,1220
can see from this example,

778
00:26:12,910 --> 00:26:14,100
0,290 290,580 600,860 860,980 980,1190
this is, this is an

779
00:26:14,100 --> 00:26:15,440
0,300 300,525 525,675 675,945 945,1340
example of the MIT car

780
00:26:15,730 --> 00:26:17,685
0,400 810,1340 1340,1595 1595,1775 1775,1955
and its you can see

781
00:26:17,685 --> 00:26:20,040
0,275 355,675 675,995 1195,1545 1545,2355
this, this car operating autonomously

782
00:26:20,040 --> 00:26:21,960
0,210 210,480 480,800 1300,1650 1650,1920
without any issues at Fort

783
00:26:21,960 --> 00:26:24,090
0,480 480,860 1270,1545 1545,1950 1950,2130
Devon where there aren't too

784
00:26:24,090 --> 00:26:25,340
0,135 135,830
many obstacles.|
|

785
00:26:25,340 --> 00:26:26,230
0,195 195,315 315,450 450,600 600,890
And the car is perfectly
这辆车完全有能力避开障碍物。顺便说一下，那是我的车。所以我很高兴这辆车能够很好地避开障碍物。事实上，我非常确信，我说，好的，我们可以用我的车作为障碍。

786
00:26:26,250 --> 00:26:28,385
0,400 510,910 1140,1625 1625,1730 1730,2135
capable of avoiding the obstacle.

787
00:26:28,385 --> 00:26:29,075
0,105 105,195 195,285 285,510 510,690
By the way, that's my

788
00:26:29,075 --> 00:26:30,485
0,335 565,810 810,945 945,1125 1125,1410
car. So I'm very glad

789
00:26:30,485 --> 00:26:31,660
0,210 210,375 375,600 600,855 855,1175
that the car is very

790
00:26:31,800 --> 00:26:35,150
0,400 540,940 1860,2330 2330,2990 2990,3350
capable of avoiding obstacles. And

791
00:26:35,150 --> 00:26:36,185
0,285 285,495 495,660 660,795 795,1035
in fact, I was so

792
00:26:36,185 --> 00:26:37,610
0,365 385,720 720,1035 1035,1290 1290,1425
convinced, I said, okay, we

793
00:26:37,610 --> 00:26:38,525
0,120 120,300 300,525 525,720 720,915
can use my car as

794
00:26:38,525 --> 00:26:39,640
0,135 135,725
the obstacle.|
|

795
00:26:40,230 --> 00:26:41,690
0,275 275,455 455,965 965,1295 1295,1460
But the sensors don't work
但传感器在天气中不能很好地工作，如果下大雨或下雪，感知系统的不确定性会显著增加。而车辆先验的不确定性也增加了。在极端拥堵的情况下，车辆行驶不稳定，人们骑着踏板车，甚至路上还有牛。这是我在班加罗尔打车时拍摄的一段视频。牛来了。

796
00:26:41,690 --> 00:26:43,330
0,225 225,465 465,770 1060,1350 1350,1640
well in weather, and the

797
00:26:43,380 --> 00:26:45,310
0,400 630,920 920,1070 1070,1535 1535,1930
uncertainty of the perception system

798
00:26:45,420 --> 00:26:47,720
0,395 395,790 1560,1835 1835,2000 2000,2300
increases significantly if it rains

799
00:26:47,720 --> 00:26:49,925
0,380 400,750 750,1035 1035,1430 1810,2205
hard or it snows. And

800
00:26:49,925 --> 00:26:51,640
0,395 565,965 1045,1320 1320,1455 1455,1715
the uncertainty of the vehicle

801
00:26:51,690 --> 00:26:54,170
0,400 810,1210 1230,1630 2010,2300 2300,2480
prior also increases. In the

802
00:26:54,170 --> 00:26:56,300
0,210 210,530 580,930 930,1730 1840,2130
case of extreme congestion, where

803
00:26:56,300 --> 00:26:58,235
0,180 180,465 465,1185 1185,1520 1600,1935
you have erratic driving with

804
00:26:58,235 --> 00:27:00,160
0,335 565,870 870,1140 1140,1425 1425,1925
vehicles, with people with scooters,

805
00:27:00,420 --> 00:27:02,630
0,365 365,730 1140,1600 1740,2045 2045,2210
even with cows on the

806
00:27:02,630 --> 00:27:03,950
0,260 550,855 855,1035 1035,1185 1185,1320
road. And this is a

807
00:27:03,950 --> 00:27:06,200
0,225 225,555 555,920 1600,1980 1980,2250
video I took during a

808
00:27:06,200 --> 00:27:08,345
0,285 285,630 630,870 870,1460 1870,2145
taxi ride in Bangalore. There

809
00:27:08,345 --> 00:27:09,920
0,165 165,300 300,575
come the cows.|
|

810
00:27:11,520 --> 00:27:13,655
0,400 630,1030 1200,1520 1520,1835 1835,2135
So, um, there are so
所以，嗯，有这么多重要的前提条件，其中许多前提条件围绕着感知、规划、学习、推理和执行方面的不确定性，然后我们才能进入机器人出租车。

811
00:27:13,655 --> 00:27:16,085
0,305 415,780 780,1415 1915,2205 2205,2430
many important preconditions, and many

812
00:27:16,085 --> 00:27:18,070
0,195 195,375 375,930 930,1475 1585,1985
of these preconditions revolve around

813
00:27:18,150 --> 00:27:20,350
0,400 510,830 830,1360 1410,1805 1805,2200
uncertainty in perception, planning, learning,

814
00:27:20,370 --> 00:27:22,835
0,515 515,790 900,1300 1710,2110 2190,2465
reasoning and execution before we

815
00:27:22,835 --> 00:27:24,070
0,165 165,420 420,645 645,945 945,1235
can get to robo taxi.|
|

816
00:27:25,760 --> 00:27:26,970
0,290 290,455 455,650 650,890 890,1210
We can have many other
我们可以有许多其他的机器人解决方案，这些解决方案在今天可以发生很多事情。所以我想告诉你，许多公司和研究团队正在部署和开发自动驾驶汽车，其中许多公司遵循一个非常简单的解决方案，你可以采用这个解决方案，将你的汽车变成自动驾驶汽车。所以这就是你要做的。

817
00:27:27,710 --> 00:27:30,780
0,320 320,640 1320,1700 1700,2080 2670,3070
robot solutions that are much

818
00:27:31,160 --> 00:27:33,775
0,400 630,905 905,1160 1160,1540 2340,2615
that can happen today. And

819
00:27:33,775 --> 00:27:34,825
0,150 150,315 315,480 480,755 775,1050
so I want to tell

820
00:27:34,825 --> 00:27:36,175
0,150 150,330 330,570 570,905 1075,1350
you that many companies and

821
00:27:36,175 --> 00:27:38,760
0,275 535,935 955,1355 1705,2250 2250,2585
research teams are deploying and

822
00:27:38,930 --> 00:27:41,400
0,400 510,815 815,1100 1100,1480 2070,2470
developing self driving cars and

823
00:27:41,750 --> 00:27:43,135
0,290 290,455 455,680 680,1030 1110,1385
many of them follow a

824
00:27:43,135 --> 00:27:45,190
0,275 385,780 780,1175 1435,1800 1800,2055
very simple solution which you

825
00:27:45,190 --> 00:27:46,390
0,210 210,540 540,720 720,960 960,1200
can adopt and turn your

826
00:27:46,390 --> 00:27:47,605
0,285 285,570 570,750 750,930 930,1215
car into a self driving

827
00:27:47,605 --> 00:27:48,610
0,315 315,510 510,720 720,855 855,1005
car. So here's what you

828
00:27:48,610 --> 00:27:49,800
0,165 165,315 315,560
have to do.|
|

829
00:27:49,800 --> 00:27:51,950
0,150 150,300 300,480 480,770 1750,2150
You take your car, you
你拿着你的车，你把它扩展到有线驾驶，这样你的计算机就可以与方向盘、加速和油门控制进行对话。

830
00:27:52,330 --> 00:27:53,490
0,290 290,530 530,755 755,950 950,1160
extend it to drive by

831
00:27:53,490 --> 00:27:54,960
0,420 420,675 675,900 900,1170 1170,1470
wires so that your computer

832
00:27:54,960 --> 00:27:57,120
0,270 270,590 640,1040 1720,1980 1980,2160
can talk to to the

833
00:27:57,120 --> 00:27:58,875
0,525 525,810 810,1020 1020,1515 1515,1755
steering and the acceleration, the

834
00:27:58,875 --> 00:28:00,400
0,435 435,815
throttle controls.|
|

835
00:28:00,650 --> 00:28:03,310
0,400 810,1210 1230,1625 1625,1930 2280,2660
So then you further extend
因此，你进一步扩展这辆车的传感器，我们使用的大多数传感器是摄像头和打火机。

836
00:28:03,310 --> 00:28:04,705
0,300 300,570 570,810 810,1215 1215,1395
this car with sensors, and

837
00:28:04,705 --> 00:28:05,845
0,195 195,375 375,525 525,945 945,1140
most of the sensors we

838
00:28:05,845 --> 00:28:08,400
0,275 295,695 955,1355 1525,1925 1945,2555
use are cameras and lighters.|
|

839
00:28:09,350 --> 00:28:10,120
0,260 260,395 395,530 530,635 635,770
And then there are a
然后是一套软件模型和模块，其中包括一个感知模块，它为绘制地图和检测静态和动态障碍物提供支持。然后我们有一个评估模块来识别机器人的位置。它通过将感知系统现在看到的东西与通过查看基础设施创建的地图进行比较来做到这一点。最后，还有一个学习计划和控制系统，它可以根据汽车所在的位置计算出它应该做什么。所以就是这样了。这是食谱。你可以把你的车变成一辆自动驾驶汽车。当你这样做的时候，你真的必须从根本上考虑。

840
00:28:10,120 --> 00:28:12,300
0,240 240,420 420,740 790,1190 1510,2180
suite of software models, modules,

841
00:28:12,560 --> 00:28:13,890
0,245 245,440 440,695 695,875 875,1330
and this includes a perception

842
00:28:13,910 --> 00:28:15,865
0,515 515,785 785,1150 1350,1715 1715,1955
module that provides support for

843
00:28:15,865 --> 00:28:18,115
0,255 255,635 1105,1440 1440,1740 1740,2250
making maps and for detecting

844
00:28:18,115 --> 00:28:20,310
0,270 270,600 600,915 915,1265 1345,2195
a static and dynamic obstacles.

845
00:28:20,900 --> 00:28:21,750
0,230 230,335 335,470 470,590 590,850
And then we have an

846
00:28:21,770 --> 00:28:25,890
0,520 570,1210 1800,2200 2880,3610 3720,4120
estimation module that identifies where

847
00:28:26,150 --> 00:28:27,655
0,350 350,605 605,905 905,1265 1265,1505
the robot is located. And

848
00:28:27,655 --> 00:28:29,070
0,150 150,375 375,630 630,870 870,1415
it does so by comparing

849
00:28:30,230 --> 00:28:32,730
0,400 1290,1580 1580,1715 1715,2105 2105,2500
what what the perception system

850
00:28:32,840 --> 00:28:35,860
0,335 335,670 810,1210 2460,2765 2765,3020
sees now against a map

851
00:28:35,860 --> 00:28:37,585
0,225 225,495 495,890 1150,1470 1470,1725
that was created by looking

852
00:28:37,585 --> 00:28:40,440
0,225 225,515 625,1025 1945,2345 2455,2855
at the infrastructure. And finally,

853
00:28:40,730 --> 00:28:41,965
0,260 260,395 395,545 545,820 840,1235
there is a learning planning

854
00:28:41,965 --> 00:28:44,230
0,395 445,780 780,1115 1255,1655 1915,2265
and control system that figures

855
00:28:44,230 --> 00:28:45,490
0,345 345,630 630,810 810,1035 1035,1260
out what the car should

856
00:28:45,490 --> 00:28:46,720
0,195 195,435 435,660 660,945 945,1230
do based on where it

857
00:28:46,720 --> 00:28:48,325
0,290 730,1005 1005,1170 1170,1335 1335,1605
is. So this is it.

858
00:28:48,325 --> 00:28:50,575
0,285 285,465 465,615 615,1205 1945,2250
This is the recipe. You

859
00:28:50,575 --> 00:28:51,910
0,210 210,405 405,585 585,875 1015,1335
can take your vehicle and

860
00:28:51,910 --> 00:28:53,500
0,210 210,405 405,710 730,1005 1005,1590
turn it into an autonomous

861
00:28:53,500 --> 00:28:54,970
0,290 640,915 915,1095 1095,1275 1275,1470
vehicle. And as you do

862
00:28:54,970 --> 00:28:56,790
0,320 340,735 735,1095 1095,1440 1440,1820
so, you really have to

863
00:28:57,260 --> 00:28:59,740
0,335 335,670 870,1870
think about foundationally.|
|

864
00:28:59,920 --> 00:29:02,240
0,290 290,455 455,590 590,1150 1920,2320
What are the computational units
你必须制作的计算单元是什么？你必须创建，所以你必须处理传感器数据，你必须检测障碍物，你必须定位车辆，你必须规划，然后你必须移动。

865
00:29:02,260 --> 00:29:03,290
0,290 290,440 440,620 620,785 785,1030
that you have to make?

866
00:29:03,460 --> 00:29:05,805
0,380 380,650 650,815 815,1090 2100,2345
You have to create, so

867
00:29:05,805 --> 00:29:06,900
0,120 120,330 330,540 540,810 810,1095
you have to process the

868
00:29:06,900 --> 00:29:08,730
0,390 390,680 1090,1365 1365,1575 1575,1830
sensor data, you have to

869
00:29:08,730 --> 00:29:10,320
0,210 210,890 1000,1260 1260,1425 1425,1590
detect obstacles, you have to

870
00:29:10,320 --> 00:29:11,910
0,480 480,660 660,920 1090,1380 1380,1590
localize the vehicle, you have

871
00:29:11,910 --> 00:29:13,515
0,320 490,890 1120,1380 1380,1500 1500,1605
to plan, and then you

872
00:29:13,515 --> 00:29:14,720
0,150 150,315 315,575
have to move.|
|

873
00:29:15,370 --> 00:29:16,335
0,290 290,470 470,605 605,770 770,965
And so there are so
因此，有如此多的工作来解决涉及到自主导航的每一个子任务。其中一些工作是基于模型的，一些工作是基于机器学习的。但真正有趣的是，在这条自动驾驶管道中，经典的自动驾驶管道。

874
00:29:16,335 --> 00:29:18,390
0,210 210,545 805,1205 1255,1655 1735,2055
many works that address each

875
00:29:18,390 --> 00:29:19,740
0,195 195,390 390,645 645,980 1060,1350
of these sub tasks that

876
00:29:19,740 --> 00:29:21,890
0,270 270,650 700,990 990,1590 1590,2150
are involved in autonomous navigation.

877
00:29:22,330 --> 00:29:23,970
0,400 810,1130 1130,1310 1310,1445 1445,1640
And, and some of these

878
00:29:23,970 --> 00:29:25,515
0,320 340,630 630,885 885,1245 1245,1545
works are model based, and

879
00:29:25,515 --> 00:29:26,840
0,165 165,300 300,435 435,695 925,1325
some of the works are

880
00:29:27,370 --> 00:29:29,805
0,260 260,455 455,790 1920,2180 2180,2435
machine learning based. But what's

881
00:29:29,805 --> 00:29:32,040
0,245 505,905 1285,1605 1605,1920 1920,2235
really interesting is that in

882
00:29:32,040 --> 00:29:35,385
0,270 270,1070 1840,2240 2650,3050 3070,3345
this autonomous driving pipeline, the

883
00:29:35,385 --> 00:29:38,380
0,275 355,1145 1495,1895 1915,2315
classical autonomous driving pipeline.|
|

884
00:29:38,880 --> 00:29:39,770
0,260 260,380 380,515 515,695 695,890
There are a lot of
有很多参数，所以对于这些单个问题的每一个解决方案，你必须为汽车将遇到的任何类型的道路情况向工程师提供参数。

885
00:29:39,770 --> 00:29:42,635
0,530 1300,1700 2020,2295 2295,2520 2520,2865
parameters, so for every solution

886
00:29:42,635 --> 00:29:43,805
0,240 240,375 375,540 540,810 810,1170
of each of these individual

887
00:29:43,805 --> 00:29:45,790
0,365 685,1085 1135,1470 1470,1695 1695,1985
problems, you have to hand

888
00:29:45,930 --> 00:29:47,945
0,335 335,910 1230,1490 1490,1730 1730,2015
engineer parameters for any type

889
00:29:47,945 --> 00:29:49,415
0,195 195,450 450,815 1015,1290 1290,1470
of road situation that the

890
00:29:49,415 --> 00:29:51,220
0,285 285,645 645,1295
car will encounter.|
|

891
00:29:51,330 --> 00:29:52,265
0,290 290,470 470,620 620,740 740,935
And then you will have
然后，您将不得不考虑如何将模块缝合在一起。您需要定义将模块连接在一起的参数。这很难用一种强有力的方式来实现。它给这些解决方案带来了脆弱性。事实上，如果你在夜间开车，或者下雨的天气，或者你在乡下的乡间道路上，或者在城市的道路上，或者你在没有车道标志的道路上，你必须认真考虑参数是什么。

892
00:29:52,265 --> 00:29:53,720
0,210 210,435 435,785 955,1275 1275,1455
to think about how the

893
00:29:53,720 --> 00:29:55,190
0,405 405,600 600,990 990,1260 1260,1470
modules get stitched together. You

894
00:29:55,190 --> 00:29:58,120
0,240 240,620 820,1185 1185,1850 2530,2930
need to define parameters that

895
00:29:58,140 --> 00:29:59,840
0,380 380,620 620,1145 1145,1460 1460,1700
connect the modules together. And

896
00:29:59,840 --> 00:30:01,880
0,180 180,375 375,680 1480,1830 1830,2040
this is very tough to

897
00:30:01,880 --> 00:30:03,140
0,195 195,375 375,555 555,885 885,1260
do in a robust way.

898
00:30:03,140 --> 00:30:05,060
0,330 330,600 600,920 1030,1710 1710,1920
And it brings brittleness to

899
00:30:05,060 --> 00:30:06,830
0,165 165,470 1030,1335 1335,1545 1545,1770
these solutions. In, in fact,

900
00:30:06,830 --> 00:30:07,925
0,195 195,390 390,585 585,810 810,1095
you have to really think

901
00:30:07,925 --> 00:30:09,590
0,335 625,885 885,1020 1020,1185 1185,1665
about what are the parameters

902
00:30:09,590 --> 00:30:10,840
0,210 210,315 315,465 465,930 930,1250
if you have nighttime driving

903
00:30:11,220 --> 00:30:12,680
0,365 365,620 620,845 845,1070 1070,1460
or if you have rainy

904
00:30:12,680 --> 00:30:14,570
0,260 280,660 660,1125 1125,1580 1630,1890
weather or you're, you're in

905
00:30:14,570 --> 00:30:15,905
0,135 135,410 730,990 990,1110 1110,1335
the country on a country

906
00:30:15,905 --> 00:30:17,195
0,330 330,630 630,825 825,990 990,1290
road or in the city

907
00:30:17,195 --> 00:30:18,575
0,285 285,465 465,705 705,1035 1035,1380
on a city road, or

908
00:30:18,575 --> 00:30:19,550
0,300 300,420 420,555 555,750 750,975
you're on the road with

909
00:30:19,550 --> 00:30:20,980
0,270 270,555 555,1070
no Lane markings.|
|

910
00:30:22,380 --> 00:30:24,760
0,400 1020,1295 1295,1445 1445,1720 1980,2380
So these are really challenging
因此，这些都是具有挑战性的事情，自动驾驶的第一个解决方案必须经过推理。

911
00:30:24,990 --> 00:30:26,710
0,400 750,1025 1025,1175 1175,1385 1385,1720
things that the first solutions

912
00:30:26,970 --> 00:30:30,460
0,335 335,950 950,1270 2130,2530 3090,3490
for autonomous driving had to

913
00:30:30,480 --> 00:30:31,920
0,400 450,850
reason through.|
|

914
00:30:32,180 --> 00:30:33,360
0,400
Now.|
现在。|

915
00:30:33,360 --> 00:30:35,870
0,380 460,990 990,1590 1590,2160 2160,2510
In Alexander's PhD thesis, his
在亚历山大的博士论文中，他的想法是利用大型数据集来了解人类在类似情况下的表现，并开发比传统管道更像人类驾驶的自动驾驶解决方案，如果你愿意的话，传统管道更像机器人。

916
00:30:35,890 --> 00:30:38,520
0,400 870,1270 1320,1640 1640,2320 2340,2630
idea was to utilize a

917
00:30:38,520 --> 00:30:40,665
0,290 400,765 765,1130 1600,1890 1890,2145
large data set to learn

918
00:30:40,665 --> 00:30:43,010
0,225 225,1025 1225,1620 1620,1980 1980,2345
a representation of what humans

919
00:30:43,090 --> 00:30:45,435
0,290 290,560 560,940 990,1390 1980,2345
did in similar situations and

920
00:30:45,435 --> 00:30:47,790
0,365 475,1170 1170,1470 1470,1865 2035,2355
develop autonomous driving solutions that

921
00:30:47,790 --> 00:30:49,670
0,255 255,480 480,675 675,980 1480,1880
drive more like humans than

922
00:30:50,410 --> 00:30:52,970
0,400 690,1090 1410,1775 1775,2140 2160,2560
than the the traditional pipeline,

923
00:30:53,020 --> 00:30:55,635
0,275 275,440 440,680 680,1030 1950,2615
which is much more roboticy

924
00:30:55,635 --> 00:30:56,630
0,210 210,405 405,600 600,735 735,995
if you, if you like.|
|

925
00:30:58,500 --> 00:30:59,680
0,260 260,410 410,575 575,815 815,1180
So then the question is
那么接下来的问题是，我们如何使用机器学习来直接从传感器到执行机构？换句话说，我们能压缩中间的所有东西，并用学习将感知和行动直接联系起来吗？

926
00:30:59,730 --> 00:31:00,965
0,350 350,575 575,695 695,940 960,1235
how can we use machine

927
00:31:00,965 --> 00:31:03,470
0,275 625,900 900,1175 1405,1805 2185,2505
learning to go directly from

928
00:31:03,470 --> 00:31:06,890
0,560 1480,1755 1755,2390 2980,3240 3240,3420
sensors to actuation? In other

929
00:31:06,890 --> 00:31:08,810
0,225 225,405 405,570 570,1100 1600,1920
words, can we compress all

930
00:31:08,810 --> 00:31:09,790
0,225 225,420 420,585 585,720 720,980
the stuff in the middle

931
00:31:10,050 --> 00:31:11,920
0,275 275,455 455,760 1170,1520 1520,1870
and use learning to connect

932
00:31:12,090 --> 00:31:15,020
0,400 420,1030 1110,1400 1400,1690
directly perception and action?|
|

933
00:31:16,220 --> 00:31:18,810
0,400 840,1145 1145,1450 1830,2210 2210,2590
So the solutions that we
因此，我们采用的解决方案建立在我们已经讨论过的东西之上。我们可以使用深度学习和强化学习，将我们从道路的图像带到转向和油门上，决定要做什么。

934
00:31:18,830 --> 00:31:21,400
0,400 1200,1600 1620,2020 2070,2390 2390,2570
employed build on things we

935
00:31:21,400 --> 00:31:23,950
0,225 225,555 555,885 885,1250 2260,2550
have already talked about. We

936
00:31:23,950 --> 00:31:25,450
0,165 165,405 405,675 675,980 1120,1500
can use deep learning and

937
00:31:25,450 --> 00:31:27,690
0,765 765,1070 1420,1710 1710,1920 1920,2240
reinforcement learning to take us

938
00:31:27,740 --> 00:31:31,860
0,400 1500,1900 2190,2590 2670,3070 3720,4120
from images of roads onto

939
00:31:32,090 --> 00:31:34,900
0,610 1020,1370 1370,1960 2100,2495 2495,2810
steering and throttle on what

940
00:31:34,900 --> 00:31:35,700
0,165 165,410
to do.|
|

941
00:31:37,440 --> 00:31:39,760
0,400 1260,1550 1550,1730 1730,1970 1970,2320
So this is really great
所以这真的很棒，因为你可以在某些类型的道路上训练。

942
00:31:40,020 --> 00:31:42,215
0,400 570,875 875,1115 1115,1450 1860,2195
because you can train on

943
00:31:42,215 --> 00:31:44,180
0,285 285,555 555,750 750,1025
certain kinds of roads.|
|

944
00:31:44,180 --> 00:31:45,845
0,290 760,1065 1065,1260 1260,1440 1440,1665
And, and you can then
然后，你可以把你的车放在完全不同的驾驶环境和驾驶情况下。你不需要新的参数，你不需要再培训。你可以直接直接去做汽车必须做的事情。

945
00:31:45,845 --> 00:31:47,585
0,225 225,405 405,695 1225,1545 1545,1740
take your vehicle and put

946
00:31:47,585 --> 00:31:49,540
0,135 135,395 475,875 1135,1535 1555,1955
the vehicle in completely different

947
00:31:50,100 --> 00:31:52,060
0,400 540,1130 1130,1325 1325,1580 1580,1960
driving environments and driving situations.

948
00:31:52,410 --> 00:31:53,360
0,275 275,410 410,635 635,770 770,950
And you don't need new

949
00:31:53,360 --> 00:31:55,450
0,560 1000,1275 1275,1470 1470,1590 1590,2090
parameters, you don't need retraining.

950
00:31:55,800 --> 00:31:57,935
0,275 275,440 440,725 725,1120 1740,2135
You can go exactly directly

951
00:31:57,935 --> 00:31:59,165
0,255 255,435 435,645 645,900 900,1230
to what the car has

952
00:31:59,165 --> 00:32:00,080
0,210 210,455
to do.|
|

953
00:32:01,570 --> 00:32:02,685
0,275 275,395 395,560 560,845 845,1115
So in other words, we
因此，换句话说，我们可以学习一种模型，从原始的感知出发。在这里，你可以把它想象成来自相机的像素。

954
00:32:02,685 --> 00:32:04,830
0,240 240,575 625,930 930,1235 1885,2145
can learn a model to

955
00:32:04,830 --> 00:32:06,650
0,165 165,375 375,675 675,1250 1420,1820
go from raw perception. And

956
00:32:06,700 --> 00:32:07,665
0,305 305,470 470,635 635,815 815,965
here you can think of

957
00:32:07,665 --> 00:32:09,705
0,195 195,480 480,1115 1645,1905 1905,2040
this as pixels from a

958
00:32:09,705 --> 00:32:10,860
0,275
camera.|
|

959
00:32:11,130 --> 00:32:12,875
0,400 930,1175 1175,1340 1340,1550 1550,1745
And the other thing we
我们给车提供的另一样东西是嘈杂的街景地图。因此，这些地图并不是通常由自动驾驶实验室和公司制作的高清地图。

960
00:32:12,875 --> 00:32:14,720
0,210 210,405 405,695 895,1245 1245,1845
feed the vehicle is noisy

961
00:32:14,720 --> 00:32:16,145
0,270 270,450 450,740 1030,1290 1290,1425
street view maps. So these

962
00:32:16,145 --> 00:32:17,440
0,165 165,420 420,750 750,1005 1005,1295
are not the high definition

963
00:32:17,640 --> 00:32:19,750
0,400 420,680 680,830 830,1120 1710,2110
maps that are usually created

964
00:32:19,860 --> 00:32:23,720
0,400 750,1480 1890,2290 3090,3680 3680,3860
by autonomous driving labs and

965
00:32:23,720 --> 00:32:24,820
0,290
companies.|
|

966
00:32:24,830 --> 00:32:25,645
0,275 275,380 380,470 470,620 620,815
And so you can do
所以你可以这样做，直接推断出在所有控制空间上的完全连续的概率分布。这里的红线表示投射到图像框上的车辆的推断轨迹。不透明度用我们的模型表示学习到的密度函数。因此，这是通过训练深度学习模型来完成的，并且深度学习模型可以直接从人类驾驶数据输出该条件分布的参数。

967
00:32:25,645 --> 00:32:29,350
0,305 835,1235 1915,2315 2665,3065 3385,3705
this to directly infer a

968
00:32:29,350 --> 00:32:31,945
0,320 340,675 675,1280 1660,2060 2230,2595
full continuous probability distribution over

969
00:32:31,945 --> 00:32:33,720
0,285 285,605 625,930 930,1235 1375,1775
the space of all control.

970
00:32:34,130 --> 00:32:35,790
0,350 350,700 870,1145 1145,1340 1340,1660
And here the red lines

971
00:32:37,040 --> 00:32:39,220
0,365 365,680 680,1130 1130,1870 1890,2180
indicate the inferred trajectories of

972
00:32:39,220 --> 00:32:40,945
0,150 150,410 640,1125 1125,1365 1365,1725
the vehicle projected out onto

973
00:32:40,945 --> 00:32:43,090
0,270 270,525 525,905 1585,1950 1950,2145
the image frame. And the

974
00:32:43,090 --> 00:32:45,490
0,645 645,920 1150,1425 1425,1700 1720,2400
opacity represents the learned density

975
00:32:45,490 --> 00:32:47,995
0,290 640,975 975,1230 1230,1550 2230,2505
function by our model. And

976
00:32:47,995 --> 00:32:49,045
0,135 135,285 285,480 480,750 750,1050
so this is done by

977
00:32:49,045 --> 00:32:50,820
0,335 415,705 705,995 1045,1410 1410,1775
training a deep learning model,

978
00:32:51,290 --> 00:32:52,650
0,320 320,515 515,725 725,1010 1010,1360
and the deep learning model

979
00:32:52,760 --> 00:32:54,775
0,400 480,755 755,905 905,1480 1740,2015
can output the parameters of

980
00:32:54,775 --> 00:32:58,090
0,275 355,1020 1020,1415 2335,2735 2935,3315
this conditional distribution directly from

981
00:32:58,090 --> 00:33:00,360
0,380 550,950 1180,1580
human driving data.|
|

982
00:33:02,620 --> 00:33:06,795
0,400 1200,1600 2220,2525 2525,3340 3780,4175
Okay, so more precisely, the
好的，更准确地说，我们学习系统的输入包括三个摄像头，前视摄像头和两个侧视摄像头，还有街景地图。

983
00:33:06,795 --> 00:33:09,140
0,395 625,990 990,1355 1555,1950 1950,2345
input to our learning system

984
00:33:09,430 --> 00:33:11,180
0,350 350,605 605,905 905,1430 1430,1750
consists of camera feeds from

985
00:33:11,770 --> 00:33:13,665
0,305 305,610 1080,1445 1445,1685 1685,1895
three cameras, camera that looks

986
00:33:13,665 --> 00:33:15,045
0,335 385,675 675,855 855,1125 1125,1380
forward and two cameras that

987
00:33:15,045 --> 00:33:18,050
0,195 195,785 1555,1955 2155,2555 2605,3005
look sideways, and also the

988
00:33:18,850 --> 00:33:20,760
0,320 320,605 605,970
street view maps.|
|

989
00:33:21,310 --> 00:33:23,985
0,400 750,1145 1145,1535 1535,1930 2280,2675
And from this, EM EM,
而从这个，EM，EM，从这个数据，这个数据进行处理，EM和EM，呃。从这些数据中，我们可以学习最大限度地提高特定情况下特定控制信号的可能性。

990
00:33:23,985 --> 00:33:25,880
0,300 300,510 510,815 1255,1575 1575,1895
from this data, this data

991
00:33:25,900 --> 00:33:28,710
0,395 395,1270 1560,1960 1980,2380 2430,2810
is processed, EM and EM,

992
00:33:28,710 --> 00:33:30,230
0,480 480,765 765,1035 1035,1230 1230,1520
it's eh. From this data

993
00:33:30,460 --> 00:33:32,480
0,350 350,605 605,910 1050,1355 1355,2020
we can learn to maximize

994
00:33:32,980 --> 00:33:35,780
0,365 365,1145 1145,1540 1770,2170 2400,2800
the likelihood of particular control

995
00:33:36,520 --> 00:33:40,160
0,580 990,1390 1560,1960 1980,2380
signals for particular situations.|
|

996
00:33:40,370 --> 00:33:43,075
0,400 900,1610 1610,1820 1820,2110 2370,2705
And amazingly, the solution also
令人惊讶的是，该解决方案还允许我们对车辆进行本地化。

997
00:33:43,075 --> 00:33:47,065
0,300 300,630 630,995 2485,3155 3715,3990
allows us to localize the

998
00:33:47,065 --> 00:33:48,220
0,275
vehicle.|
|

999
00:33:48,580 --> 00:33:49,830
0,150 150,255 255,495 495,855 855,1250
So it's really super exciting.|
所以这真的是超级令人兴奋。|

1000
00:33:52,850 --> 00:33:55,060
0,365 365,730 1470,1745 1745,1970 1970,2210
Okay, so we can, we
好的，所以我们可以，我们可以，我们可以像人类一样控制。但这种像人类一样的控制需要大量的数据。我在一开始就告诉过你们，我们必须小心处理数据，因为有很多转折点。有很多典型的近事故情况，很难产生真实的数据。

1001
00:33:55,060 --> 00:33:56,280
0,240 240,465 465,675 675,915 915,1220
can, we can get this

1002
00:33:56,540 --> 00:33:58,360
0,365 365,730 930,1310 1310,1610 1610,1820
human like control. But this

1003
00:33:58,360 --> 00:33:59,860
0,195 195,495 495,870 870,1245 1245,1500
human like control requires a

1004
00:33:59,860 --> 00:34:00,925
0,150 150,315 315,585 585,840 840,1065
lot of data. And I've

1005
00:34:00,925 --> 00:34:01,860
0,165 165,315 315,435 435,615 615,935
told you at the beginning

1006
00:34:02,090 --> 00:34:02,935
0,260 260,380 380,560 560,725 725,845
that we have to be

1007
00:34:02,935 --> 00:34:04,405
0,270 270,510 510,630 630,905 1105,1470
careful with the data because

1008
00:34:04,405 --> 00:34:05,215
0,225 225,345 345,465 465,615 615,810
there are a lot of

1009
00:34:05,215 --> 00:34:07,360
0,255 255,605 1525,1785 1785,1965 1965,2145
corner cases. There are a

1010
00:34:07,360 --> 00:34:10,825
0,180 180,500 670,1070 2560,2960 3100,3465
lot of typical near accident

1011
00:34:10,825 --> 00:34:12,685
0,365 715,990 990,1140 1140,1505 1555,1860
situations for which it's difficult

1012
00:34:12,685 --> 00:34:15,220
0,195 195,485 1045,1445 1495,1895
to generate real data.|
|

1013
00:34:16,080 --> 00:34:18,680
0,380 380,760 780,1180
So, for instance.|
所以，举个例子。|

1014
00:34:18,890 --> 00:34:19,920
0,135 135,410
Let's see.|
让我们看看。|

1015
00:34:19,920 --> 00:34:22,100
0,290 310,710 1360,1680 1680,1890 1890,2180
For instance, if you have,
例如，如果你有，如果你想确保汽车不会对事故负责，并且在遇到这样的道路情况时知道该怎么做，为了生成数据，开一辆车撞毁那辆车将是相当昂贵的。

1016
00:34:23,620 --> 00:34:25,470
0,275 275,425 425,695 695,1090 1500,1850
if you want to ensure

1017
00:34:25,470 --> 00:34:26,580
0,225 225,375 375,615 615,855 855,1110
that the car will not

1018
00:34:26,580 --> 00:34:28,550
0,380 520,920 1120,1380 1380,1605 1605,1970
be responsible for an accident

1019
00:34:28,570 --> 00:34:29,505
0,275 275,425 425,590 590,770 770,935
and will know what to

1020
00:34:29,505 --> 00:34:30,885
0,275 475,750 750,900 900,1140 1140,1380
do when it comes to

1021
00:34:30,885 --> 00:34:32,700
0,210 210,545 745,1065 1065,1385 1585,1815
road situations like this, it

1022
00:34:32,700 --> 00:34:34,455
0,75 75,225 225,530 550,950 1480,1755
would be pretty expensive to

1023
00:34:34,455 --> 00:34:35,700
0,150 150,330 330,630 630,960 960,1245
take a car and crash

1024
00:34:35,700 --> 00:34:36,795
0,255 255,480 480,660 660,870 870,1095
that car in order to

1025
00:34:36,795 --> 00:34:38,280
0,255 255,495 495,755
generate the data.|
|

1026
00:34:39,130 --> 00:34:40,880
0,400 540,905 905,1190 1190,1430 1430,1750
So instead, what we do
因此，我们所做的是在模拟中进行培训，所以Alexander开发了Vista模拟器。

1027
00:34:40,900 --> 00:34:43,280
0,400 930,1330 1410,1790 1790,2075 2075,2380
is we do the training

1028
00:34:43,360 --> 00:34:47,180
0,380 380,970 2100,2500 2520,2920 3420,3820
in simulation, and so Alexander

1029
00:34:47,950 --> 00:34:51,040
0,400 750,1150 1170,1805 1805,2470
developed the vista simulator.|
|

1030
00:34:51,040 --> 00:34:53,520
0,350 370,630 630,975 975,1490 2080,2480
And the vista simulator can
Vista模拟器可以对多个代理、多种类型的传感器和多种类型的代理之间的交互进行建模。因此，Vista模拟器最近是开源的。你可以从vista，c cell，MIT，edu获得代码。而且很多人已经在使用这个系统了。所以我们从维斯塔得到的。

1031
00:34:53,570 --> 00:34:56,605
0,400 900,1300 1410,1810 2190,2590 2700,3035
model multiple agents, multiple types

1032
00:34:56,605 --> 00:34:58,470
0,255 255,825 825,1065 1065,1355 1465,1865
of sensors and multiple types

1033
00:34:58,520 --> 00:35:00,990
0,400 690,1085 1085,1340 1340,1600 2070,2470
of agent to agent interaction.

1034
00:35:02,030 --> 00:35:05,050
0,400 1080,1430 1430,1780 2430,2690 2690,3020
And, and so the vista

1035
00:35:05,050 --> 00:35:07,540
0,390 390,615 615,810 810,1100 2170,2490
simulator has been recently open

1036
00:35:07,540 --> 00:35:09,295
0,530 880,1200 1200,1410 1410,1590 1590,1755
sourced. You can get the

1037
00:35:09,295 --> 00:35:10,830
0,240 240,510 510,975 975,1245 1245,1535
code from vista, c cell

1038
00:35:11,180 --> 00:35:12,550
0,320 320,575 575,785 785,1190 1190,1370
dot, MIT dot edu. And

1039
00:35:12,550 --> 00:35:13,525
0,120 120,255 255,405 405,630 630,975
a lot of people are

1040
00:35:13,525 --> 00:35:16,855
0,395 805,1205 1765,2070 2070,2375 3055,3330
already using the system. So

1041
00:35:16,855 --> 00:35:18,210
0,165 165,330 330,540 540,780 780,1355
what we get from vista.|
|

1042
00:35:19,030 --> 00:35:21,090
0,400 930,1235 1235,1430 1430,1720 1770,2060
Uh, is the ability to
呃，是模拟不同物理感应模式的能力。这意味着包括两个D摄像机，三个D激光雷达，呃活动摄像机等等。然后你有可能呃，模拟不同类型的环境，呃呃情况和扰动.你可以模拟天气，你可以模拟不同的照明，你可以模拟，模拟不同类型的道路，你还可以模拟，啊，不同类型的互动。下面是我们使用vista的方法。

1043
00:35:21,090 --> 00:35:24,540
0,560 610,1010 1690,2090 2200,2715 2715,3450
simulate different physical sensing modalities.

1044
00:35:24,540 --> 00:35:25,860
0,225 225,530 550,930 930,1170 1170,1320
That means including two d

1045
00:35:25,860 --> 00:35:28,130
0,290 610,885 885,1035 1035,1610 1870,2270
cameras, three d lidar, uh

1046
00:35:28,570 --> 00:35:30,975
0,350 350,700 1290,1690 1890,2195 2195,2405
event cameras and, and so

1047
00:35:30,975 --> 00:35:33,690
0,305 1195,1595 1975,2325 2325,2550 2550,2715
forth. And then you get

1048
00:35:33,690 --> 00:35:35,865
0,195 195,500 1000,1365 1365,1730 1900,2175
the possibility to eh, to

1049
00:35:35,865 --> 00:35:38,090
0,525 525,900 900,1295 1345,1745 1825,2225
simulate different types of environmental,

1050
00:35:38,830 --> 00:35:41,600
0,400 570,970 1110,1510 1830,2150 2150,2770
uh uh situations and perturbations.

1051
00:35:41,740 --> 00:35:43,335
0,275 275,455 455,920 920,1270 1320,1595
You can simulate weather, you

1052
00:35:43,335 --> 00:35:45,900
0,180 180,725 895,1290 1290,1685 2275,2565
can simulate different lighting, you

1053
00:35:45,900 --> 00:35:47,580
0,180 180,615 615,1050 1050,1335 1335,1680
can simulate, simulate different types

1054
00:35:47,580 --> 00:35:48,585
0,210 210,450 450,690 690,810 810,1005
of roads and you can

1055
00:35:48,585 --> 00:35:50,870
0,240 240,785 955,1305 1305,1655 1885,2285
also simulate, ah, different types

1056
00:35:50,980 --> 00:35:53,655
0,400 600,1000 1020,1690 2130,2390 2390,2675
of of interactions. So here's

1057
00:35:53,655 --> 00:35:55,460
0,165 165,330 330,585 585,1205
how we use vista.|
|

1058
00:35:57,840 --> 00:36:01,685
0,290 290,515 515,850 1590,1990 3480,3845
We can take one high
我们可以从人类驾驶的车辆上获取一个高质量的数据集。我们可以利用这个非常高清晰度的数据集，然后在模拟中，我们可以把它变成我们想要的任何东西。我们可以把它变成不稳定的驾驶，我们可以把它变成接近事故模拟的情况。我们可以把它变成任何东西，任何你想要的东西。例如，你可以在这里看到我们的原始数据，你可以看到如何在模拟中映射原始数据，并以一种非常逼真的方式映射到新的模拟轨迹中，该轨迹是不稳定的，现在作为我们Vista中训练集的一部分存在。

1059
00:36:01,685 --> 00:36:06,370
0,365 1975,2375 2395,2795 3865,4265 4285,4685
quality data set taken from

1060
00:36:06,600 --> 00:36:09,125
0,350 350,680 680,1025 1025,1390 2250,2525
a human driven vehicle. We

1061
00:36:09,125 --> 00:36:10,760
0,180 180,420 420,755 1015,1350 1350,1635
can take this very high

1062
00:36:10,760 --> 00:36:13,040
0,350 790,1170 1170,1550 1840,2115 2115,2280
definition data set and then

1063
00:36:13,040 --> 00:36:15,170
0,225 225,800 1390,1680 1680,1905 1905,2130
in simulation we can turn

1064
00:36:15,170 --> 00:36:16,660
0,210 210,530 760,1050 1050,1215 1215,1490
it into anything we want.

1065
00:36:16,830 --> 00:36:17,930
0,290 290,500 500,695 695,860 860,1100
We can turn it into

1066
00:36:17,930 --> 00:36:19,580
0,645 645,950 1000,1275 1275,1455 1455,1650
erratic driving, we can turn

1067
00:36:19,580 --> 00:36:22,060
0,225 225,560 970,1370 1510,1890 1890,2480
it into near accident simulation

1068
00:36:22,260 --> 00:36:23,615
0,275 275,550 780,1040 1040,1190 1190,1355
a situation. We can turn

1069
00:36:23,615 --> 00:36:25,415
0,135 135,395 565,965 1375,1650 1650,1800
it into anything, anything you

1070
00:36:25,415 --> 00:36:27,290
0,275 625,990 990,1245 1245,1515 1515,1875
want EM. So for instance,

1071
00:36:27,290 --> 00:36:29,290
0,300 300,510 510,735 735,1070 1600,2000
here you can see our

1072
00:36:29,460 --> 00:36:31,355
0,400 450,850 1200,1490 1490,1670 1670,1895
original data and you can

1073
00:36:31,355 --> 00:36:32,920
0,240 240,480 480,750 750,1085 1165,1565
see how this original data

1074
00:36:33,030 --> 00:36:35,140
0,320 320,640 780,1325 1325,1550 1550,2110
can be mapped in simulation

1075
00:36:36,300 --> 00:36:37,055
0,260 260,350 350,440 440,590 590,755
and in a way that

1076
00:36:37,055 --> 00:36:40,300
0,225 225,525 525,1475 2125,2525 2845,3245
looks very realistically into a

1077
00:36:40,470 --> 00:36:42,905
0,350 350,940 960,1810 1980,2270 2270,2435
new simulated trajectory that is

1078
00:36:42,905 --> 00:36:45,365
0,665 925,1325 1345,1680 1680,2015 2125,2460
erratic and that now exists

1079
00:36:45,365 --> 00:36:46,990
0,285 285,555 555,735 735,995 1225,1625
as part of our training

1080
00:36:47,010 --> 00:36:48,420
0,320 320,530 530,1030
set in vista.|
|

1081
00:36:49,820 --> 00:36:52,105
0,395 395,790 1170,1475 1475,1780 2010,2285
And so we can, we
所以我们可以，我们可以这样做，我们可以使用这些数据，然后我们可以学习一项政策。我们可以离线评估这一政策，并最终将其部署在车辆上。这是通过，呃，首先根据车辆动力学和相互作用更新所有智能体的状态，然后从智能体的新观点重建世界。一旦你移动它们，在代理看来，世界将与原始驾驶数据集中不同。最后，我们可以，然后我们可以从不同的代理视点渲染图像，我们可以执行控制。

1082
00:36:52,105 --> 00:36:53,860
0,180 180,375 375,665 1345,1620 1620,1755
can do this, we can

1083
00:36:53,860 --> 00:36:55,345
0,165 165,375 375,680 1000,1275 1275,1485
use this data and then

1084
00:36:55,345 --> 00:36:56,730
0,225 225,495 495,855 855,1110 1110,1385
we can learn a policy.

1085
00:36:56,900 --> 00:36:58,320
0,260 260,470 470,820 840,1130 1130,1420
We can evaluate this policy

1086
00:36:58,400 --> 00:37:00,930
0,640 870,1270 1290,1690 1920,2225 2225,2530
offline and ultimately deploy it

1087
00:37:01,040 --> 00:37:02,860
0,320 320,500 500,760 1260,1565 1565,1820
on the vehicle. And this

1088
00:37:02,860 --> 00:37:05,980
0,350 670,1070 1150,1550 2110,2510 2620,3120
works by, eh, first updating

1089
00:37:05,980 --> 00:37:07,230
0,210 210,525 525,780 780,945 945,1250
the state of all agents

1090
00:37:07,760 --> 00:37:09,295
0,320 320,515 515,650 650,890 890,1535
based on the vehicle dynamics

1091
00:37:09,295 --> 00:37:11,700
0,305 325,995 1495,1785 1785,2040 2040,2405
and interactions, and then by

1092
00:37:11,750 --> 00:37:15,130
0,1055 1055,1310 1310,1570 2760,3125 3125,3380
recreating the world from the

1093
00:37:15,130 --> 00:37:17,220
0,255 255,1040 1420,1725 1725,1860 1860,2090
new viewpoints of the agents.

1094
00:37:17,420 --> 00:37:19,075
0,305 305,455 455,605 605,910 1380,1655
Once you move them, the

1095
00:37:19,075 --> 00:37:20,740
0,255 255,495 495,660 660,965 1405,1665
world will look different to

1096
00:37:20,740 --> 00:37:23,005
0,120 120,380 1570,1890 1890,2085 2085,2265
the agent than in the

1097
00:37:23,005 --> 00:37:25,945
0,305 1015,1415 1435,1800 1800,2165 2545,2940
original driving data set. And

1098
00:37:25,945 --> 00:37:29,350
0,395 2005,2310 2310,2615 2935,3225 3225,3405
finally we can, we can

1099
00:37:29,350 --> 00:37:31,440
0,290 520,920 1000,1245 1245,1490 1690,2090
then render the image from

1100
00:37:31,670 --> 00:37:34,420
0,305 305,610 930,1330 1350,2140 2400,2750
the different agents viewpoints and

1101
00:37:34,420 --> 00:37:37,560
0,255 255,560 1030,1430 2380,2760 2760,3140
we can perform the control.|
|

1102
00:37:39,220 --> 00:37:40,560
0,400 450,830 830,1055 1055,1175 1175,1340
So EM, so this is
所以，EM，这真的很酷。还有其他几个模拟引擎，有一些模拟引擎依赖于模仿学习EM或领域随机化，或者有Carla EM，它非常有效，看起来是真实的。然而，我们的解决方案比所有其他解决方案工作得更好，在这里您可以看到将Vista、EM中发生的情况与现有模拟器中最先进的情况进行比较的结果。因此，顶线以红色显示坠机地点，底线以颜色显示平均轨迹变化。

1103
00:37:40,560 --> 00:37:42,165
0,225 225,555 555,825 825,1100 1240,1605
really cool. There are several

1104
00:37:42,165 --> 00:37:45,420
0,365 535,1170 1170,1565 1915,2315 2995,3255
other simulation engines and there

1105
00:37:45,420 --> 00:37:47,925
0,260 280,810 810,1160 1360,1760 2200,2505
are simulation engines that rely

1106
00:37:47,925 --> 00:37:50,685
0,305 565,855 855,1385 1405,1805 2365,2760
on on imitation learning EM

1107
00:37:50,685 --> 00:37:53,370
0,360 360,660 660,995 1405,2255 2425,2685
or on domain randomization or

1108
00:37:53,370 --> 00:37:55,185
0,105 105,285 285,860 1060,1440 1440,1815
there is carla EM that's

1109
00:37:55,185 --> 00:37:56,370
0,180 180,495 495,795 795,1020 1020,1185
very effective that seem to

1110
00:37:56,370 --> 00:37:58,950
0,260 1210,1545 1545,1845 1845,2210 2230,2580
real. However, our solution works

1111
00:37:58,950 --> 00:38:00,360
0,330 330,645 645,945 945,1170 1170,1410
better than all the other

1112
00:38:00,360 --> 00:38:02,280
0,380 460,750 750,1040 1420,1710 1710,1920
solutions and here you can

1113
00:38:02,280 --> 00:38:03,770
0,195 195,420 420,750 750,1020 1020,1490
see the results of comparing

1114
00:38:04,210 --> 00:38:06,290
0,335 335,650 650,935 935,1510 1680,2080
what happens in vista, EM

1115
00:38:06,370 --> 00:38:08,840
0,400 540,940 1710,2000 2000,2180 2180,2470
with the with what happens

1116
00:38:08,920 --> 00:38:11,220
0,305 305,575 575,940 1500,2075 2075,2300
in the existing simulators in

1117
00:38:11,220 --> 00:38:12,110
0,165 165,360 360,525 525,645 645,890
the state of the art.

1118
00:38:12,940 --> 00:38:14,690
0,275 275,500 500,800 800,1150 1350,1750
So the top line shows

1119
00:38:14,710 --> 00:38:16,880
0,400 450,845 845,1130 1130,1420 1770,2170
crash locations in red and

1120
00:38:16,900 --> 00:38:18,555
0,260 260,485 485,850 900,1295 1295,1655
the bottom line shows mean

1121
00:38:18,555 --> 00:38:21,500
0,755 1285,1865 1885,2205 2205,2525
trajectory variation in color.|
|

1122
00:38:21,590 --> 00:38:22,870
0,320 320,515 515,790 870,1130 1130,1280
And you can, you can
你可以，你可以看到我们的解决方案确实做得最好。事实上，该解决方案能够做其他基于仿真的基于学习的控制不能做的事情。例如，在我们的解决方案中，我们能够从指向车辆离开道路的方向恢复，或者我们能够从错误的车道中恢复。

1123
00:38:22,870 --> 00:38:24,390
0,165 165,315 315,555 555,920 1120,1520
see that our solution really

1124
00:38:24,470 --> 00:38:25,795
0,395 395,665 665,935 935,1190 1190,1325
does the best. And in

1125
00:38:25,795 --> 00:38:27,750
0,195 195,405 405,695 1345,1650 1650,1955
fact, the solution is able

1126
00:38:27,980 --> 00:38:29,310
0,260 260,410 410,680 680,995 995,1330
to do things that other

1127
00:38:29,420 --> 00:38:34,380
0,640 1530,1930 3000,3400 3960,4360 4560,4960
simulation based learning based control

1128
00:38:34,550 --> 00:38:37,480
0,380 380,760 1740,2135 2135,2530 2670,2930
cannot do. For instance, in

1129
00:38:37,480 --> 00:38:39,000
0,195 195,530 790,1065 1065,1230 1230,1520
our solution, we are able

1130
00:38:39,170 --> 00:38:42,505
0,400 810,1210 1710,2090 2090,2860 3000,3335
to recover from orientations that

1131
00:38:42,505 --> 00:38:43,600
0,225 225,375 375,615 615,915 915,1095
point the vehicle off the

1132
00:38:43,600 --> 00:38:46,350
0,260 1120,1520 1990,2280 2280,2460 2460,2750
road, or we are able

1133
00:38:46,490 --> 00:38:48,295
0,400 780,1085 1085,1370 1370,1625 1625,1805
to to recover from being

1134
00:38:48,295 --> 00:38:49,240
0,165 165,285 285,545 565,825 825,945
in the wrong in the

1135
00:38:49,240 --> 00:38:50,060
0,180 180,500
wrong Lane.|
|

1136
00:38:50,740 --> 00:38:52,770
0,275 275,545 545,650 650,910 1740,2030
So here's a vehicle that
这是一辆执行学习基地控制的车辆，这是亚历山大和他的车辆，这辆车是用城市驾驶的数据训练的，现在他正开车去足球场。

1137
00:38:52,770 --> 00:38:54,440
0,290 460,900 900,1050 1050,1290 1290,1670
is executing the learning base

1138
00:38:54,550 --> 00:38:57,285
0,395 395,710 710,1210 1230,1630 2460,2735
control, and here's Alexander with

1139
00:38:57,285 --> 00:38:58,730
0,180 180,485 595,885 885,1110 1110,1445
his vehicle that was trained

1140
00:38:58,840 --> 00:39:02,270
0,400 1050,1450 1740,2140 2610,3010 3030,3430
using data from urban driving,

1141
00:39:02,800 --> 00:39:04,380
0,290 290,560 560,935 935,1210 1320,1580
and now he's driving to

1142
00:39:04,380 --> 00:39:05,720
0,135 135,375 375,740
the soccer field.|
|

1143
00:39:05,720 --> 00:39:07,570
0,260 700,990 990,1230 1230,1515 1515,1850
And you can see that
你可以看到他，他能够开车去，开这辆车，开车送他去足球场，不需要做任何训练，也不需要看过这条路，也不需要明确提供这条路的数据。所以这很酷，对吧？

1144
00:39:07,800 --> 00:39:09,125
0,335 335,635 635,845 845,1085 1085,1325
he, he's able to drive

1145
00:39:09,125 --> 00:39:10,145
0,270 270,450 450,600 600,780 780,1020
to, to get this car,

1146
00:39:10,145 --> 00:39:11,045
0,210 210,420 420,630 630,765 765,900
to drive him to the

1147
00:39:11,045 --> 00:39:13,025
0,240 240,540 540,875 1225,1620 1620,1980
soccer field without doing any

1148
00:39:13,025 --> 00:39:15,070
0,345 345,725 835,1215 1215,1595 1645,2045
training, without ever having seen

1149
00:39:15,570 --> 00:39:18,400
0,305 305,610 870,1270 1800,2465 2465,2830
this road and explicitly providing

1150
00:39:18,630 --> 00:39:20,645
0,400 630,1030 1170,1490 1490,1775 1775,2015
data about this road. So

1151
00:39:20,645 --> 00:39:21,760
0,150 150,330 330,570 570,810 810,1115
this is pretty cool, right?|
|

1152
00:39:22,920 --> 00:39:24,935
0,290 290,560 560,940 1620,1880 1955,2015
All right. So, okay, I'm
好的。所以，好的，我要为你打开引擎盖。

1153
00:39:24,935 --> 00:39:25,895
0,105 105,330 330,555 555,705 705,960
going to open the hood

1154
00:39:25,895 --> 00:39:27,040
0,180 180,455
for you.|
|

1155
00:39:27,200 --> 00:39:28,285
0,400 420,710 710,890 890,965 965,1085
And so I'm going to
因此，我将向您展示此解决方案的决策引擎内部发生了什么。所以，让我在这张图片中为你定位。右下角，你可以看到环境地图。左上角，你看到摄像头输入流，呃，左下角，你看到车辆的注意图。然后在中间你可以看到决策引擎。决策引擎有大约10万个神经元和大约50万个参数。

1156
00:39:28,285 --> 00:39:29,700
0,150 150,285 285,435 435,725 1015,1415
show you what happens inside

1157
00:39:30,050 --> 00:39:32,130
0,365 365,730 750,1150 1410,1745 1745,2080
the decision engine of this

1158
00:39:32,330 --> 00:39:34,680
0,400 1470,1745 1745,1895 1895,2060 2060,2350
solution. So let me orient

1159
00:39:34,790 --> 00:39:38,040
0,400 420,755 755,1090 1410,1810 2850,3250
you in this image. Bottom

1160
00:39:38,690 --> 00:39:40,015
0,395 395,725 725,965 965,1145 1145,1325
right, you see the map

1161
00:39:40,015 --> 00:39:41,970
0,180 180,360 360,665 1255,1605 1605,1955
of the environment. Top left,

1162
00:39:42,050 --> 00:39:43,450
0,320 320,515 515,665 665,940 1050,1400
you see the camera input

1163
00:39:43,450 --> 00:39:46,195
0,350 760,1160 1360,1760 1960,2360 2380,2745
stream, uh, bottom left, you

1164
00:39:46,195 --> 00:39:48,055
0,365 475,870 870,1245 1245,1590 1590,1860
see the attention map of

1165
00:39:48,055 --> 00:39:49,750
0,165 165,425 535,810 810,1085 1405,1695
the vehicle. And then in

1166
00:39:49,750 --> 00:39:50,725
0,150 150,360 360,600 600,750 750,975
the middle you see the

1167
00:39:50,725 --> 00:39:52,920
0,330 330,695 1225,1560 1560,1845 1845,2195
decision engine. The decision engine

1168
00:39:52,970 --> 00:39:55,240
0,350 350,590 590,1270 1290,1900 1920,2270
has about 100,000 neurons and

1169
00:39:55,240 --> 00:39:56,850
0,315 315,570 570,720 720,975 975,1610
about half a million parameters.|
|

1170
00:39:57,920 --> 00:40:00,330
0,400 1110,1430 1430,1685 1685,2015 2015,2410
And I will challenge you
我会向你挑战。

1171
00:40:00,710 --> 00:40:02,880
0,400
to.|
|

1172
00:40:02,990 --> 00:40:04,225
0,275 275,485 485,800 800,1070 1070,1235
To figure out if there
要弄清楚是否有任何模式将神经元的状态与车辆的行为联系起来，真的很难看到，因为有太多这样的模式。在同一时间，有太多的事情处于危险之中。

1173
00:40:04,225 --> 00:40:06,960
0,195 195,515 1225,1625 1855,2255 2335,2735
are any patterns that associate

1174
00:40:08,000 --> 00:40:09,910
0,400 420,755 755,980 980,1420 1590,1910
the state of neurons with

1175
00:40:09,910 --> 00:40:10,990
0,240 240,510 510,720 720,840 840,1080
the behavior of the vehicle,

1176
00:40:10,990 --> 00:40:12,220
0,315 315,480 480,735 735,975 975,1230
it's really hard to see,

1177
00:40:12,220 --> 00:40:13,060
0,225 225,330 330,465 465,660 660,840
because there are so many

1178
00:40:13,060 --> 00:40:14,365
0,165 165,440 610,960 960,1125 1125,1305
of them. There's just so

1179
00:40:14,365 --> 00:40:15,660
0,240 240,570 570,825 825,1005 1005,1295
much stuff that is happening

1180
00:40:15,740 --> 00:40:18,130
0,320 320,850 1050,1450 1890,2165 2165,2390
in peril at the same

1181
00:40:18,130 --> 00:40:19,080
0,350
time.|
|

1182
00:40:19,390 --> 00:40:20,280
0,260 260,425 425,605 605,740 740,890
And then have a look
然后看一下注意图。原来，这辆车是在看着道路上的灌木丛，以便在道路上做出决定。

1183
00:40:20,280 --> 00:40:22,305
0,290 550,855 855,1140 1140,1520 1810,2025
at the attention map. So

1184
00:40:22,305 --> 00:40:23,300
0,90 90,270 270,480 480,690 690,995
it turns out this vehicle

1185
00:40:23,410 --> 00:40:24,975
0,305 305,610 750,1040 1040,1205 1205,1565
is looking at the bushes

1186
00:40:24,975 --> 00:40:26,060
0,150 150,285 285,545 565,825 825,1085
on the roads in order

1187
00:40:26,260 --> 00:40:27,105
0,260 260,365 365,500 500,650 650,845
on the road in order

1188
00:40:27,105 --> 00:40:28,660
0,180 180,405 405,785
to make decisions.|
|

1189
00:40:29,860 --> 00:40:31,260
0,365 365,680 680,995 995,1235 1235,1400
Still, it seems to do
尽管如此，它似乎做得相当好。但我们问自己，我们能做得更好吗？我们能有更可靠的，啊，基于学习的解决方案吗？因此，昨天拉明推出了液体网络，并推出了神经回路政策。

1190
00:40:31,260 --> 00:40:33,045
0,195 195,420 420,645 645,950 1390,1785
a pretty good job. But

1191
00:40:33,045 --> 00:40:34,920
0,270 270,545 745,1145 1405,1710 1710,1875
we asked ourselves, can we

1192
00:40:34,920 --> 00:40:36,660
0,135 135,410 1060,1350 1350,1515 1515,1740
do better? Can we have

1193
00:40:36,660 --> 00:40:39,585
0,350 460,860 1330,1730 2200,2595 2595,2925
more reliable, ah, learning based

1194
00:40:39,585 --> 00:40:43,970
0,335 1315,1715 2395,2790 2790,3185 3835,4385
solutions? And so yesterday ramin

1195
00:40:44,230 --> 00:40:47,955
0,400 600,1000 1170,1570 2310,2710 3390,3725
introduced liquid networks and introduced

1196
00:40:47,955 --> 00:40:50,020
0,405 405,780 780,1085
neural circuit policies.|
|

1197
00:40:50,020 --> 00:40:50,755
0,135 135,270 270,390 390,555 555,735
And so I just want
所以我只想深入到这个领域，因为你现在可以比较，你现在可以理解最初的引擎是如何工作的，你可以把它与我们从流动网络中获得的进行比较。

1198
00:40:50,755 --> 00:40:52,030
0,210 210,480 480,845 865,1125 1125,1275
to drill down a little

1199
00:40:52,030 --> 00:40:54,210
0,195 195,500 1030,1430 1480,1830 1830,2180
bit more into this area,

1200
00:40:54,710 --> 00:40:56,370
0,380 380,650 650,830 830,1120 1260,1660
because you can now compare,

1201
00:40:56,600 --> 00:40:58,620
0,260 260,350 350,580 750,1150 1620,2020
you can now understand how

1202
00:40:58,670 --> 00:41:02,430
0,400 750,1070 1070,1390 2220,2620 3360,3760
the the original engine worked,

1203
00:41:02,480 --> 00:41:03,960
0,305 305,500 500,770 770,1115 1115,1480
and you can compare that

1204
00:41:04,010 --> 00:41:05,820
0,400 540,890 890,1115 1115,1390 1410,1810
against what we get from

1205
00:41:06,140 --> 00:41:07,900
0,380 380,760
liquid networks.|
|

1206
00:41:07,910 --> 00:41:09,480
0,400 720,980 980,1115 1115,1280 1280,1570
And so look at this,
看看这个，我们有19个神经元，现在很容易看到这些神经元的激活模式，呃，并将它们与车辆的行为联系起来。

1207
00:41:09,830 --> 00:41:11,815
0,290 290,530 530,880 1020,1600 1680,1985
we have nineteen neurons, and

1208
00:41:11,815 --> 00:41:14,035
0,305 475,855 855,1080 1080,1445 1945,2220
now it's much easier to

1209
00:41:14,035 --> 00:41:16,470
0,150 150,425 955,1355 1585,1950 1950,2435
look at patterns of activation,

1210
00:41:16,610 --> 00:41:19,165
0,400 900,1190 1190,1385 1385,1870 2190,2555
eh, of these neurons and

1211
00:41:19,165 --> 00:41:21,415
0,365 505,900 900,1295 1675,1980 1980,2250
associate them with the behavior

1212
00:41:21,415 --> 00:41:22,860
0,240 240,375 375,635
of the vehicle.|
|

1213
00:41:22,860 --> 00:41:25,020
0,350 1090,1395 1395,1680 1680,1965 1965,2160
And the attention map is
注意力地图也干净多了，不是吗？车辆看着道路地平线和道路两边，这是我们开车时都会做的事情。

1214
00:41:25,020 --> 00:41:26,745
0,210 210,480 480,980 1150,1500 1500,1725
so much cleaner, right? The

1215
00:41:26,745 --> 00:41:28,635
0,275 325,630 630,935 1285,1605 1605,1890
vehicle is looking at the

1216
00:41:28,635 --> 00:41:30,120
0,365 445,845 865,1140 1140,1305 1305,1485
road horizon and at the

1217
00:41:30,120 --> 00:41:31,200
0,225 225,420 420,540 540,795 795,1080
sides of the road, which

1218
00:41:31,200 --> 00:41:32,070
0,180 180,360 360,510 510,690 690,870
is what we all do

1219
00:41:32,070 --> 00:41:33,080
0,135 135,300 300,525 525,735 735,1010
when we drive a vehicle.|
|

1220
00:41:35,060 --> 00:41:37,960
0,400 480,880 1320,1720 2250,2585 2585,2900
Now remember how so remember
现在请记住，拉明告诉我们，这个模型叫做液体时间常数网络，是一个连续的时间网络。该模型改变了神经元计算的内容，特别是我们从行为良好的状态空间模型开始，以增加神经元在学习过程中的稳定性。然后，我们对突触输入进行非线性处理，以增加模型的表现力，并在训练和推理过程中增加模型状态。通过将这些方程相互插入，呃，我们可以看到LTC神经元的方程。

1221
00:41:37,960 --> 00:41:41,070
0,380 1270,1820 1930,2250 2250,2570 2710,3110
that ramin told us that

1222
00:41:41,120 --> 00:41:43,530
0,400 780,1100 1100,1420 1830,2120 2120,2410
this this model called liquid

1223
00:41:43,580 --> 00:41:46,320
0,380 380,760 930,1330 2100,2420 2420,2740
time constant network is a

1224
00:41:48,200 --> 00:41:53,730
0,400 1470,1805 1805,2140 4950,5240 5240,5530
continuous time network. This model

1225
00:41:54,620 --> 00:41:56,820
0,400 750,1070 1070,1265 1265,1685 1685,2200
changes what the neuron computes

1226
00:41:57,230 --> 00:41:58,705
0,245 245,425 425,760 870,1190 1190,1475
and in particular we start

1227
00:41:58,705 --> 00:42:00,660
0,225 225,435 435,780 780,1325 1555,1955
with a well behaved state

1228
00:42:00,710 --> 00:42:02,350
0,350 350,700 810,1145 1145,1430 1430,1640
space model to increase the

1229
00:42:02,350 --> 00:42:04,840
0,345 345,680 760,1140 1140,1520 2230,2490
neuron stability during learning. And

1230
00:42:04,840 --> 00:42:06,865
0,120 120,255 255,530 610,1755 1755,2025
then we have nonlinearities over

1231
00:42:06,865 --> 00:42:08,785
0,210 210,825 825,1260 1260,1565 1585,1920
the synaptic inputs to increase

1232
00:42:08,785 --> 00:42:10,170
0,285 285,765 765,990 990,1125 1125,1385
the expressivity of the model

1233
00:42:11,060 --> 00:42:12,790
0,400 420,800 800,1130 1130,1475 1475,1730
and to also increase the

1234
00:42:12,790 --> 00:42:15,145
0,260 310,710 1360,1760 1780,2130 2130,2355
model state during training and

1235
00:42:15,145 --> 00:42:17,170
0,485 895,1200 1200,1425 1425,1800 1800,2025
inference. And by plugging these

1236
00:42:17,170 --> 00:42:19,765
0,380 490,890 970,1305 1305,1640 2230,2595
equations into each other, eh,

1237
00:42:19,765 --> 00:42:21,360
0,270 270,525 525,810 810,1145 1195,1595
we can see the equation

1238
00:42:21,560 --> 00:42:24,000
0,395 395,740 740,1385 1385,1840
of the ltc neuron.|
|

1239
00:42:24,810 --> 00:42:26,830
0,400 540,890 890,1130 1130,1420 1620,2020
Where here the function is
这里的函数，这里的函数，不仅决定神经元的状态。

1240
00:42:28,470 --> 00:42:30,635
0,400 450,725 725,1000 1050,1450 1710,2165
where the function here determines

1241
00:42:30,635 --> 00:42:32,150
0,270 270,585 585,870 870,1200 1200,1515
not only the state of

1242
00:42:32,150 --> 00:42:33,740
0,315 315,920
the neuron.|
|

1243
00:42:34,450 --> 00:42:37,365
0,400 960,1250 1250,1445 1445,1750 2610,2915
But also this function can
而且该功能还可以在执行推理时由新的输入来控制。因此，这个模型真正酷的地方在于，它能够在训练后根据它看到的输入动态适应。

1244
00:42:37,365 --> 00:42:40,070
0,305 1135,1535 1675,2055 2055,2370 2370,2705
be is controlled by new

1245
00:42:40,180 --> 00:42:42,380
0,380 380,760 1290,1595 1595,1850 1850,2200
input at the time of

1246
00:42:43,030 --> 00:42:45,105
0,320 320,500 500,970 1620,1880 1880,2075
execution of inference. So what's

1247
00:42:45,105 --> 00:42:47,090
0,245 325,725 805,1205 1345,1665 1665,1985
really cool about this model

1248
00:42:47,230 --> 00:42:49,430
0,335 335,670 1290,1595 1595,1850 1850,2200
is that it is able

1249
00:42:49,570 --> 00:42:52,670
0,400 840,1775 1775,2165 2165,2560 2700,3100
to dynamically adapt after training

1250
00:42:53,260 --> 00:42:54,630
0,335 335,560 560,815 815,1190 1190,1370
based on the inputs that

1251
00:42:54,630 --> 00:42:55,880
0,195 195,500
it sees.|
|

1252
00:42:55,890 --> 00:42:57,020
0,275 275,410 410,545 545,800 800,1130
And this is something very
这是现在液体网络的一个非常强大的东西，除了改变神经元方程。

1253
00:42:57,020 --> 00:43:00,250
0,350 760,1125 1125,1490 1600,2000 2830,3230
powerful about liquid networks now,

1254
00:43:00,330 --> 00:43:02,350
0,335 335,650 650,935 935,1240 1620,2020
in addition to changing the

1255
00:43:02,610 --> 00:43:04,760
0,550 570,970
neuron equation.|
|

1256
00:43:04,800 --> 00:43:06,430
0,365 365,620 620,845 845,1040 1040,1630
We also change the wiring
我们还改变了接线，这种新型的接线，呃，本质上是赋予了深层神经网络中的神经元功能。每个神经元都是一样的，是吗？在我们的体系结构中，我们有输入神经元，我们有控制神经元，我们有中间神经元，它们各自做不同的事情。因此，考虑到这一点，我们可以再次看看由液体网络实现的美丽解决方案。这个解决方案让汽车保持在道路上行驶，只需要19个神经元就能实现这种功能。你可以在这里看到，与其他模型相比，解决方案的注意力非常集中，比如CNN或CT RNN或Isstm，它们的噪音要大得多。

1257
00:43:06,690 --> 00:43:08,330
0,335 335,670 960,1265 1265,1460 1460,1640
and this new type of

1258
00:43:08,330 --> 00:43:11,980
0,630 630,1010 1690,2090 2920,3285 3285,3650
wiring, eh, essentially gives function

1259
00:43:12,090 --> 00:43:13,985
0,245 245,350 350,790 1380,1685 1685,1895
to the neurons in a

1260
00:43:13,985 --> 00:43:15,875
0,225 225,480 480,755 1105,1455 1455,1890
deep neural network. Every neurons

1261
00:43:15,875 --> 00:43:17,615
0,195 195,375 375,665 1015,1410 1410,1740
is the same, eh? In

1262
00:43:17,615 --> 00:43:20,285
0,335 625,1025 1585,1890 1890,2195 2395,2670
our architecture we have input

1263
00:43:20,285 --> 00:43:22,175
0,480 480,735 735,995 1405,1650 1650,1890
neurons, we have we have

1264
00:43:22,175 --> 00:43:23,825
0,315 315,785 805,1065 1065,1290 1290,1650
control neurons, we have inter

1265
00:43:23,825 --> 00:43:25,520
0,545 775,1050 1050,1200 1200,1440 1440,1695
neurons and they each do

1266
00:43:25,520 --> 00:43:27,005
0,255 255,620 940,1215 1215,1365 1365,1485
different things. And so with

1267
00:43:27,005 --> 00:43:27,980
0,135 135,300 300,555 555,810 810,975
this in mind, we can

1268
00:43:27,980 --> 00:43:29,480
0,240 240,585 585,900 900,1215 1215,1500
look again at the beautiful

1269
00:43:29,480 --> 00:43:32,110
0,290 1090,1380 1380,1590 1590,2030 2230,2630
solution that is enabled by

1270
00:43:32,490 --> 00:43:34,300
0,380 380,760 1020,1325 1325,1520 1520,1810
liquid networks. And the solution

1271
00:43:34,440 --> 00:43:37,175
0,335 335,560 560,850 1500,1900 2430,2735
keeps the car on on

1272
00:43:37,175 --> 00:43:38,860
0,165 165,425 505,825 825,1145 1285,1685
the roads and only requires

1273
00:43:39,090 --> 00:43:42,140
0,400 750,1330 1680,2080 2160,2560 2670,3050
nineteen neurons to deliver that

1274
00:43:42,140 --> 00:43:44,060
0,285 285,465 465,740 1540,1800 1800,1920
kind of function. And you

1275
00:43:44,060 --> 00:43:45,470
0,165 165,390 390,710 790,1110 1110,1410
can see here that the

1276
00:43:45,470 --> 00:43:47,380
0,380 550,855 855,1050 1050,1340 1510,1910
attention of the solution is

1277
00:43:47,580 --> 00:43:50,480
0,400 900,1300 1770,2170 2250,2645 2645,2900
extremely focused as compared to

1278
00:43:50,480 --> 00:43:52,820
0,225 225,590 760,1160 1480,2055 2055,2340
other models like CNN or

1279
00:43:53,030 --> 00:43:55,670
0,135 135,630 630,900 900,1700 2350,2640
CT rnn or lsstm, which

1280
00:43:55,670 --> 00:43:57,580
0,165 165,390 390,645 645,1190
are much more noisy.|
|

1281
00:43:58,080 --> 00:43:58,925
0,260 260,380 380,530 530,680 680,845
So I hope you now
因此，我希望你们现在能更好地理解流动网络是如何工作的，以及它们的特性是什么。

1282
00:43:58,925 --> 00:44:00,725
0,180 180,315 315,575 775,1175 1465,1800
have a better understanding of

1283
00:44:00,725 --> 00:44:03,610
0,330 330,675 675,1025 2035,2435 2485,2885
how liquid networks work and

1284
00:44:03,630 --> 00:44:06,240
0,320 320,590 590,940 1080,1480
what their properties are.|
|

1285
00:44:06,240 --> 00:44:08,295
0,350 1000,1290 1290,1560 1560,1845 1845,2055
Now we can take this
现在我们可以把这个模型应用到许多其他问题上。所以这是一个我们称为Kenyon Run的问题，我们采用了流动网络，并实施了它，对吗？在一个只有一个自由度的飞机飞行任务中，飞机只能上下移动，但它必须撞到这些障碍物，这些障碍物位于飞机不知道的位置，飞机也不知道环境是什么样子的。所以特别是当你有，当你有，当你用一个自由度控制飞机执行任务时，你所需要的只是11个，呃液体神经元。如果你想控制平面的所有自由度，那么你需要24个神经元。它仍然比我们今天谈论的巨大模型小得多。这是另一项任务，我们称之为无人驾驶飞机，呃，目标是让无人驾驶飞机保持在那里.

1286
00:44:08,295 --> 00:44:09,480
0,255 255,525 525,735 735,975 975,1185
model and apply it to

1287
00:44:09,480 --> 00:44:11,355
0,210 210,525 525,890 1330,1590 1590,1875
many other problems. So here's

1288
00:44:11,355 --> 00:44:12,510
0,120 120,345 345,570 570,765 765,1155
a problem we call kenyon

1289
00:44:12,510 --> 00:44:15,260
0,290 850,1250 1510,1830 1830,2150 2350,2750
run where we have taken

1290
00:44:15,310 --> 00:44:17,460
0,395 395,790 930,1330 1590,1940 1940,2150
a liquid network and we

1291
00:44:17,460 --> 00:44:19,550
0,255 255,650 730,1130 1150,1550 1690,2090
have implemented it eh? On

1292
00:44:19,570 --> 00:44:21,330
0,335 335,670 720,1120 1200,1535 1535,1760
a task of flying a

1293
00:44:21,330 --> 00:44:23,640
0,290 1330,1665 1665,1965 1965,2175 2175,2310
plane with one degree of

1294
00:44:23,640 --> 00:44:25,125
0,290 370,660 660,840 840,1130 1210,1485
freedom where the plane can

1295
00:44:25,125 --> 00:44:26,070
0,210 210,390 390,525 525,705 705,945
only go up and down

1296
00:44:26,070 --> 00:44:27,050
0,195 195,315 315,510 510,705 705,980
but it has to hit

1297
00:44:27,280 --> 00:44:29,330
0,320 320,1070 1070,1385 1385,1685 1685,2050
these obstacles which are at

1298
00:44:29,980 --> 00:44:32,160
0,400 720,1120 1500,1775 1775,1970 1970,2180
locations that the plane does

1299
00:44:32,160 --> 00:44:33,090
0,195 195,405 405,570 570,705 705,930
not know and the plane

1300
00:44:33,090 --> 00:44:33,975
0,210 210,375 375,570 570,735 735,885
also does not know what

1301
00:44:33,975 --> 00:44:36,590
0,150 150,420 420,720 720,1025 2215,2615
the environment looks like. And

1302
00:44:36,790 --> 00:44:38,055
0,260 260,470 470,820 870,1130 1130,1265
so in particular when you

1303
00:44:38,055 --> 00:44:40,170
0,275 535,795 795,1055 1555,1905 1905,2115
have we have when, when

1304
00:44:40,170 --> 00:44:41,280
0,135 135,390 390,720 720,930 930,1110
you have the, when you

1305
00:44:41,280 --> 00:44:42,600
0,270 270,510 510,780 780,1050 1050,1320
implement the task with one

1306
00:44:42,600 --> 00:44:43,830
0,225 225,360 360,650 730,1050 1050,1230
degree of freedom control for

1307
00:44:43,830 --> 00:44:45,165
0,150 150,440 640,945 945,1125 1125,1335
the plane, all you need

1308
00:44:45,165 --> 00:44:48,320
0,335 355,755 1135,1535 1825,2225 2575,3155
is eleven, eh liquid neurons.

1309
00:44:48,880 --> 00:44:50,160
0,320 320,515 515,725 725,1010 1010,1280
If you want to control

1310
00:44:50,160 --> 00:44:51,255
0,255 255,525 525,735 735,885 885,1095
all the degrees of freedom

1311
00:44:51,255 --> 00:44:53,130
0,210 210,390 390,695 1225,1605 1605,1875
of the plane then you

1312
00:44:53,130 --> 00:44:54,860
0,225 225,720 720,1065 1065,1425 1425,1730
need 24 neurons. It's still

1313
00:44:54,940 --> 00:44:56,505
0,380 380,760 840,1130 1130,1310 1310,1565
much smaller than the huge

1314
00:44:56,505 --> 00:44:57,915
0,365 385,690 690,915 915,1140 1140,1410
models that we're talking about

1315
00:44:57,915 --> 00:45:00,900
0,305 1225,1650 1650,1935 1935,2315 2695,2985
today. Here's another task we

1316
00:45:00,900 --> 00:45:02,580
0,240 240,540 540,885 885,1160 1330,1680
call drone doge ball eh,

1317
00:45:02,580 --> 00:45:04,200
0,350 370,675 675,980 1060,1395 1395,1620
where the objective is to

1318
00:45:04,200 --> 00:45:06,170
0,240 240,590 970,1275 1275,1590 1590,1970
keep eh a drone at.|
|

1319
00:45:07,070 --> 00:45:09,490
0,725 725,1120 1650,1970 1970,2165 2165,2420
Specified location and the drone
指定的位置，无人机必须保护自己，当球飞过来的时候，你可以看到无人机躲避球的两个自由度的解决方案，这就是网络。你可以看到它是如何激发所有神经元的，你可以真正将这种基于学习的控制的控制器的功能与神经元的激活模式联系起来。

1320
00:45:09,490 --> 00:45:11,665
0,350 370,770 1030,1425 1425,1815 1815,2175
has to protect itself when

1321
00:45:11,665 --> 00:45:13,540
0,365 385,690 690,995 1165,1560 1560,1875
eh when balls eh come

1322
00:45:13,540 --> 00:45:15,625
0,240 240,560 1090,1490 1630,1905 1905,2085
its way and you can

1323
00:45:15,625 --> 00:45:16,585
0,210 210,420 420,660 660,840 840,960
see a two degree of

1324
00:45:16,585 --> 00:45:18,355
0,225 225,575 895,1200 1200,1440 1440,1770
freedom solution to drone dodge

1325
00:45:18,355 --> 00:45:19,470
0,225 225,435 435,735 735,855 855,1115
ball and that's the network.

1326
00:45:19,610 --> 00:45:21,060
0,290 290,515 515,755 755,1055 1055,1450
You can see how it

1327
00:45:21,380 --> 00:45:23,610
0,350 350,635 635,970 1200,1780 1830,2230
how all the neurons fire

1328
00:45:24,140 --> 00:45:26,070
0,400 690,980 980,1145 1145,1420 1530,1930
and you can really associate

1329
00:45:27,080 --> 00:45:29,545
0,365 365,620 620,910 1410,1810 2160,2465
the the function of of

1330
00:45:29,545 --> 00:45:31,285
0,305 355,960 960,1245 1245,1440 1440,1740
this controller of this learning

1331
00:45:31,285 --> 00:45:34,170
0,395 505,905 1465,1865 1915,2435 2485,2885
based control with activation patterns

1332
00:45:34,340 --> 00:45:35,820
0,305 305,470 470,910
of the neurons.|
|

1333
00:45:36,070 --> 00:45:37,700
0,275 275,410 410,650 650,1030 1230,1630
And so very excited because
非常令人兴奋，因为事实上，我们能够从这些类型的解决方案中提取决策树。这些决策树提供了人类可以理解的、人类可以理解的解释。

1334
00:45:37,840 --> 00:45:39,285
0,305 305,560 560,830 830,1055 1055,1445
in fact, we're able to

1335
00:45:39,285 --> 00:45:41,655
0,395 445,840 840,1235 1585,1985 2005,2370
extract decision trees from these

1336
00:45:41,655 --> 00:45:43,500
0,285 285,510 510,815 1075,1470 1470,1845
kinds of solutions. And these

1337
00:45:43,500 --> 00:45:46,460
0,345 345,710 760,1160 1480,1880 2200,2960
decision trees provide human understandable,

1338
00:45:48,160 --> 00:45:50,660
0,400 510,1145 1145,1630
human, understandable explanations.|
|

1339
00:45:50,730 --> 00:45:51,880
0,305 305,485 485,665 665,860 860,1150
And so this is really
因此，这对安全关键系统来说非常重要。

1340
00:45:52,470 --> 00:45:54,460
0,400 480,830 830,1175 1175,1570 1590,1990
important for safety critical systems.|
|

1341
00:45:56,310 --> 00:45:58,880
0,305 305,590 590,970 1200,1600 2190,2570
All right, eh. So let's
好的，嗯。我们来看看，好吗？拉明告诉你们，这些液体网络是动态因果模型，我想给你们展示更多的例子，解释这些模型是动态因果模型。所以在这里你可以看到SO，所以我们在这里研究的任务是在树木繁茂的环境中寻找物体和物体。这里有一些我们用来训练这项任务的数据的例子。因此，从本质上说，我们让一名飞行员驾驶无人机来完成这项任务。

1342
00:45:58,880 --> 00:46:01,090
0,260 490,890 1120,1635 1635,1905 1905,2210
see, eh? Ramin told you

1343
00:46:01,110 --> 00:46:03,400
0,400 780,1085 1085,1340 1340,1690 1890,2290
that these liquid networks are

1344
00:46:03,600 --> 00:46:05,090
0,350 350,770 770,1060 1140,1385 1385,1490
dynamic causal models and I

1345
00:46:05,090 --> 00:46:06,635
0,120 120,285 285,510 510,830 1150,1545
want to show you some

1346
00:46:06,635 --> 00:46:09,400
0,395 445,845 1195,1595 1645,2045 2365,2765
more examples that EM, that

1347
00:46:09,480 --> 00:46:11,315
0,380 380,760 930,1295 1295,1565 1565,1835
explain EM how these models

1348
00:46:11,315 --> 00:46:13,355
0,330 330,645 645,1020 1020,1295 1795,2040
are dynamic causal models. So

1349
00:46:13,355 --> 00:46:14,710
0,150 150,330 330,555 555,905 955,1355
here you can see the

1350
00:46:14,880 --> 00:46:15,920
0,290 290,425 425,560 560,800 800,1040
so, so here we're studying

1351
00:46:15,920 --> 00:46:18,190
0,380 400,795 795,1095 1095,1400 1870,2270
the task of finding an

1352
00:46:18,270 --> 00:46:21,070
0,400 600,1000 1080,1480 1920,2435 2435,2800
object inside a wooded environment

1353
00:46:21,810 --> 00:46:23,735
0,365 365,680 680,1030 1320,1625 1625,1925
and the object. And here

1354
00:46:23,735 --> 00:46:25,670
0,285 285,555 555,935 985,1385 1615,1935
here are some examples of

1355
00:46:25,670 --> 00:46:27,200
0,210 210,500 910,1215 1215,1380 1380,1530
the data that we have

1356
00:46:27,200 --> 00:46:28,685
0,290 370,690 690,930 930,1185 1185,1485
used to train this task.

1357
00:46:28,685 --> 00:46:29,855
0,285 285,585 585,900 900,1020 1020,1170
So essentially we've had a

1358
00:46:29,855 --> 00:46:32,920
0,275 565,965 2155,2505 2505,2745 2745,3065
human pilot drive a drone

1359
00:46:33,360 --> 00:46:35,465
0,400 990,1295 1295,1490 1490,1780 1830,2105
to, to, to accomplish the

1360
00:46:35,465 --> 00:46:36,340
0,275
task.|
|

1361
00:46:36,350 --> 00:46:37,920
0,400 750,1025 1025,1175 1175,1310 1310,1570
Now, this is the data.|
现在，这就是数据。|

1362
00:46:39,320 --> 00:46:41,110
0,275 275,425 425,590 590,880 1500,1790
So check this out. We
来看看这个。然后我们使用了一个标准的深度神经网络，我们要求这个网络来解决这个问题。而且网络的关注点地图真的是无处不在。你可以看到网络，深度神经网络的解决方案，非常混乱。但看看其他的东西。我们收集的数据是夏季数据，现在是秋天。

1363
00:46:41,110 --> 00:46:43,080
0,290 550,930 930,1310 1360,1665 1665,1970
have then used a standard

1364
00:46:43,130 --> 00:46:45,820
0,305 305,575 575,850 1980,2380 2430,2690
deep neural network and we

1365
00:46:45,820 --> 00:46:47,790
0,150 150,375 375,615 615,920 1570,1970
have asked this network to

1366
00:46:47,900 --> 00:46:50,245
0,395 395,710 710,1030 1560,1960 2040,2345
solve this problem. And the

1367
00:46:50,245 --> 00:46:51,420
0,300 300,600 600,780 780,915 915,1175
attention map of the network

1368
00:46:51,560 --> 00:46:53,035
0,400 420,785 785,1055 1055,1280 1280,1475
is really all over the

1369
00:46:53,035 --> 00:46:54,325
0,275 505,795 795,975 975,1140 1140,1290
place. You can see that

1370
00:46:54,325 --> 00:46:56,290
0,135 135,395 565,965 1465,1755 1755,1965
the network, the deep neural

1371
00:46:56,290 --> 00:46:58,950
0,260 790,1190 1360,1725 1725,2090 2260,2660
network solution, is very confused.

1372
00:46:59,450 --> 00:47:00,990
0,400 450,725 725,935 935,1205 1205,1540
But check out something else.

1373
00:47:01,550 --> 00:47:03,420
0,305 305,610 720,1040 1040,1360 1470,1870
The data that we collected

1374
00:47:03,530 --> 00:47:05,950
0,400 750,1400 1400,1720 1980,2255 2255,2420
was summertime data, and now

1375
00:47:05,950 --> 00:47:07,060
0,285 285,560
it's fall.|
|

1376
00:47:07,070 --> 00:47:08,170
0,245 245,335 335,580 630,920 920,1100
So the background is no
因此，背景不再是绿色的。我们有，我们没有那么多树上的叶子，所以这项任务的背景完全改变了。

1377
00:47:08,170 --> 00:47:10,900
0,290 490,890 1360,1635 1635,1910 2470,2730
longer green. We have, we

1378
00:47:10,900 --> 00:47:12,370
0,195 195,330 330,525 525,830 1090,1470
don't have as many leaves

1379
00:47:12,370 --> 00:47:14,140
0,330 330,680 1180,1470 1470,1620 1620,1770
on trees and so the

1380
00:47:14,140 --> 00:47:16,500
0,290 670,1070 1180,1545 1545,1910 1960,2360
context for this task has

1381
00:47:17,000 --> 00:47:18,760
0,400 570,970
completely changed.|
|

1382
00:47:21,090 --> 00:47:23,690
0,400 420,820 1260,1660 2070,2345 2345,2600
By comparison, the the liquid
相比之下，Liquid Network能够专注于任务，不会感到困惑，能够直接到达它需要找到的对象。看看这个例子的注意力地图是多么清晰。所以这是非常令人兴奋的，因为它，它真的表明，对于Liquid Network，我们有一个解决方案，在某种意义上能够抽象出训练的背景，这意味着我们可以从一个环境到另一个环境进行零机会转移。

1383
00:47:23,690 --> 00:47:26,285
0,380 490,810 810,1130 1450,1850 2200,2595
network is able to focus

1384
00:47:26,285 --> 00:47:28,180
0,270 270,435 435,725 1255,1575 1575,1895
on the task, is not

1385
00:47:28,200 --> 00:47:30,380
0,400 810,1190 1190,1460 1460,1750 1920,2180
confused and is able to

1386
00:47:30,380 --> 00:47:32,825
0,260 970,1370 1570,1890 1890,2175 2175,2445
go directly to the object

1387
00:47:32,825 --> 00:47:33,815
0,195 195,375 375,585 585,780 780,990
that it needs to find.

1388
00:47:33,815 --> 00:47:35,510
0,225 225,435 435,720 720,1085 1345,1695
And look how clean the

1389
00:47:35,510 --> 00:47:37,685
0,330 330,710 1150,1470 1470,1790 1900,2175
attention map of this of

1390
00:47:37,685 --> 00:47:39,395
0,240 240,570 570,935 1315,1575 1575,1710
this example is. So this

1391
00:47:39,395 --> 00:47:41,975
0,180 180,485 595,995 1525,1925 2275,2580
is very exciting because it,

1392
00:47:41,975 --> 00:47:43,760
0,195 195,480 480,875 985,1385 1435,1785
it really shows that with

1393
00:47:43,760 --> 00:47:45,620
0,330 330,710 1210,1500 1500,1680 1680,1860
liquid networks we have a

1394
00:47:45,620 --> 00:47:48,665
0,290 670,1035 1035,1400 2620,2895 2895,3045
solution that is that is

1395
00:47:48,665 --> 00:47:50,440
0,275 385,785 985,1275 1275,1470 1470,1775
able to in some sense

1396
00:47:50,610 --> 00:47:52,730
0,350 350,700 720,1055 1055,1390 1770,2120
abstract out the context of

1397
00:47:52,730 --> 00:47:54,350
0,350 700,975 975,1155 1155,1410 1410,1620
training and that means we

1398
00:47:54,350 --> 00:47:56,170
0,150 150,360 360,680 700,1095 1095,1820
can get zero shot transfers

1399
00:47:56,520 --> 00:47:58,570
0,305 305,605 605,1000 1290,1670 1670,2050
from one environment to another.|
|

1400
00:47:59,430 --> 00:48:01,745
0,400 900,1190 1190,1625 1625,2020 2040,2315
And so moreover, we actually
此外，我们实际上在仲冬也做了同样的工作，那时我们不再有树叶了。我们有黑色的树线，环境看起来与我们训练的环境有很大不同。这种从一组训练数据转移到完全不同环境的能力，对于机器学习的能力来说是真正的变革性。嗯，我们做的还不止这些。所以我们采用了我们的系列解决方案，并在实验室中进行了部署。这就是问题所在。

1401
00:48:01,745 --> 00:48:03,370
0,180 180,485 535,855 855,1175 1225,1625
have done the same task

1402
00:48:03,390 --> 00:48:04,235
0,275 275,410 410,560 560,710 710,845
in the middle of the

1403
00:48:04,235 --> 00:48:05,765
0,275 685,990 990,1170 1170,1320 1320,1530
winter when we no longer

1404
00:48:05,765 --> 00:48:07,565
0,240 240,525 525,765 765,1025 1405,1800
have leaves. We have black

1405
00:48:07,565 --> 00:48:10,000
0,285 285,575 1045,1445 1825,2130 2130,2435
tree lines, and the environment

1406
00:48:10,050 --> 00:48:13,630
0,400 840,1220 1220,1600 2490,2890 3180,3580
looks much, much different than

1407
00:48:14,130 --> 00:48:15,730
0,290 290,580 690,1025 1025,1280 1280,1600
the environment where we trained.

1408
00:48:16,290 --> 00:48:17,750
0,400 420,725 725,935 935,1205 1205,1460
And this kind of this

1409
00:48:17,750 --> 00:48:19,420
0,165 165,435 435,830 910,1290 1290,1670
kind of ability to transfer

1410
00:48:20,040 --> 00:48:21,530
0,395 395,770 770,1010 1010,1190 1190,1490
from one set of training

1411
00:48:21,530 --> 00:48:24,310
0,380 820,1200 1200,1575 1575,1970 2080,2780
data to completely different environments

1412
00:48:24,660 --> 00:48:27,125
0,365 365,730 1080,1870 2040,2315 2315,2465
is truly transformational for the

1413
00:48:27,125 --> 00:48:30,095
0,275 715,1115 1135,1410 1410,1685 2575,2970
capabilities of machine learning. Well,

1414
00:48:30,095 --> 00:48:31,450
0,465 465,690 690,900 900,1080 1080,1355
we've done more than that.

1415
00:48:31,470 --> 00:48:33,965
0,290 290,530 530,790 1710,2110 2130,2495
So we've taken our train

1416
00:48:33,965 --> 00:48:35,750
0,365 595,945 945,1290 1290,1650 1650,1785
solution and we deployed it

1417
00:48:35,750 --> 00:48:38,390
0,150 150,270 270,530 2110,2400 2400,2640
in the lab. So here

1418
00:48:38,390 --> 00:48:39,700
0,350
is.|
|

1419
00:48:40,040 --> 00:48:42,805
0,365 365,650 650,970 1380,1990 2490,2765
Ah, here is markram who
啊，这就是马克拉姆，他致力于解决这个问题，他确实是。然后看一下注意图。我的意思是，他的环境甚至不是树林。这是一间办公室，这是一个室内环境，我们看到其他例子，我们使用我们的解决方案，我们部署它来寻找相同的对象，就在这个数据大楼外面的椅子，这是深度神经网络解决方案，它完全被搞糊涂了，这是液体网络解决方案，它有完全相同的输入，没有问题去找机器人。

1420
00:48:42,805 --> 00:48:44,160
0,195 195,390 390,585 585,905 955,1355
worked on this problem and

1421
00:48:44,240 --> 00:48:46,285
0,350 350,700 1380,1685 1685,1880 1880,2045
he is. And and look

1422
00:48:46,285 --> 00:48:47,425
0,195 195,435 435,735 735,990 990,1140
at the attention map. I

1423
00:48:47,425 --> 00:48:48,835
0,165 165,455 535,825 825,1110 1110,1410
mean he the environment is

1424
00:48:48,835 --> 00:48:50,580
0,225 225,420 420,695 1165,1455 1455,1745
not not even the woods.

1425
00:48:50,870 --> 00:48:53,230
0,520 1290,1640 1640,1865 1865,2150 2150,2360
It's, it's an office, it's

1426
00:48:53,230 --> 00:48:55,600
0,90 90,510 510,860 1420,1820 2050,2370
an indoor environment and we

1427
00:48:55,600 --> 00:48:58,000
0,320 460,860 1030,1430 1630,2025 2025,2400
see other examples where we

1428
00:48:58,000 --> 00:49:01,200
0,380 670,1070 1270,1670 1900,2300 2800,3200
take our solution and we

1429
00:49:01,340 --> 00:49:02,755
0,320 320,635 635,950 950,1205 1205,1415
deploy it to find the

1430
00:49:02,755 --> 00:49:04,530
0,275 325,615 615,795 795,1085 1375,1775
same object, the chair just

1431
00:49:04,670 --> 00:49:06,000
0,335 335,560 560,755 755,995 995,1330
outside of this data building

1432
00:49:06,200 --> 00:49:07,750
0,275 275,425 425,700 870,1265 1265,1550
and this is the the

1433
00:49:07,750 --> 00:49:09,865
0,195 195,420 420,680 1240,1640 1810,2115
deep neural network solution that

1434
00:49:09,865 --> 00:49:12,310
0,305 385,785 1405,1805 1825,2145 2145,2445
gets completely confused and here

1435
00:49:12,310 --> 00:49:13,890
0,345 345,585 585,825 825,1185 1185,1580
is the liquid network solution

1436
00:49:14,750 --> 00:49:16,105
0,275 275,485 485,725 725,995 995,1355
that has the exact same

1437
00:49:16,105 --> 00:49:17,520
0,360 360,615 615,840 840,1095 1095,1415
input and has no problem

1438
00:49:18,230 --> 00:49:20,790
0,400 630,1030 1680,1955 1955,2195 2195,2560
going to to the the

1439
00:49:20,990 --> 00:49:22,300
0,335 335,515 515,680 680,1000
going to the robot.|
|

1440
00:49:22,530 --> 00:49:23,660
0,395 395,545 545,725 725,875 875,1130
Let's see a few more
让我们再看几个例子，我们正在做，呃，一跳一跳的，我们实际上是在搜索物体，并做多步解决方案，事实上，EM，事实上我们可以，如果我能看到我的下一个视频的话。

1441
00:49:23,660 --> 00:49:25,400
0,380 520,885 885,1250 1330,1590 1590,1740
examples here where we are

1442
00:49:25,400 --> 00:49:27,790
0,290 1180,1580 1600,1905 1905,2100 2100,2390
doing, eh, hop by hop,

1443
00:49:28,050 --> 00:49:30,500
0,440 440,710 710,1030 1650,2050 2070,2450
we're actually searching the object

1444
00:49:30,500 --> 00:49:32,860
0,285 285,555 555,920 970,1370 1960,2360
and doing multi step solutions

1445
00:49:33,060 --> 00:49:34,520
0,260 260,410 410,700 750,1150 1170,1460
and in fact, EM, in

1446
00:49:34,520 --> 00:49:35,645
0,255 255,495 495,720 720,960 960,1125
fact we can, if I

1447
00:49:35,645 --> 00:49:37,240
0,150 150,360 360,555 555,815 1195,1595
can get to my next

1448
00:49:37,380 --> 00:49:38,600
0,400
video.|
|

1449
00:49:39,010 --> 00:49:41,805
0,395 395,790 1500,1850 1850,2200 2430,2795
Eh, sorry. So, eh, I
呃，对不起。所以，呃，我是下一个是它向你展示了我们实际上可以永远这样做。这是一个无限跳跃的演示，就在外面的棒球场上完成的。我们放置了三个我们训练过的相同对象，并将它们放置在未知位置，然后我们将搜索功能添加到我们的机器学习解决方案中。因此，我们可以，系统可以继续运行，并从一个跳到另一个。

1450
00:49:41,805 --> 00:49:43,550
0,365 625,885 885,1095 1095,1395 1395,1745
am. The next one is

1451
00:49:43,810 --> 00:49:44,850
0,305 305,530 530,725 725,890 890,1040
it shows you that we

1452
00:49:44,850 --> 00:49:46,280
0,225 225,495 495,675 675,950 1030,1430
can actually do this forever.

1453
00:49:46,300 --> 00:49:47,630
0,275 275,425 425,590 590,755 755,1330
So here is an infinite

1454
00:49:48,220 --> 00:49:50,390
0,335 335,670 1200,1550 1550,1835 1835,2170
hop demo that was done

1455
00:49:50,770 --> 00:49:52,190
0,400 540,845 845,1025 1025,1160 1160,1420
just outside on the baseball

1456
00:49:52,300 --> 00:49:54,980
0,400 690,1085 1085,1480 1890,2285 2285,2680
field. And we we placed

1457
00:49:55,450 --> 00:49:57,030
0,320 320,530 530,710 710,1000 1200,1580
three of the same objects

1458
00:49:57,030 --> 00:49:58,880
0,315 315,570 570,810 810,1130 1450,1850
that we trained on and

1459
00:49:59,320 --> 00:50:01,400
0,305 305,560 560,860 860,1210 1680,2080
we placed them at unknown

1460
00:50:01,450 --> 00:50:03,980
0,400 600,995 995,1310 1310,1630 2130,2530
locations and we added the

1461
00:50:04,510 --> 00:50:06,260
0,320 320,635 635,1030 1170,1460 1460,1750
the search feature to our

1462
00:50:06,310 --> 00:50:08,535
0,275 275,500 500,850 1440,1840 1860,2225
machine learning solution. And so

1463
00:50:08,535 --> 00:50:10,110
0,240 240,515 745,1035 1035,1305 1305,1575
we can, the system can

1464
00:50:10,110 --> 00:50:11,205
0,255 255,555 555,765 765,930 930,1095
go on and on and

1465
00:50:11,205 --> 00:50:13,020
0,275 535,1035 1035,1230 1230,1505 1555,1815
on hopping from one to

1466
00:50:13,020 --> 00:50:13,840
0,105 105,350
the other.|
|

1467
00:50:14,380 --> 00:50:15,690
0,260 260,515 515,875 875,1115 1115,1310
The final example I will
我要给你们展示的最后一个例子是在圣州大楼的露台上，我们放了一些椅子，我们放了我们最喜欢的椅子，但我们也放了很多其他类似的椅子，我们可以看到，呃，液体网络的普适性很好，对吗？然而，如果我们采用lsstm解决方案，呃，它会被混淆，并到达错误的对象。

1468
00:50:15,690 --> 00:50:17,730
0,210 210,420 420,740 1150,1550 1750,2040
show you is in is

1469
00:50:17,730 --> 00:50:19,320
0,165 165,315 315,830 1060,1380 1380,1590
on the patio of the

1470
00:50:19,320 --> 00:50:21,105
0,105 105,270 270,620 1150,1530 1530,1785
St. State building where we

1471
00:50:21,105 --> 00:50:23,000
0,210 210,545 805,1095 1095,1385 1495,1895
have put a number of

1472
00:50:23,260 --> 00:50:25,590
0,460 1440,1715 1715,1895 1895,2090 2090,2330
chairs, we have put our

1473
00:50:25,590 --> 00:50:26,985
0,345 345,720 720,1065 1065,1290 1290,1395
favorite chair, but also we

1474
00:50:26,985 --> 00:50:27,885
0,165 165,390 390,570 570,750 750,900
have put a lot of

1475
00:50:27,885 --> 00:50:30,620
0,245 925,1320 1320,1715 1795,2225 2335,2735
other other similar chairs and

1476
00:50:30,940 --> 00:50:32,565
0,275 275,485 485,725 725,1030 1230,1625
we can see that eh,

1477
00:50:32,565 --> 00:50:35,330
0,360 360,725 925,1625 2065,2415 2415,2765
liquid networks generalize very well,

1478
00:50:35,380 --> 00:50:37,560
0,400 570,970 1560,1835 1835,2000 2000,2180
eh? Whereas if we take

1479
00:50:37,560 --> 00:50:39,750
0,165 165,780 780,1070 1540,1920 1920,2190
an lsstm solution, eh, it

1480
00:50:39,750 --> 00:50:41,220
0,290 310,630 630,840 840,1130 1210,1470
gets confused and goes to

1481
00:50:41,220 --> 00:50:43,460
0,150 150,440 820,1220
the wrong object.|
|

1482
00:50:43,830 --> 00:50:45,550
0,400 420,820 960,1250 1250,1430 1430,1720
So, eh, all of these
那么，嗯，所有这些想法，嗯，结合在一起，真的，嗯，指向一种新型的机器学习，嗯？这就产生了可以概括到未知场景的模型，本质上解决了当今神经网络不能很好地概括到未知测试场景的挑战，因为这些模型是如此快速和紧凑，你可以在网上训练它们，你可以在边缘设备上训练它们，你真的可以看到它们开始理解赋予它们的任务。所以你可以看到，我们真的开始了解这些系统的语义，这些系统必须做什么。

1483
00:50:45,720 --> 00:50:48,065
0,400 600,935 935,1250 1250,1630 2070,2345
ideas, eh, come together to

1484
00:50:48,065 --> 00:50:49,985
0,275 625,1005 1005,1385 1435,1740 1740,1920
really, eh point to a

1485
00:50:49,985 --> 00:50:51,550
0,240 240,525 525,845 985,1275 1275,1565
new type of machine learning,

1486
00:50:52,110 --> 00:50:54,455
0,395 395,790 810,1340 1340,1660 2010,2345
eh? That yields models that

1487
00:50:54,455 --> 00:50:57,760
0,695 1195,1485 1485,2100 2100,2825 2905,3305
generalize to unseen scenarios, essentially

1488
00:50:58,200 --> 00:51:00,905
0,670 990,1390 1470,1870 1980,2270 2270,2705
addressing a challenge with today's

1489
00:51:00,905 --> 00:51:02,195
0,240 240,515 595,915 915,1110 1110,1290
neural networks that do not

1490
00:51:02,195 --> 00:51:04,250
0,480 480,825 825,1080 1080,1685 1735,2055
generalize well to unseen test

1491
00:51:04,250 --> 00:51:07,145
0,650 1900,2205 2205,2370 2370,2610 2610,2895
scenarios because the models are

1492
00:51:07,145 --> 00:51:09,590
0,225 225,545 775,1175 1285,1895 2155,2445
so fast and compact, you

1493
00:51:09,590 --> 00:51:11,180
0,225 225,480 480,690 690,980 1300,1590
can train them online, you

1494
00:51:11,180 --> 00:51:12,310
0,210 210,435 435,630 630,825 825,1130
can train them on edge

1495
00:51:12,360 --> 00:51:14,770
0,400 960,1360 1380,1700 1700,2015 2015,2410
devices, and you can really

1496
00:51:14,820 --> 00:51:16,270
0,335 335,560 560,755 755,1055 1055,1450
see that they are beginning

1497
00:51:16,320 --> 00:51:18,215
0,400 690,1025 1025,1310 1310,1640 1640,1895
to understand the task that

1498
00:51:18,215 --> 00:51:19,490
0,225 225,465 465,840 840,1110 1110,1275
they're given. So you can

1499
00:51:19,490 --> 00:51:21,050
0,165 165,345 345,570 570,800 1210,1560
see that we're really beginning

1500
00:51:21,050 --> 00:51:22,630
0,255 255,480 480,690 690,870 870,1580
to get at the semantics

1501
00:51:22,830 --> 00:51:26,135
0,400 600,1000 1020,1325 1325,1630 3030,3305
of what these systems, what

1502
00:51:26,135 --> 00:51:27,275
0,165 165,455 475,795 795,975 975,1140
these systems have to do

1503
00:51:27,275 --> 00:51:28,200
0,305
so.|
|

1504
00:51:28,910 --> 00:51:29,860
0,260 260,410 410,590 590,785 785,950
What does this have to
这与未来有什么关系？

1505
00:51:29,860 --> 00:51:31,640
0,135 135,270 270,405 405,680
do with the future?|
|

1506
00:51:32,790 --> 00:51:33,820
0,305 305,485 485,590 590,725 725,1030
I think it is so
我认为使用机器学习来研究自然并开始了解智能的本质是非常令人兴奋的，在我们细胞的实验室里，我们有一个项目是看我们是否能够理解鲸鱼的生活，所以我这么说是什么意思？所以这是一个例子，我们使用了机器人无人机，非常抱歉，这是非常吵的。我们使用机器人无人机来寻找鲸鱼，看看它们做了什么，并跟踪它们，这是一些图像，这是这个系统能够做的一些剪辑。我们已经使用机器学习来识别鲸鱼，然后一旦你识别了鲸鱼，我们实际上可以伺服到中心。

1507
00:51:33,990 --> 00:51:35,500
0,400 450,695 695,940 990,1250 1250,1510
exciting to use machine learning

1508
00:51:35,850 --> 00:51:38,255
0,320 320,640 720,1120 1650,2050 2100,2405
to study nature and to

1509
00:51:38,255 --> 00:51:40,180
0,195 195,485 565,965 1375,1650 1650,1925
begin to understand the nature

1510
00:51:40,260 --> 00:51:44,120
0,400 480,880 1890,2290 3420,3680 3680,3860
of intelligence and in our

1511
00:51:44,120 --> 00:51:45,560
0,300 300,540 540,705 705,1185 1185,1440
lab here at cell we

1512
00:51:45,560 --> 00:51:47,945
0,290 760,1140 1140,1520 1750,2100 2100,2385
have one project that is

1513
00:51:47,945 --> 00:51:49,660
0,300 300,665 805,1170 1170,1425 1425,1715
looking at whether we can

1514
00:51:49,830 --> 00:51:51,370
0,305 305,485 485,760 780,1085 1085,1540
understand the lives of whales

1515
00:51:52,230 --> 00:51:53,255
0,350 350,635 635,830 830,920 920,1025
and so what do I

1516
00:51:53,255 --> 00:51:54,350
0,165 165,345 345,570 570,825 825,1095
mean by this. So here

1517
00:51:54,350 --> 00:51:56,990
0,255 255,525 525,890 1000,1400 2350,2640
is an example where we

1518
00:51:56,990 --> 00:51:58,960
0,195 195,500 550,950 1180,1635 1635,1970
have used a robotic drone

1519
00:51:59,550 --> 00:52:01,955
0,400 1260,1520 1520,1715 1715,2050 2070,2405
to, to go very sorry

1520
00:52:01,955 --> 00:52:03,155
0,225 225,515 595,855 855,1005 1005,1200
this is, this is very

1521
00:52:03,155 --> 00:52:08,030
0,305 3985,4245 4245,4395 4395,4605 4605,4875
loud. We have used a

1522
00:52:08,030 --> 00:52:10,600
0,450 450,800 1300,1605 1605,1910 1990,2570
robotic drone to find whales

1523
00:52:10,710 --> 00:52:12,095
0,400 630,905 905,1070 1070,1235 1235,1385
and look at what they

1524
00:52:12,095 --> 00:52:14,660
0,275 655,975 975,1215 1215,1535 2185,2565
do and track them and

1525
00:52:14,660 --> 00:52:17,495
0,315 315,585 585,840 840,1490 2560,2835
here is some imaging and

1526
00:52:17,495 --> 00:52:19,265
0,240 240,515 685,1095 1095,1455 1455,1770
here some clips from what

1527
00:52:19,265 --> 00:52:21,755
0,335 685,990 990,1185 1185,1475 2215,2490
this what this system is

1528
00:52:21,755 --> 00:52:22,685
0,240 240,480 480,630 630,765 765,930
able to do. We have

1529
00:52:22,685 --> 00:52:25,660
0,305 835,1125 1125,1415 1855,2255 2575,2975
used machine learning to identify

1530
00:52:25,740 --> 00:52:27,050
0,260 260,650 650,875 875,1070 1070,1310
the whales and then once

1531
00:52:27,050 --> 00:52:28,565
0,195 195,470 760,1095 1095,1290 1290,1515
you have identify the whale,

1532
00:52:28,565 --> 00:52:31,415
0,210 210,480 480,875 1645,2285 2575,2850
we can actually servo to

1533
00:52:31,415 --> 00:52:32,120
0,180 180,435 435,675
the center of.|
|

1534
00:52:32,120 --> 00:52:34,475
0,75 75,350 490,890 1450,1850 1990,2355
The whale essentially tracking EM
鲸鱼基本上沿途跟踪了EM鲸鱼。这就是这个系统是如何运作的。你可以看到一群鲸鱼。

1535
00:52:34,475 --> 00:52:35,675
0,225 225,495 495,795 795,975 975,1200
the whale along the way.

1536
00:52:35,675 --> 00:52:37,250
0,270 270,495 495,810 810,1200 1200,1575
And here is how, eh,

1537
00:52:37,250 --> 00:52:38,900
0,300 300,510 510,800 970,1365 1365,1650
how the system works. You

1538
00:52:38,900 --> 00:52:41,810
0,290 1030,1305 1305,1530 1530,1880 2650,2910
can you can see a

1539
00:52:41,810 --> 00:52:43,310
0,195 195,530 940,1215 1215,1350 1350,1500
bunch of a group of

1540
00:52:43,310 --> 00:52:44,480
0,470
whales.|
|

1541
00:52:44,730 --> 00:52:46,450
0,365 365,605 605,815 815,1150 1320,1720
And you can see our
你可以看到我们的机器人在鲸鱼移动时服务和跟踪它们。

1542
00:52:46,530 --> 00:52:49,850
0,400 840,1600 2220,2620 2640,3040 3060,3320
robot serving and following the

1543
00:52:49,850 --> 00:52:51,400
0,375 375,615 615,825 825,1130 1150,1550
whales as they move along.|
|

1544
00:52:52,170 --> 00:52:53,930
0,365 365,730 900,1235 1235,1535 1535,1760
Now, eh, we EM. This
现在，呃，我们是新兴市场。这是一个非常令人兴奋的项目，因为鲸鱼是如此威严、聪明和神秘的生物。

1545
00:52:53,930 --> 00:52:56,920
0,120 120,240 240,500 700,1100 2590,2990
is a very exciting project

1546
00:52:57,270 --> 00:52:59,680
0,400 540,965 965,1190 1190,1535 1535,2410
because whales are such majestic,

1547
00:52:59,760 --> 00:53:02,360
0,400 600,980 980,1490 1490,1810
intelligent and mysterious creatures.|
|

1548
00:53:02,360 --> 00:53:03,680
0,330 330,690 690,960 960,1140 1140,1320
And so if we can
因此，如果我们能够使用我们的技术来更好地了解它们的生活，我们就能够更多地了解其他动物和其他我们共享这个美丽星球的生物。所以我们可以从空中，从空中研究这些鲸鱼。我们也可以从从啊，从里面，从里面来研究鲸鱼。

1549
00:53:03,680 --> 00:53:05,240
0,210 210,465 465,800 1150,1410 1410,1560
use our technologies to get

1550
00:53:05,240 --> 00:53:07,390
0,290 370,1010 1240,1605 1605,1860 1860,2150
better insights into their lives,

1551
00:53:08,040 --> 00:53:09,970
0,320 320,530 530,680 680,940 1530,1930
we will be able to

1552
00:53:10,410 --> 00:53:12,880
0,400 420,725 725,1030 1170,1570 2070,2470
to understand more about about

1553
00:53:13,140 --> 00:53:16,280
0,400 1260,1660 1920,2320 2400,2795 2795,3140
other animals and other other

1554
00:53:16,280 --> 00:53:17,930
0,350 430,735 735,990 990,1340 1360,1650
creatures we share this beautiful

1555
00:53:17,930 --> 00:53:19,910
0,290 310,710 1360,1650 1650,1800 1800,1980
planet with. So we can

1556
00:53:19,910 --> 00:53:21,760
0,270 270,525 525,1005 1005,1370 1450,1850
study these whales from above,

1557
00:53:21,810 --> 00:53:22,895
0,290 290,440 440,665 665,890 890,1085
from the air. We can

1558
00:53:22,895 --> 00:53:24,280
0,240 240,465 465,645 645,1035 1035,1385
also study the whales from

1559
00:53:24,690 --> 00:53:26,380
0,320 320,590 590,940 990,1340 1340,1690
from ah, within from, from

1560
00:53:26,850 --> 00:53:28,140
0,380 380,760
inside the.|
|

1561
00:53:28,350 --> 00:53:29,590
0,290 290,425 425,620 620,845 845,1240
Eh, the ocean. And here's
呃，大海。这是索菲，我们的软机器鱼，呃，约瑟夫，今天和我们一起参与建造的。这是一个漂亮的，呃，漂亮的，呃，非常自然的，呃，移动的机器人，它可以接近水生生物，它可以像水生生物一样移动，而不会打扰它们。当你把机器人放在海洋环境中时，它们的行为与鱼不同，它们往往会吓到鱼。所以，如果你好奇，尾巴是由硅胶制成的，还有一个可以做到的泵。

1562
00:53:30,090 --> 00:53:32,000
0,395 395,785 785,1040 1040,1420 1440,1910
here's sophie, our soft robotic

1563
00:53:32,000 --> 00:53:35,195
0,290 730,1130 1630,2030 2470,2870 2950,3195
fish, eh, which Joseph, who

1564
00:53:35,195 --> 00:53:37,300
0,120 120,270 270,545 865,1265 1705,2105
is with us today has

1565
00:53:37,350 --> 00:53:39,755
0,880 1020,1420 1530,1850 1850,2150 2150,2405
participated in in building. And

1566
00:53:39,755 --> 00:53:42,200
0,300 300,545 685,1085 1255,1655 2065,2445
here's this beautiful, uh, beautiful,

1567
00:53:42,200 --> 00:53:45,370
0,380 460,860 1150,1550 1750,2150 2770,3170
eh, very natural, eh, moving

1568
00:53:45,780 --> 00:53:47,680
0,400 600,995 995,1310 1310,1565 1565,1900
robot that can get close

1569
00:53:47,790 --> 00:53:49,895
0,400 480,1175 1175,1480 1590,1895 1895,2105
to aquatic creatures that can

1570
00:53:49,895 --> 00:53:51,215
0,270 270,525 525,720 720,975 975,1320
move in the same way

1571
00:53:51,215 --> 00:53:53,740
0,615 615,905 985,1385 1645,2045 2125,2525
aquatic creatures do EM without

1572
00:53:54,600 --> 00:53:56,360
0,400 420,1070 1070,1310 1310,1535 1535,1760
without disturbing them. When you

1573
00:53:56,360 --> 00:53:58,240
0,345 345,735 735,1065 1065,1515 1515,1880
put thr based robots in

1574
00:53:58,440 --> 00:54:00,760
0,400 510,1220 1220,1505 1505,1940 1940,2320
ocean environments, they behave differently

1575
00:54:00,900 --> 00:54:02,870
0,400 1050,1340 1340,1505 1505,1745 1745,1970
than than the fish do

1576
00:54:02,870 --> 00:54:04,340
0,260 640,915 915,1080 1080,1230 1230,1470
and they tend to scare

1577
00:54:04,340 --> 00:54:05,720
0,210 210,500 880,1125 1125,1215 1215,1380
the fish. So if you're

1578
00:54:05,720 --> 00:54:09,395
0,260 1540,1830 1830,2120 2800,3200 3370,3675
curious, the tail is made

1579
00:54:09,395 --> 00:54:11,330
0,210 210,420 420,960 960,1325 1675,1935
out of silicone and there

1580
00:54:11,330 --> 00:54:13,300
0,120 120,285 285,590 1270,1620 1620,1970
is a pump that can.|
|

1581
00:54:14,370 --> 00:54:15,820
0,275 275,470 470,725 725,1055 1055,1450
That can pump water in
它可以在它的两个腔室中抽水。所以你可以看到它有两个裂开的腔室，你可以把水从一个腔室转移到另一个腔室。根据我们移动的水量和比例，你可以让鱼向前移动，向左转或向右转。

1582
00:54:16,080 --> 00:54:17,210
0,290 290,440 440,620 620,1010 1010,1130
two of its Chambers. So

1583
00:54:17,210 --> 00:54:17,900
0,105 105,210 210,285 285,465 465,690
you see it has two

1584
00:54:17,900 --> 00:54:19,970
0,380 790,1380 1380,1680 1680,1890 1890,2070
ripped Chambers and you can

1585
00:54:19,970 --> 00:54:21,755
0,290 550,945 945,1215 1215,1440 1440,1785
move water from one chamber

1586
00:54:21,755 --> 00:54:22,850
0,255 255,345 345,540 540,840 840,1095
to the other. And depending

1587
00:54:22,850 --> 00:54:23,915
0,195 195,360 360,570 570,840 840,1065
on how much water we

1588
00:54:23,915 --> 00:54:25,810
0,195 195,515 595,945 945,1200 1200,1895
move and in what proportions,

1589
00:54:25,980 --> 00:54:27,035
0,290 290,470 470,665 665,845 845,1055
you can get the fish

1590
00:54:27,035 --> 00:54:28,145
0,180 180,330 330,630 630,915 915,1110
to move forward, to turn

1591
00:54:28,145 --> 00:54:29,320
0,270 270,525 525,690 690,870 870,1175
left or to turn right.|
|

1592
00:54:30,180 --> 00:54:31,715
0,335 335,545 545,815 815,1210 1260,1535
So we can observe the
所以我们可以使用机器人技术来观察动物的运动，但我们可以做得更多，是吗？我们还可以收听什么呢？哎呀，其实我这里需要声音。我忘了这件事。我们可以观察他们互相说什么的方式。你能听到吗？

1593
00:54:31,715 --> 00:54:34,415
0,275 355,755 895,1295 1585,1985 2245,2700
motion of animals using robotic

1594
00:54:34,415 --> 00:54:35,645
0,275 505,765 765,900 900,1065 1065,1230
technologies, but we can do

1595
00:54:35,645 --> 00:54:37,415
0,275 535,935 1015,1290 1290,1530 1530,1770
more, eh? We can also

1596
00:54:37,415 --> 00:54:39,340
0,275 295,695 715,1035 1035,1350 1350,1925
listen in on what? Oops,

1597
00:54:39,690 --> 00:54:40,850
0,245 245,380 380,605 605,890 890,1160
actually I need sound here.

1598
00:54:40,850 --> 00:54:42,470
0,255 255,495 495,675 675,950 1360,1620
I forgot about this. We

1599
00:54:42,470 --> 00:54:44,380
0,240 240,600 600,980 1360,1635 1635,1910
can observe the the way

1600
00:54:44,490 --> 00:54:45,730
0,260 260,470 470,740 740,950 950,1240
we can observe what they

1601
00:54:45,960 --> 00:54:46,865
0,290 290,410 410,515 515,725 725,905
say to each other. Can

1602
00:54:46,865 --> 00:54:51,960
0,120 120,395
you hear?|
|

1603
00:55:21,550 --> 00:55:23,490
0,245 245,380 380,545 545,820 1530,1940
So this is a sperm
这是抹香鲸，你们听到了抹香鲸的叫声。我们相信他们说的是抹香鲸在和它的家人和朋友说话。

1604
00:55:23,490 --> 00:55:26,100
0,290 1330,1730 2020,2295 2295,2445 2445,2610
whale and you have heard

1605
00:55:26,100 --> 00:55:27,800
0,150 150,750 750,1020 1020,1320 1320,1700
the vocalization of sperm whales.

1606
00:55:28,240 --> 00:55:29,630
0,350 350,650 650,890 890,1130 1130,1390
We believe that they're talking

1607
00:55:29,770 --> 00:55:30,885
0,350 350,575 575,815 815,950 950,1115
that the sperm whale is

1608
00:55:30,885 --> 00:55:32,685
0,305 385,785 955,1275 1275,1545 1545,1800
talking to its family and

1609
00:55:32,685 --> 00:55:33,760
0,305
friends.|
|

1610
00:55:33,760 --> 00:55:34,465
0,150 150,255 255,360 360,540 540,705
And we would like to
我们想知道它在说什么。

1611
00:55:34,465 --> 00:55:35,840
0,120 120,255 255,480 480,725
know what it's saying.|
|

1612
00:55:37,630 --> 00:55:39,060
0,260 260,410 410,665 665,1030 1110,1430
We have no idea, but
我们不知道，但我们可以使用机器学习来取得进展。

1613
00:55:39,060 --> 00:55:40,220
0,195 195,345 345,600 600,870 870,1160
we can use machine learning

1614
00:55:40,420 --> 00:55:42,100
0,260 260,440 440,760
to make progress.|
|

1615
00:55:42,140 --> 00:55:43,120
0,275 275,395 395,590 590,815 815,980
And the way we can
我们可以做到这一点的方法是通过使用数据，使用你刚刚听到的那种数据。

1616
00:55:43,120 --> 00:55:45,595
0,180 180,435 435,720 720,1040 2140,2475
do that is by is

1617
00:55:45,595 --> 00:55:51,655
0,335 2965,3365 4525,4925 5485,5835 5835,6060
by using data, using the

1618
00:55:51,655 --> 00:55:53,740
0,275 985,1335 1335,1665 1665,1905 1905,2085
kind of data you have

1619
00:55:53,740 --> 00:55:55,040
0,255 255,590
just heard.|
|

1620
00:55:55,220 --> 00:55:57,760
0,275 275,485 485,820 2130,2375 2375,2540
To look for, to look
去寻找，去寻找语言的存在，这是智力的一个主要标志。

1621
00:55:57,760 --> 00:55:59,100
0,285 285,555 555,825 825,1065 1065,1340
for the presence of language,

1622
00:55:59,300 --> 00:56:00,700
0,290 290,440 440,590 590,880 1050,1400
which is a major sign

1623
00:56:00,700 --> 00:56:02,380
0,300 300,650
of intelligence.|
|

1624
00:56:03,280 --> 00:56:04,425
0,275 275,455 455,650 650,875 875,1145
We can look at whether
我们可以看看我们是否有离散的复合词，我们可以看看是否有语法，我们可以看看我们是否有长期依存关系，我们可以看看我们是否有人类语言所具有的其他性质。

1625
00:56:04,425 --> 00:56:06,045
0,195 195,405 405,885 885,1380 1380,1620
we have discrete compounds, we

1626
00:56:06,045 --> 00:56:07,065
0,150 150,315 315,525 525,795 795,1020
can look at whether there

1627
00:56:07,065 --> 00:56:08,580
0,195 195,420 420,905 1075,1350 1350,1515
might be grammar, we can

1628
00:56:08,580 --> 00:56:09,540
0,180 180,360 360,570 570,765 765,960
look at whether we have

1629
00:56:09,540 --> 00:56:11,775
0,315 315,710 790,1580 1840,2100 2100,2235
long range dependencies, we can

1630
00:56:11,775 --> 00:56:13,125
0,165 165,455 625,960 960,1155 1155,1350
look at whether we have

1631
00:56:13,125 --> 00:56:15,050
0,315 315,695 985,1320 1320,1590 1590,1925
other properties that human language

1632
00:56:15,130 --> 00:56:16,160
0,400
has.|
|

1633
00:56:16,940 --> 00:56:20,520
0,380 380,760 2580,2975 2975,3275 3275,3580
And so basically, our project
因此，基本上，我们的项目正在进行中。今天我不能告诉你鲸鱼们在说什么，但我可以告诉你，我们已经取得了进展。我可以告诉你，我们开始发现他们通话的哪些部分携带了信息。

1634
00:56:20,660 --> 00:56:22,060
0,400 480,800 800,1025 1025,1220 1220,1400
is very much work in

1635
00:56:22,060 --> 00:56:23,245
0,285 285,585 585,855 855,1020 1020,1185
progress. I can't tell you

1636
00:56:23,245 --> 00:56:24,460
0,275 325,630 630,795 795,1050 1050,1215
today what the whales are

1637
00:56:24,460 --> 00:56:25,735
0,240 240,420 420,525 525,800 1030,1275
saying to each other, but

1638
00:56:25,735 --> 00:56:26,785
0,135 135,360 360,600 600,810 810,1050
I can tell you that

1639
00:56:26,785 --> 00:56:29,020
0,210 210,405 405,720 720,1115 1945,2235
we have made progress. I

1640
00:56:29,020 --> 00:56:30,430
0,195 195,405 405,630 630,950 1120,1410
can tell you that we

1641
00:56:30,430 --> 00:56:33,300
0,270 270,645 645,1040 1360,1760 2470,2870
are beginning to find which

1642
00:56:33,380 --> 00:56:34,950
0,380 380,620 620,815 815,1150 1170,1570
parts of their calls carry

1643
00:56:35,090 --> 00:56:36,200
0,400
information.|
|

1644
00:56:36,360 --> 00:56:37,720
0,290 290,485 485,790 810,1085 1085,1360
We can use machine learning
我们可以使用机器学习来区分允许鲸鱼回声定位的点击与似乎是发声和携带信息的点击。

1645
00:56:38,010 --> 00:56:40,000
0,260 260,905 905,1130 1130,1610 1610,1990
to differentiate the clicks that

1646
00:56:40,140 --> 00:56:42,340
0,380 380,620 620,1055 1055,1385 1385,2200
allow the whales to echolocate

1647
00:56:42,750 --> 00:56:44,090
0,290 290,485 485,815 815,1040 1040,1340
from the clicks that seem

1648
00:56:44,090 --> 00:56:46,325
0,210 210,375 375,1160 1300,1700 1840,2235
to be vocalization and information

1649
00:56:46,325 --> 00:56:47,860
0,395 445,995
carrying clicks.|
|

1650
00:56:48,550 --> 00:56:49,935
0,290 290,580 720,1040 1040,1220 1220,1385
We can begin to look
我们可以开始看看信息交换的协议是什么。他们如何进行对话？

1651
00:56:49,935 --> 00:56:51,420
0,225 225,435 435,600 600,1230 1230,1485
at what the protocols for

1652
00:56:51,420 --> 00:56:53,055
0,350 460,795 795,1130 1210,1500 1500,1635
information exchange are. How do

1653
00:56:53,055 --> 00:56:54,960
0,245 325,645 645,840 840,1115
they engage in dialogue?|
|

1654
00:56:54,960 --> 00:56:56,490
0,270 270,450 450,740 940,1275 1275,1530
And we can begin to
我们可以开始问，他们对彼此所说的信息是什么？因此，在我们的项目中，我们试图理解语音。

1655
00:56:56,490 --> 00:56:58,050
0,320 550,825 825,975 975,1215 1215,1560
ask, what is the information

1656
00:56:58,050 --> 00:56:59,640
0,240 240,420 420,740 970,1305 1305,1590
that they say to one

1657
00:56:59,640 --> 00:57:03,020
0,350 1240,1640 2380,2715 2715,3015 3015,3380
another? So with our project,

1658
00:57:03,190 --> 00:57:04,845
0,305 305,610 690,1040 1040,1370 1370,1655
we are trying to understand

1659
00:57:04,845 --> 00:57:06,280
0,180 180,755
the phonetics.|
|

1660
00:57:06,320 --> 00:57:08,230
0,275 275,940 960,1250 1250,1445 1445,1910
The semantics and the syntax
鲸鱼的语义、句法和语篇。

1661
00:57:08,230 --> 00:57:10,020
0,210 210,345 345,860 1090,1365 1365,1790
and the discourse for whales.|
|

1662
00:57:11,570 --> 00:57:12,955
0,275 275,395 395,530 530,820 1080,1385
So we have a big
因此，我们有一个由大约22,000次点击组成的大数据集。

1663
00:57:12,955 --> 00:57:14,935
0,270 270,635 775,1350 1350,1635 1635,1980
data set consisting of about

1664
00:57:14,935 --> 00:57:17,140
0,845 925,1475
22,000 clicks.|
|

1665
00:57:17,240 --> 00:57:19,825
0,380 380,770 770,1060 1830,2270 2270,2585
The clicks get grouped into
点击被分组为Codas。尾巴就像音素一样。

1666
00:57:19,825 --> 00:57:21,355
0,575 595,885 885,1200 1200,1350 1350,1530
codas. The codas are like

1667
00:57:21,355 --> 00:57:23,160
0,305 415,995
the phonemes.|
|

1668
00:57:23,640 --> 00:57:26,120
0,400 1050,1450 1560,1835 1835,2110 2190,2480
And using machine learning, we
使用机器学习，我们可以识别CO类型，我们可以识别尾巴交换的模式，我们可以开始真正问自己，鲸鱼是如何交换信息的？

1669
00:57:26,120 --> 00:57:28,520
0,290 580,900 900,1185 1185,1550 2140,2400
can identify Co types, we

1670
00:57:28,520 --> 00:57:31,030
0,260 520,920 1210,1610 1780,2085 2085,2510
can identify patterns for coda

1671
00:57:31,050 --> 00:57:35,075
0,640 1110,1510 3180,3455 3455,3695 3695,4025
exchanges, and we can begin

1672
00:57:35,075 --> 00:57:38,945
0,225 225,485 925,1325 1615,2015 3505,3870
to really ask ourselves how

1673
00:57:38,945 --> 00:57:41,740
0,255 255,545 985,1385 1825,2205 2205,2795
is it that that whales

1674
00:57:42,450 --> 00:57:44,080
0,400 600,1000
exchange information?|
|

1675
00:57:44,080 --> 00:57:45,085
0,135 135,225 225,560 580,855 855,1005
And if you're interested in
如果你对这个问题感兴趣，请来找我们，因为我们有很多非常、非常令人兴奋和重要的项目，对于反向工程，这种真正非凡和威严的动物能够做什么。

1676
00:57:45,085 --> 00:57:46,975
0,180 180,485 625,1005 1005,1385 1645,1890
this problem, please come see

1677
00:57:46,975 --> 00:57:49,480
0,245 445,845 1225,1530 1530,1835 2215,2505
us because we have a

1678
00:57:49,480 --> 00:57:51,150
0,180 180,375 375,680 1030,1350 1350,1670
lot of projects that are

1679
00:57:51,230 --> 00:57:53,520
0,395 395,770 770,1150 1560,1925 1925,2290
very, very exciting and important

1680
00:57:53,780 --> 00:57:56,430
0,400 540,940 1020,1420 1950,2300 2300,2650
towards reverse engineering, what this

1681
00:57:56,450 --> 00:58:01,110
0,400 1050,1450 1740,2140 2190,3040 4260,4660
really extraordinary and majestic animal

1682
00:58:01,550 --> 00:58:03,780
0,320 320,620 620,890 890,1180
is capable of doing.|
|

1683
00:58:04,120 --> 00:58:05,930
0,245 245,365 365,545 545,850 1410,1810
So let me close by
因此，让我以此来结束我的演讲。

1684
00:58:06,100 --> 00:58:07,820
0,400 480,880
saying that.|
|

1685
00:58:08,130 --> 00:58:09,560
0,275 275,470 470,790 930,1220 1220,1430
In this class you have
在这堂课中，你已经看到了许多非常令人兴奋的机器学习算法。

1686
00:58:09,560 --> 00:58:11,260
0,285 285,630 630,900 900,1190 1300,1700
looked at a number of

1687
00:58:11,460 --> 00:58:14,080
0,400 810,1210 1380,1655 1655,1930 2040,2620
really exciting machine learning algorithms.|
|

1688
00:58:14,660 --> 00:58:15,755
0,195 195,300 300,555 555,855 855,1095
But you have also looked
但您也了解了机器学习算法的一些技术挑战。

1689
00:58:15,755 --> 00:58:17,060
0,335 445,780 780,990 990,1140 1140,1305
at what some of the

1690
00:58:17,060 --> 00:58:19,115
0,290 490,890 1360,1620 1620,1830 1830,2055
technical challenges with the machine

1691
00:58:19,115 --> 00:58:20,860
0,275 385,870 870,1175
learning algorithms are.|
|

1692
00:58:21,460 --> 00:58:23,970
0,350 350,695 695,1390 1830,2180 2180,2510
Including data availability, including data
包括数据可用性，包括数据质量，包括所需的计算量、模型大小以及该模型在边缘设备或大型设备上运行的能力。

1693
00:58:23,970 --> 00:58:26,760
0,380 1060,1460 2110,2400 2400,2595 2595,2790
quality, including the amount of

1694
00:58:26,760 --> 00:58:28,980
0,620 760,1160 1240,1530 1530,1820 1840,2220
computation required, the model size

1695
00:58:28,980 --> 00:58:30,470
0,330 330,570 570,860 910,1200 1200,1490
and the ability of that

1696
00:58:30,640 --> 00:58:32,145
0,400 450,710 710,935 935,1205 1205,1505
model to run on edge

1697
00:58:32,145 --> 00:58:34,340
0,395 595,915 915,1230 1230,1625 1795,2195
devices or on huge devices.|
|

1698
00:58:35,550 --> 00:58:37,355
0,260 260,455 455,725 725,1060 1470,1805
You have seen that many
你已经看到，我们的许多解决方案都是黑盒解决方案，有时我们有脆弱的功能。我们有，我们有容易受到攻击的模型。

1699
00:58:37,355 --> 00:58:39,095
0,195 195,420 420,785 1045,1410 1410,1740
of our solutions are black

1700
00:58:39,095 --> 00:58:40,955
0,315 315,665 775,1095 1095,1415 1585,1860
box solutions and sometimes we

1701
00:58:40,955 --> 00:58:43,150
0,195 195,630 630,935 1645,1920 1920,2195
have brittle function. We have,

1702
00:58:43,500 --> 00:58:46,120
0,260 260,440 440,760 1290,1960 2220,2620
we have easily attackable models.|
|

1703
00:58:47,960 --> 00:58:49,470
0,260 260,515 515,815 815,1115 1115,1510
You have also seen some
你也看到了一些替代模型，比如Liquid Network，它们试图解决其中的一些问题。有如此多的机会来开发改进的机器学习，利用现有的模型和发明新的模型。

1704
00:58:49,520 --> 00:58:51,390
0,400 450,850 930,1250 1250,1520 1520,1870
alternative models, like liquid networks,

1705
00:58:51,950 --> 00:58:54,145
0,400 420,820 930,1330 1440,1840 1920,2195
which attempt to address some

1706
00:58:54,145 --> 00:58:56,590
0,150 150,405 405,785 1885,2190 2190,2445
of these questions. There is

1707
00:58:56,590 --> 00:58:58,860
0,285 285,620 880,1280 1510,1890 1890,2270
so much opportunity for developing

1708
00:59:00,620 --> 00:59:03,115
0,400 570,845 845,1120 1140,1540 2100,2495
improved machine learning, using existing

1709
00:59:03,115 --> 00:59:05,160
0,395 775,1140 1140,1635 1635,1785 1785,2045
models and inventing new models.|
|

1710
00:59:05,970 --> 00:59:06,890
0,260 260,395 395,545 545,725 725,920
And if we can do
如果我们能做到这一点，我们就可以创造一个令人兴奋的世界，在那里机器将真正增强我们的能力，增强我们的认知能力和身体能力。所以，想象一下。

1711
00:59:06,890 --> 00:59:09,610
0,290 1180,1455 1455,1665 1665,2000 2320,2720
this, we can create an

1712
00:59:09,780 --> 00:59:12,845
0,400 570,970 1350,1750 2310,2710 2790,3065
exciting world where machines will

1713
00:59:12,845 --> 00:59:14,500
0,240 240,750 750,1035 1035,1320 1320,1655
really empower us, will really

1714
00:59:14,520 --> 00:59:17,110
0,590 590,845 845,1180 1890,2240 2240,2590
augment us and enhance us

1715
00:59:17,640 --> 00:59:19,940
0,400 480,830 830,1370 1370,1750 1950,2300
in our cognitive abilities and

1716
00:59:19,940 --> 00:59:22,355
0,195 195,360 360,660 660,1160 2140,2415
in our physical abilities. So

1717
00:59:22,355 --> 00:59:23,740
0,240 240,605
just imagine.|
|

1718
00:59:23,740 --> 00:59:25,570
0,420 420,680 790,1340 1360,1635 1635,1830
Waking up enabled by your
在你的私人助理的帮助下醒来。

1719
00:59:25,570 --> 00:59:27,300
0,320 460,860
personal assistant.|
|

1720
00:59:27,340 --> 00:59:28,860
0,290 290,530 530,800 800,1115 1115,1520
That figures out the optimal
这会计算出最佳的时间，帮助你组织一天所需的所有物品，然后把它们带给你，这样你就不必考虑你的服装是否匹配。

1721
00:59:28,860 --> 00:59:30,830
0,320 670,960 960,1200 1200,1500 1500,1970
time and helps you organize

1722
00:59:31,150 --> 00:59:33,105
0,380 380,635 635,910 1320,1700 1700,1955
all the items that you

1723
00:59:33,105 --> 00:59:34,875
0,240 240,465 465,600 600,875 1465,1770
need for the day and

1724
00:59:34,875 --> 00:59:36,825
0,305 1075,1380 1380,1590 1590,1740 1740,1950
then brings them to you

1725
00:59:36,825 --> 00:59:37,680
0,210 210,315 315,495 495,645 645,855
so you don't have to

1726
00:59:37,680 --> 00:59:39,360
0,225 225,560 700,1035 1035,1260 1260,1680
think about whether your outfit

1727
00:59:39,360 --> 00:59:40,460
0,290
matches.|
|

1728
00:59:41,090 --> 00:59:42,240
0,260 260,425 425,590 590,800 800,1150
And as you walk by
当你走过一家商店时，商店橱窗里的图像会显示你身上的最新时尚照片。

1729
00:59:42,500 --> 00:59:44,635
0,320 320,640 870,1145 1145,1420 1860,2135
a store, the image in

1730
00:59:44,635 --> 00:59:46,855
0,180 180,420 420,755 1105,1715 1915,2220
the store window displays your

1731
00:59:46,855 --> 00:59:48,630
0,305 625,885 885,1020 1020,1295 1375,1775
picture with the latest fashion

1732
00:59:48,710 --> 00:59:50,460
0,260 260,410 410,700
on your body.|
|

1733
00:59:51,350 --> 00:59:53,020
0,350 350,605 605,830 830,1150 1320,1670
And inside the store, ah,
而在店内啊，也许你想买某一只鞋。人工智能系统可以分析你的走路方式，可以分析啊你的尺寸，还可以创建一双定制的鞋子，一种专为你定制的模特。

1734
00:59:53,020 --> 00:59:54,190
0,345 345,600 600,780 780,960 960,1170
maybe you want to buy

1735
00:59:54,190 --> 00:59:56,035
0,240 240,530 700,1080 1080,1460 1480,1845
a certain shoe. An AI

1736
00:59:56,035 --> 00:59:57,775
0,365 475,765 765,1305 1305,1560 1560,1740
system can analyze how you

1737
00:59:57,775 --> 01:00:00,060
0,275 295,570 570,1115 1465,1865 1885,2285
walk, can analyze ah ah

1738
01:00:00,320 --> 01:00:02,680
0,400 540,860 860,1300 1680,2045 2045,2360
your your dimensions and can

1739
01:00:02,680 --> 01:00:04,945
0,350 370,675 675,1310 1690,2040 2040,2265
create a bespoke shoe, a

1740
01:00:04,945 --> 01:00:06,600
0,420 420,755 775,1140 1140,1380 1380,1655
bespoke model just for you.|
|

1741
01:00:07,540 --> 01:00:08,820
0,260 260,455 455,740 740,1040 1040,1280
And then all the, all
然后，我们环境中的所有，所有的衣服，所有的物品都可以被唤醒。我们的衣服可能会变成机器人。因此，我们的衣服可以成为电磁监测设备，但它们也可以成为可编程的。例如，在本例中，您可以看到A A毛衣可以改变颜色，以便女孩可以匹配她的朋友。现在，这实际上并不牵强。我们在校园里有一个小组，他们正在提供这些可以改变颜色的可编程光纤，它们可以进行一些计算。

1742
01:00:08,820 --> 01:00:10,310
0,210 210,530 610,975 975,1215 1215,1490
the clothing, all the items

1743
01:00:10,360 --> 01:00:11,625
0,245 245,455 455,815 815,1100 1100,1265
in our environment can kind

1744
01:00:11,625 --> 01:00:14,025
0,275 325,935 1075,1475 1525,1925 2035,2400
of awaken. Our clothing could

1745
01:00:14,025 --> 01:00:17,175
0,365 775,1355 1675,2075 2635,2925 2925,3150
become robots. And so our

1746
01:00:17,175 --> 01:00:20,000
0,335 415,780 780,1140 1140,1535 2425,2825
clothing could become EM monitoring

1747
01:00:20,410 --> 01:00:22,040
0,400 540,800 800,950 950,1235 1235,1630
devices, but they could also

1748
01:00:22,750 --> 01:00:24,450
0,305 305,980 980,1250 1250,1535 1535,1700
become programmable. For instance, in

1749
01:00:24,450 --> 01:00:25,760
0,180 180,495 495,780 780,990 990,1310
this case, you can see

1750
01:00:25,870 --> 01:00:28,530
0,275 275,550 990,1370 1370,1750 2340,2660
the ability of A A

1751
01:00:28,530 --> 01:00:30,360
0,300 300,555 555,810 810,1190 1540,1830
sweater to change color so

1752
01:00:30,360 --> 01:00:32,010
0,290 790,1035 1035,1200 1200,1410 1410,1650
that the girl can match

1753
01:00:32,010 --> 01:00:34,320
0,240 240,530 1030,1430 1780,2055 2055,2310
her friend. Now, this is

1754
01:00:34,320 --> 01:00:35,775
0,270 270,540 540,810 810,1245 1245,1455
actually not far fetched. We

1755
01:00:35,775 --> 01:00:37,040
0,270 270,570 570,765 765,960 960,1265
have a group on campus

1756
01:00:37,690 --> 01:00:40,310
0,275 275,545 545,940 1110,1510 1740,2620
that is delivering these programmable

1757
01:00:40,750 --> 01:00:42,350
0,545 545,770 770,965 965,1235 1235,1600
fibers that can change color

1758
01:00:42,640 --> 01:00:43,695
0,275 275,470 470,680 680,860 860,1055
and that they can do

1759
01:00:43,695 --> 01:00:45,020
0,225 225,845
some computation.|
|

1760
01:00:46,210 --> 01:00:48,110
0,320 320,640 1020,1355 1355,1595 1595,1900
At work inside the intelligent
在智能会议室内工作啊，通过监测人们的舒适度和手势，可以自动调节温度。假以时日，全息图可以用来让虚拟世界变得更加，呃，更加逼真，更加相互联系。因此，他们在这里讨论一种新型飞行汽车的设计。假设我们有这些会飞的汽车，然后我们可以将这些汽车与IT基础设施集成在一起。

1761
01:00:48,310 --> 01:00:50,325
0,740 740,1070 1070,1295 1295,1570 1740,2015
boardroom, ah, the temperature could

1762
01:00:50,325 --> 01:00:52,280
0,255 255,635 865,1265 1315,1635 1635,1955
get adjusted automatically by monitoring

1763
01:00:52,900 --> 01:00:56,360
0,515 515,790 1290,1690 2310,3040 3060,3460
people's comfort and gesture. And

1764
01:00:56,410 --> 01:00:58,185
0,305 305,485 485,695 695,1480 1500,1775
just in time, holograms could

1765
01:00:58,185 --> 01:00:59,370
0,135 135,395 505,780 780,990 990,1185
be used to make the

1766
01:00:59,370 --> 01:01:01,700
0,260 280,680 1030,1430 1450,1850 1930,2330
virtual world much more, eh,

1767
01:01:02,470 --> 01:01:05,030
0,320 320,530 530,1240 1800,2180 2180,2560
much more realistic, much more

1768
01:01:05,080 --> 01:01:08,160
0,400 1380,1685 1685,1865 1865,2140 2610,3080
connected. And so here they're

1769
01:01:08,160 --> 01:01:10,920
0,350 1030,1430 1480,1880 2140,2520 2520,2760
discussing the the design of

1770
01:01:10,920 --> 01:01:13,430
0,135 135,410 820,1200 1200,1580 2110,2510
a new flying cars. And

1771
01:01:13,780 --> 01:01:14,925
0,365 365,500 500,680 680,890 890,1145
let's say we have these

1772
01:01:14,925 --> 01:01:17,385
0,285 285,635 1195,1595 2005,2310 2310,2460
flying cars and then we

1773
01:01:17,385 --> 01:01:18,765
0,105 105,630 630,855 855,1155 1155,1380
can integrate these cars with

1774
01:01:18,765 --> 01:01:20,420
0,120 120,395 745,1145
the it infrastructure.|
|

1775
01:01:20,520 --> 01:01:21,665
0,290 290,530 530,755 755,935 935,1145
The cars will know your
例如，汽车会知道你的需求，这样它们就可以告诉你，你可以通过计算一个小小的绕道，在附近买到你一直想要的植物。回到家里，你可以第一次骑自行车，自行车本身就变成了一个机器人，它有可适应的轮子，根据你的技能水平出现和消失。

1776
01:01:21,665 --> 01:01:22,790
0,300 300,570 570,735 735,915 915,1125
needs so that they can

1777
01:01:22,790 --> 01:01:23,990
0,210 210,390 390,660 660,975 975,1200
tell you, for instance, that

1778
01:01:23,990 --> 01:01:25,025
0,165 165,330 330,585 585,825 825,1035
you can buy the plants

1779
01:01:25,025 --> 01:01:26,740
0,195 195,360 360,665 745,1145 1315,1715
you have been wanting nearby

1780
01:01:27,060 --> 01:01:28,690
0,380 380,725 725,890 890,1115 1115,1630
by computing a small detour.

1781
01:01:29,340 --> 01:01:31,175
0,290 290,485 485,680 680,970 1530,1835
And back at home, you

1782
01:01:31,175 --> 01:01:32,495
0,225 225,525 525,810 810,1065 1065,1320
can take a first ride

1783
01:01:32,495 --> 01:01:34,070
0,165 165,300 300,575 1105,1410 1410,1575
on a bike and the

1784
01:01:34,070 --> 01:01:35,690
0,240 240,620 640,990 990,1290 1290,1620
bike itself becomes a robot,

1785
01:01:35,690 --> 01:01:37,580
0,345 345,930 930,1275 1275,1545 1545,1890
with adaptable wheels that appear

1786
01:01:37,580 --> 01:01:39,425
0,270 270,825 825,1220 1330,1590 1590,1845
and disappear according to your

1787
01:01:39,425 --> 01:01:40,580
0,285 285,575
skill level.|
|

1788
01:01:40,620 --> 01:01:41,975
0,275 275,425 425,635 635,1085 1085,1355
You can have robots that
你可以拥有帮助种植的机器人。你有，你可以有送货机器人，还有垃圾禁令，垃圾桶会自动取出。

1789
01:01:41,975 --> 01:01:43,400
0,225 225,480 480,1065 1065,1245 1245,1425
help with planting. You have,

1790
01:01:43,400 --> 01:01:44,855
0,180 180,300 300,525 525,890 970,1455
you can have delivery robots

1791
01:01:44,855 --> 01:01:46,090
0,210 210,450 450,555 555,930 930,1235
and there's the garbage ban,

1792
01:01:46,350 --> 01:01:47,680
0,260 260,605 605,815 815,1010 1010,1330
the garbage bin that takes

1793
01:01:47,700 --> 01:01:49,140
0,335 335,670
itself out.|
|

1794
01:01:50,350 --> 01:01:51,410
0,260 260,455 455,650 650,785 785,1060
And after a good day,
而在美好的一天过后，到了睡前讲故事的时候，你就可以开始进入故事，控制流程，开始与故事中的角色互动。

1795
01:01:51,460 --> 01:01:52,440
0,260 260,515 515,725 725,890 890,980
when it's time for a

1796
01:01:52,440 --> 01:01:55,170
0,525 525,890 1750,2055 2055,2360 2410,2730
bedtime story, you can begin

1797
01:01:55,170 --> 01:01:56,720
0,195 195,465 465,780 780,1100 1150,1550
to enter the story and

1798
01:01:57,010 --> 01:01:59,385
0,400 750,1085 1085,1420 1590,1990 2040,2375
control the flow and begin

1799
01:01:59,385 --> 01:02:00,980
0,335 475,875 925,1170 1170,1305 1305,1595
to interact with the characters

1800
01:02:01,240 --> 01:02:02,940
0,275 275,470 470,790
in the story.|
|

1801
01:02:03,580 --> 01:02:06,150
0,305 305,560 560,910 990,1390 2310,2570
These are some possibilities for
这些都是机器学习、人工智能和机器人所带来的未来的一些可能性。

1802
01:02:06,150 --> 01:02:07,880
0,165 165,390 390,600 600,890 1330,1730
the kind of future that

1803
01:02:07,960 --> 01:02:10,395
0,305 305,610 1020,1415 1415,1810 2040,2435
machine learning, artificial intelligence and

1804
01:02:10,395 --> 01:02:12,640
0,570 570,915 915,1715
robots are enabling.|
|

1805
01:02:12,650 --> 01:02:14,430
0,305 305,665 665,970 1020,1400 1400,1780
And I'm personally very excited
我个人对这个未来感到非常兴奋，机器人将帮助我们进行认知和体力工作。

1806
01:02:14,690 --> 01:02:17,190
0,335 335,575 575,880 1080,1480 1920,2500
about this future, with robots

1807
01:02:17,510 --> 01:02:19,090
0,365 365,680 680,920 920,1415 1415,1580
helping us with cognitive and

1808
01:02:19,090 --> 01:02:20,340
0,290 310,710
physical work.|
|

1809
01:02:20,830 --> 01:02:22,515
0,395 395,695 695,1000 1050,1370 1370,1685
But this future is really
但这一未来真的取决于你们所有人将取得的非常重要的新进展。因此，我非常兴奋地看到你们在未来几年将会做些什么。所以非常感谢你，来和我们一起工作吧。

1810
01:02:22,515 --> 01:02:25,005
0,395 505,905 955,1355 1585,1985 2155,2490
dependent on very important new

1811
01:02:25,005 --> 01:02:27,180
0,725 1015,1305 1305,1485 1485,1775 1795,2175
advancements that will come from

1812
01:02:27,180 --> 01:02:28,680
0,255 255,390 390,650 1060,1365 1365,1500
all of you. And so

1813
01:02:28,680 --> 01:02:29,835
0,210 210,420 420,720 720,975 975,1155
I'm so excited to see

1814
01:02:29,835 --> 01:02:30,620
0,165 165,285 285,390 390,525 525,785
what you will be doing

1815
01:02:30,640 --> 01:02:32,520
0,290 290,440 440,700 1050,1450 1620,1880
in the next years in

1816
01:02:32,520 --> 01:02:33,885
0,120 120,360 360,740 910,1185 1185,1365
the years ahead. So thank

1817
01:02:33,885 --> 01:02:35,810
0,165 165,315 315,605 865,1265 1525,1925
you very much and come

1818
01:02:35,860 --> 01:02:41,284
0,290 290,440 440,700
work with us.|
|
